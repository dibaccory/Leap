{
  "{\"sourceRoot\":\"/Users/bacchus/git/Leap/server\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/bacchus/git/Leap/server\",\"filename\":\"/Users/bacchus/git/Leap/server/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/bacchus/git/Leap/server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/bacchus/git/Leap/server",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/bacchus/git/Leap/server",
      "filename": "/Users/bacchus/git/Leap/server/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/bacchus/git/Leap/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/bacchus/git/Leap/server/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/bacchus/git/Leap/server/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/bacchus/git/Leap/server",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _http = _interopRequireDefault(require(\"./http\"));\n\nvar _socket = _interopRequireDefault(require(\"./socket\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar init = function init(ctx) {\n  return (0, _http[\"default\"])(ctx).then(_socket[\"default\"]);\n};\n\nvar config = {\n  port: process.env.PORT || 3001,\n  host: 'localhost'\n};\ninit({\n  config: config\n});\n/*\nThis connection begins when a user is 'logged in' to the app.\n-Entering the site, user is automatically generated a username (is usertype GUEST)\n-guests don't have saved games\n\nshould there be a master lobby where all logged in people can see games they can enter?\nthat'd be neat\n*/\n//Games client's user is subscribed to in ROOMS\n\n/* game = {\n    id: reGAWGRGAWFEF,\n    whitelist: boolean\n    users: {\n      [username]: {\n        name: ,\n        player: -1 | PLAYER_ONE | PLAYER_TWO,\n        active: boolean\n        icon: 'pic'\n      }\n  }\n}\n\n*/\n\n/*\nio.sockets.on('connection', socket => {\n\n  //login prompt (returning user / guest)\n  socket.on('login', d => {\n    //update client data\n    socket.player = d;\n    users[d.username] = d;\n    console.log(`CLIENT PLAYER: ${JSON.stringify(d)}`);\n    // if (d['isGuest'] is TRUE and d['username'] IN CACHE) then ROOMS is also in cache\n    //ROOMS = GET ACTIVE GAMES FROM DB\n\n  });\n\n  //saving changes in 'edit profile'\n  socket.on('userUpdate', user => {\n    socket.user = user;\n    socket.username = user.name;\n\n  });\n\n  socket.on('lobbyLoad', () => {\n    io.sockets.emit('lobbyLoadSuccess', ROOMS);\n  });\n\n  //create new game, then enter\n  socket.on('gameCreate', room => {\n\n    ROOMS[room.id] = room;\n    console.log(`NEW GAME: ${JSON.stringify(room)}`);\n    //UPDATE ROOMS to DB\n    io.sockets.emit('lobbyLoadSuccess', ROOMS);\n  });\n\n  socket.on('gameEnter', id => {\n    console.log(`USER ${JSON.stringify(socket.player)} ENTER GAME: ${id}`);\n    ROOMS[id]['users'][socket.player.name] = socket.player;\n    if (ROOMS[id].game) console.log(`GAME BOARD: ${JSON.stringify(ROOMS[id].game)}`);\n    socket.activeRoomID = id;\n    socket.join(id);\n    socket.emit('gameLoad', socket.player, ROOMS[id]);\n    socket.broadcast.to(id).emit('userActive', socket.player);\n\n  });\n\n  socket.on('gameLeave', id => {\n    delete ROOMS[id].users[socket.player.name];\n    socket.activeRoom = null;\n    socket.broadcast.to(id).emit('userInactive', socket.player.name);\n\n    //If there are any spectators, let them be the new thing or whatever\n\n  });\n\n  socket.on('gameSet', room => {\n    ROOMS[socket.activeRoomID] = room;\n  });\n\n  socket.on('gameBoardSend', (id, game) => {\n    console.log(`DID IT SEND: ${JSON.stringify(game)}`);\n    ROOMS[socket.activeRoomID].game = game;\n    console.log(`DID IT SEND: ${JSON.stringify(game.player)}`);\n    io.in(id).emit('gameBoardRecieve', game);\n  });\n\n  // socket.on('gameBoardSet', game => {\n  //   ROOMS[socket.activeRoomID].game = game;\n  //   ROOMS[socket.activeRoomID].game = game;\n  //   socket.broadcast.to(id).emit('gameBoardGet', game);\n  // });\n\n  socket.on('chatSend', msg => {\n    io.sockets.in(socket.activeRoom.id).emit('chatUpdate', socket.username, msg);\n  });\n\n  // socket.on('chatTyping', msg => {\n  //   io.sockets.in(socket.activeRoom.id).emit('chatUpdate', socket.username, msg);\n  // });\n\n  socket.on('disconnect', () => {\n\n  });\n\n});\n\n*/\n//const getAPIandEmit = \"TODO\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImluaXQiLCJjdHgiLCJ0aGVuIiwiaW5pdFNvY2tldElPIiwiY29uZmlnIiwicG9ydCIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwiaG9zdCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7OztBQUVBLElBQU1BLElBQUksR0FBRyxTQUFQQSxJQUFPLENBQUFDLEdBQUc7QUFBQSxTQUFJLHNCQUFlQSxHQUFmLEVBQW9CQyxJQUFwQixDQUF5QkMsa0JBQXpCLENBQUo7QUFBQSxDQUFoQjs7QUFDQSxJQUFNQyxNQUFNLEdBQUc7QUFBQ0MsRUFBQUEsSUFBSSxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUEzQjtBQUFpQ0MsRUFBQUEsSUFBSSxFQUFFO0FBQXZDLENBQWY7QUFDQVQsSUFBSSxDQUFDO0FBQUNJLEVBQUFBLE1BQU0sRUFBTkE7QUFBRCxDQUFELENBQUo7QUFHQTs7Ozs7Ozs7QUFTQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7O0FBY0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0ZBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9iYWNjaHVzL2dpdC9MZWFwL3NlcnZlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpbml0SHR0cFNlcnZlciBmcm9tICcuL2h0dHAnO1xuaW1wb3J0IGluaXRTb2NrZXRJTyBmcm9tICcuL3NvY2tldCc7XG5cbmNvbnN0IGluaXQgPSBjdHggPT4gaW5pdEh0dHBTZXJ2ZXIoY3R4KS50aGVuKGluaXRTb2NrZXRJTyk7XG5jb25zdCBjb25maWcgPSB7cG9ydDogcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAxLCBob3N0OiAnbG9jYWxob3N0J307XG5pbml0KHtjb25maWd9KTtcblxuXG4vKlxuVGhpcyBjb25uZWN0aW9uIGJlZ2lucyB3aGVuIGEgdXNlciBpcyAnbG9nZ2VkIGluJyB0byB0aGUgYXBwLlxuLUVudGVyaW5nIHRoZSBzaXRlLCB1c2VyIGlzIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGEgdXNlcm5hbWUgKGlzIHVzZXJ0eXBlIEdVRVNUKVxuLWd1ZXN0cyBkb24ndCBoYXZlIHNhdmVkIGdhbWVzXG5cbnNob3VsZCB0aGVyZSBiZSBhIG1hc3RlciBsb2JieSB3aGVyZSBhbGwgbG9nZ2VkIGluIHBlb3BsZSBjYW4gc2VlIGdhbWVzIHRoZXkgY2FuIGVudGVyP1xudGhhdCdkIGJlIG5lYXRcbiovXG5cbi8vR2FtZXMgY2xpZW50J3MgdXNlciBpcyBzdWJzY3JpYmVkIHRvIGluIFJPT01TXG4vKiBnYW1lID0ge1xuICAgIGlkOiByZUdBV0dSR0FXRkVGLFxuICAgIHdoaXRlbGlzdDogYm9vbGVhblxuICAgIHVzZXJzOiB7XG4gICAgICBbdXNlcm5hbWVdOiB7XG4gICAgICAgIG5hbWU6ICxcbiAgICAgICAgcGxheWVyOiAtMSB8IFBMQVlFUl9PTkUgfCBQTEFZRVJfVFdPLFxuICAgICAgICBhY3RpdmU6IGJvb2xlYW5cbiAgICAgICAgaWNvbjogJ3BpYydcbiAgICAgIH1cbiAgfVxufVxuXG4qL1xuLypcbmlvLnNvY2tldHMub24oJ2Nvbm5lY3Rpb24nLCBzb2NrZXQgPT4ge1xuXG4gIC8vbG9naW4gcHJvbXB0IChyZXR1cm5pbmcgdXNlciAvIGd1ZXN0KVxuICBzb2NrZXQub24oJ2xvZ2luJywgZCA9PiB7XG4gICAgLy91cGRhdGUgY2xpZW50IGRhdGFcbiAgICBzb2NrZXQucGxheWVyID0gZDtcbiAgICB1c2Vyc1tkLnVzZXJuYW1lXSA9IGQ7XG4gICAgY29uc29sZS5sb2coYENMSUVOVCBQTEFZRVI6ICR7SlNPTi5zdHJpbmdpZnkoZCl9YCk7XG4gICAgLy8gaWYgKGRbJ2lzR3Vlc3QnXSBpcyBUUlVFIGFuZCBkWyd1c2VybmFtZSddIElOIENBQ0hFKSB0aGVuIFJPT01TIGlzIGFsc28gaW4gY2FjaGVcbiAgICAvL1JPT01TID0gR0VUIEFDVElWRSBHQU1FUyBGUk9NIERCXG5cbiAgfSk7XG5cbiAgLy9zYXZpbmcgY2hhbmdlcyBpbiAnZWRpdCBwcm9maWxlJ1xuICBzb2NrZXQub24oJ3VzZXJVcGRhdGUnLCB1c2VyID0+IHtcbiAgICBzb2NrZXQudXNlciA9IHVzZXI7XG4gICAgc29ja2V0LnVzZXJuYW1lID0gdXNlci5uYW1lO1xuXG4gIH0pO1xuXG4gIHNvY2tldC5vbignbG9iYnlMb2FkJywgKCkgPT4ge1xuICAgIGlvLnNvY2tldHMuZW1pdCgnbG9iYnlMb2FkU3VjY2VzcycsIFJPT01TKTtcbiAgfSk7XG5cbiAgLy9jcmVhdGUgbmV3IGdhbWUsIHRoZW4gZW50ZXJcbiAgc29ja2V0Lm9uKCdnYW1lQ3JlYXRlJywgcm9vbSA9PiB7XG5cbiAgICBST09NU1tyb29tLmlkXSA9IHJvb207XG4gICAgY29uc29sZS5sb2coYE5FVyBHQU1FOiAke0pTT04uc3RyaW5naWZ5KHJvb20pfWApO1xuICAgIC8vVVBEQVRFIFJPT01TIHRvIERCXG4gICAgaW8uc29ja2V0cy5lbWl0KCdsb2JieUxvYWRTdWNjZXNzJywgUk9PTVMpO1xuICB9KTtcblxuICBzb2NrZXQub24oJ2dhbWVFbnRlcicsIGlkID0+IHtcbiAgICBjb25zb2xlLmxvZyhgVVNFUiAke0pTT04uc3RyaW5naWZ5KHNvY2tldC5wbGF5ZXIpfSBFTlRFUiBHQU1FOiAke2lkfWApO1xuICAgIFJPT01TW2lkXVsndXNlcnMnXVtzb2NrZXQucGxheWVyLm5hbWVdID0gc29ja2V0LnBsYXllcjtcbiAgICBpZiAoUk9PTVNbaWRdLmdhbWUpIGNvbnNvbGUubG9nKGBHQU1FIEJPQVJEOiAke0pTT04uc3RyaW5naWZ5KFJPT01TW2lkXS5nYW1lKX1gKTtcbiAgICBzb2NrZXQuYWN0aXZlUm9vbUlEID0gaWQ7XG4gICAgc29ja2V0LmpvaW4oaWQpO1xuICAgIHNvY2tldC5lbWl0KCdnYW1lTG9hZCcsIHNvY2tldC5wbGF5ZXIsIFJPT01TW2lkXSk7XG4gICAgc29ja2V0LmJyb2FkY2FzdC50byhpZCkuZW1pdCgndXNlckFjdGl2ZScsIHNvY2tldC5wbGF5ZXIpO1xuXG4gIH0pO1xuXG4gIHNvY2tldC5vbignZ2FtZUxlYXZlJywgaWQgPT4ge1xuICAgIGRlbGV0ZSBST09NU1tpZF0udXNlcnNbc29ja2V0LnBsYXllci5uYW1lXTtcbiAgICBzb2NrZXQuYWN0aXZlUm9vbSA9IG51bGw7XG4gICAgc29ja2V0LmJyb2FkY2FzdC50byhpZCkuZW1pdCgndXNlckluYWN0aXZlJywgc29ja2V0LnBsYXllci5uYW1lKTtcblxuICAgIC8vSWYgdGhlcmUgYXJlIGFueSBzcGVjdGF0b3JzLCBsZXQgdGhlbSBiZSB0aGUgbmV3IHRoaW5nIG9yIHdoYXRldmVyXG5cbiAgfSk7XG5cbiAgc29ja2V0Lm9uKCdnYW1lU2V0Jywgcm9vbSA9PiB7XG4gICAgUk9PTVNbc29ja2V0LmFjdGl2ZVJvb21JRF0gPSByb29tO1xuICB9KTtcblxuICBzb2NrZXQub24oJ2dhbWVCb2FyZFNlbmQnLCAoaWQsIGdhbWUpID0+IHtcbiAgICBjb25zb2xlLmxvZyhgRElEIElUIFNFTkQ6ICR7SlNPTi5zdHJpbmdpZnkoZ2FtZSl9YCk7XG4gICAgUk9PTVNbc29ja2V0LmFjdGl2ZVJvb21JRF0uZ2FtZSA9IGdhbWU7XG4gICAgY29uc29sZS5sb2coYERJRCBJVCBTRU5EOiAke0pTT04uc3RyaW5naWZ5KGdhbWUucGxheWVyKX1gKTtcbiAgICBpby5pbihpZCkuZW1pdCgnZ2FtZUJvYXJkUmVjaWV2ZScsIGdhbWUpO1xuICB9KTtcblxuICAvLyBzb2NrZXQub24oJ2dhbWVCb2FyZFNldCcsIGdhbWUgPT4ge1xuICAvLyAgIFJPT01TW3NvY2tldC5hY3RpdmVSb29tSURdLmdhbWUgPSBnYW1lO1xuICAvLyAgIFJPT01TW3NvY2tldC5hY3RpdmVSb29tSURdLmdhbWUgPSBnYW1lO1xuICAvLyAgIHNvY2tldC5icm9hZGNhc3QudG8oaWQpLmVtaXQoJ2dhbWVCb2FyZEdldCcsIGdhbWUpO1xuICAvLyB9KTtcblxuICBzb2NrZXQub24oJ2NoYXRTZW5kJywgbXNnID0+IHtcbiAgICBpby5zb2NrZXRzLmluKHNvY2tldC5hY3RpdmVSb29tLmlkKS5lbWl0KCdjaGF0VXBkYXRlJywgc29ja2V0LnVzZXJuYW1lLCBtc2cpO1xuICB9KTtcblxuICAvLyBzb2NrZXQub24oJ2NoYXRUeXBpbmcnLCBtc2cgPT4ge1xuICAvLyAgIGlvLnNvY2tldHMuaW4oc29ja2V0LmFjdGl2ZVJvb20uaWQpLmVtaXQoJ2NoYXRVcGRhdGUnLCBzb2NrZXQudXNlcm5hbWUsIG1zZyk7XG4gIC8vIH0pO1xuXG4gIHNvY2tldC5vbignZGlzY29ubmVjdCcsICgpID0+IHtcblxuICB9KTtcblxufSk7XG5cbiovXG4vL2NvbnN0IGdldEFQSWFuZEVtaXQgPSBcIlRPRE9cIjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "init",
        "ctx",
        "then",
        "initSocketIO",
        "config",
        "port",
        "process",
        "env",
        "PORT",
        "host"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAAAC,GAAG;AAAA,SAAI,sBAAeA,GAAf,EAAoBC,IAApB,CAAyBC,kBAAzB,CAAJ;AAAA,CAAhB;;AACA,IAAMC,MAAM,GAAG;AAACC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAA3B;AAAiCC,EAAAA,IAAI,EAAE;AAAvC,CAAf;AACAT,IAAI,CAAC;AAACI,EAAAA,MAAM,EAANA;AAAD,CAAD,CAAJ;AAGA;;;;;;;;AASA;;AACA;;;;;;;;;;;;;;;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA",
      "sourceRoot": "/Users/bacchus/git/Leap/server",
      "sourcesContent": [
        "import initHttpServer from './http';\nimport initSocketIO from './socket';\n\nconst init = ctx => initHttpServer(ctx).then(initSocketIO);\nconst config = {port: process.env.PORT || 3001, host: 'localhost'};\ninit({config});\n\n\n/*\nThis connection begins when a user is 'logged in' to the app.\n-Entering the site, user is automatically generated a username (is usertype GUEST)\n-guests don't have saved games\n\nshould there be a master lobby where all logged in people can see games they can enter?\nthat'd be neat\n*/\n\n//Games client's user is subscribed to in ROOMS\n/* game = {\n    id: reGAWGRGAWFEF,\n    whitelist: boolean\n    users: {\n      [username]: {\n        name: ,\n        player: -1 | PLAYER_ONE | PLAYER_TWO,\n        active: boolean\n        icon: 'pic'\n      }\n  }\n}\n\n*/\n/*\nio.sockets.on('connection', socket => {\n\n  //login prompt (returning user / guest)\n  socket.on('login', d => {\n    //update client data\n    socket.player = d;\n    users[d.username] = d;\n    console.log(`CLIENT PLAYER: ${JSON.stringify(d)}`);\n    // if (d['isGuest'] is TRUE and d['username'] IN CACHE) then ROOMS is also in cache\n    //ROOMS = GET ACTIVE GAMES FROM DB\n\n  });\n\n  //saving changes in 'edit profile'\n  socket.on('userUpdate', user => {\n    socket.user = user;\n    socket.username = user.name;\n\n  });\n\n  socket.on('lobbyLoad', () => {\n    io.sockets.emit('lobbyLoadSuccess', ROOMS);\n  });\n\n  //create new game, then enter\n  socket.on('gameCreate', room => {\n\n    ROOMS[room.id] = room;\n    console.log(`NEW GAME: ${JSON.stringify(room)}`);\n    //UPDATE ROOMS to DB\n    io.sockets.emit('lobbyLoadSuccess', ROOMS);\n  });\n\n  socket.on('gameEnter', id => {\n    console.log(`USER ${JSON.stringify(socket.player)} ENTER GAME: ${id}`);\n    ROOMS[id]['users'][socket.player.name] = socket.player;\n    if (ROOMS[id].game) console.log(`GAME BOARD: ${JSON.stringify(ROOMS[id].game)}`);\n    socket.activeRoomID = id;\n    socket.join(id);\n    socket.emit('gameLoad', socket.player, ROOMS[id]);\n    socket.broadcast.to(id).emit('userActive', socket.player);\n\n  });\n\n  socket.on('gameLeave', id => {\n    delete ROOMS[id].users[socket.player.name];\n    socket.activeRoom = null;\n    socket.broadcast.to(id).emit('userInactive', socket.player.name);\n\n    //If there are any spectators, let them be the new thing or whatever\n\n  });\n\n  socket.on('gameSet', room => {\n    ROOMS[socket.activeRoomID] = room;\n  });\n\n  socket.on('gameBoardSend', (id, game) => {\n    console.log(`DID IT SEND: ${JSON.stringify(game)}`);\n    ROOMS[socket.activeRoomID].game = game;\n    console.log(`DID IT SEND: ${JSON.stringify(game.player)}`);\n    io.in(id).emit('gameBoardRecieve', game);\n  });\n\n  // socket.on('gameBoardSet', game => {\n  //   ROOMS[socket.activeRoomID].game = game;\n  //   ROOMS[socket.activeRoomID].game = game;\n  //   socket.broadcast.to(id).emit('gameBoardGet', game);\n  // });\n\n  socket.on('chatSend', msg => {\n    io.sockets.in(socket.activeRoom.id).emit('chatUpdate', socket.username, msg);\n  });\n\n  // socket.on('chatTyping', msg => {\n  //   io.sockets.in(socket.activeRoom.id).emit('chatUpdate', socket.username, msg);\n  // });\n\n  socket.on('disconnect', () => {\n\n  });\n\n});\n\n*/\n//const getAPIandEmit = \"TODO\";\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1582847643154
  },
  "{\"sourceRoot\":\"/Users/bacchus/git/Leap/server/http\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/bacchus/git/Leap/server\",\"filename\":\"/Users/bacchus/git/Leap/server/http/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/bacchus/git/Leap/server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/bacchus/git/Leap/server/http",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/bacchus/git/Leap/server",
      "filename": "/Users/bacchus/git/Leap/server/http/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/bacchus/git/Leap/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/bacchus/git/Leap/server/http/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/bacchus/git/Leap/server/http/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/bacchus/git/Leap/server/http",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar getUrl = function getUrl(server) {\n  return \"http://\".concat(server.address().address, \":\").concat(server.address().port);\n};\n\nvar bindCtx = function bindCtx(ctx) {\n  return function (req, res, next) {\n    req.ctx = ctx;\n    next();\n  };\n};\n\nvar init = function init(ctx) {\n  var config = ctx.config;\n  console.log('config: ', config);\n  var port = config.port,\n      host = config.host;\n  var app = (0, _express[\"default\"])();\n\n  var router = _express[\"default\"].Router();\n\n  router.get('/', function (req, res) {\n    res.send({\n      response: 'router test'\n    });\n  });\n  app.use(router);\n\n  var httpServer = _http[\"default\"].createServer(app);\n\n  var promise = new Promise(function (resolve) {\n    app.use(bindCtx(ctx));\n    httpServer.listen(port, host, function () {\n      console.log('httpServer: ', httpServer.address());\n      httpServer.url = getUrl(httpServer);\n      resolve(_objectSpread({}, ctx, {\n        http: httpServer\n      }));\n    });\n  });\n  return promise;\n};\n\nvar _default = init;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImdldFVybCIsInNlcnZlciIsImFkZHJlc3MiLCJwb3J0IiwiYmluZEN0eCIsImN0eCIsInJlcSIsInJlcyIsIm5leHQiLCJpbml0IiwiY29uZmlnIiwiY29uc29sZSIsImxvZyIsImhvc3QiLCJhcHAiLCJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwiZ2V0Iiwic2VuZCIsInJlc3BvbnNlIiwidXNlIiwiaHR0cFNlcnZlciIsImh0dHAiLCJjcmVhdGVTZXJ2ZXIiLCJwcm9taXNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJsaXN0ZW4iLCJ1cmwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7OztBQUVBLElBQU1BLE1BQU0sR0FBRyxTQUFUQSxNQUFTLENBQUFDLE1BQU07QUFBQSwwQkFBY0EsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQSxPQUEvQixjQUEwQ0QsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxJQUEzRDtBQUFBLENBQXJCOztBQUNBLElBQU1DLE9BQU8sR0FBRyxTQUFWQSxPQUFVLENBQUNDLEdBQUQ7QUFBQSxTQUFTLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQzNDRixJQUFBQSxHQUFHLENBQUNELEdBQUosR0FBVUEsR0FBVjtBQUNBRyxJQUFBQSxJQUFJO0FBQ0wsR0FIZTtBQUFBLENBQWhCOztBQUtBLElBQU1DLElBQUksR0FBRyxTQUFQQSxJQUFPLENBQUFKLEdBQUcsRUFBSTtBQUFBLE1BQ1ZLLE1BRFUsR0FDQ0wsR0FERCxDQUNWSyxNQURVO0FBRWxCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxVQUFaLEVBQXdCRixNQUF4QjtBQUZrQixNQUdWUCxJQUhVLEdBR0tPLE1BSEwsQ0FHVlAsSUFIVTtBQUFBLE1BR0pVLElBSEksR0FHS0gsTUFITCxDQUdKRyxJQUhJO0FBSWxCLE1BQU1DLEdBQUcsR0FBRywwQkFBWjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdDLG9CQUFRQyxNQUFSLEVBQWY7O0FBQ0FGLEVBQUFBLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBQ1osR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBRUEsSUFBQUEsR0FBRyxDQUFDWSxJQUFKLENBQVM7QUFBQ0MsTUFBQUEsUUFBUSxFQUFFO0FBQVgsS0FBVDtBQUFzQyxHQUF0RTtBQUNBTixFQUFBQSxHQUFHLENBQUNPLEdBQUosQ0FBUU4sTUFBUjs7QUFDQSxNQUFNTyxVQUFVLEdBQUdDLGlCQUFLQyxZQUFMLENBQWtCVixHQUFsQixDQUFuQjs7QUFDQSxNQUFNVyxPQUFPLEdBQUcsSUFBSUMsT0FBSixDQUFhLFVBQUFDLE9BQU8sRUFBSTtBQUN0Q2IsSUFBQUEsR0FBRyxDQUFDTyxHQUFKLENBQVFqQixPQUFPLENBQUNDLEdBQUQsQ0FBZjtBQUNBaUIsSUFBQUEsVUFBVSxDQUFDTSxNQUFYLENBQWtCekIsSUFBbEIsRUFBd0JVLElBQXhCLEVBQThCLFlBQU07QUFDaENGLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGNBQVosRUFBNEJVLFVBQVUsQ0FBQ3BCLE9BQVgsRUFBNUI7QUFDQW9CLE1BQUFBLFVBQVUsQ0FBQ08sR0FBWCxHQUFpQjdCLE1BQU0sQ0FBQ3NCLFVBQUQsQ0FBdkI7QUFDQUssTUFBQUEsT0FBTyxtQkFBTXRCLEdBQU47QUFBV2tCLFFBQUFBLElBQUksRUFBRUQ7QUFBakIsU0FBUDtBQUNILEtBSkQ7QUFLRCxHQVBlLENBQWhCO0FBU0EsU0FBT0csT0FBUDtBQUNELENBbkJEOztlQXFCZWhCLEkiLCJzb3VyY2VSb290IjoiL1VzZXJzL2JhY2NodXMvZ2l0L0xlYXAvc2VydmVyL2h0dHAiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaHR0cCBmcm9tICdodHRwJztcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG5jb25zdCBnZXRVcmwgPSBzZXJ2ZXIgPT4gYGh0dHA6Ly8ke3NlcnZlci5hZGRyZXNzKCkuYWRkcmVzc306JHtzZXJ2ZXIuYWRkcmVzcygpLnBvcnR9YDtcbmNvbnN0IGJpbmRDdHggPSAoY3R4KSA9PiAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgcmVxLmN0eCA9IGN0eDtcbiAgbmV4dCgpO1xufTtcblxuY29uc3QgaW5pdCA9IGN0eCA9PiB7XG4gIGNvbnN0IHsgY29uZmlnIH0gPSBjdHg7XG4gIGNvbnNvbGUubG9nKCdjb25maWc6ICcsIGNvbmZpZylcbiAgY29uc3QgeyBwb3J0LCBob3N0IH0gPSBjb25maWc7XG4gIGNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbiAgY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbiAgcm91dGVyLmdldCgnLycsIChyZXEsIHJlcykgPT4geyByZXMuc2VuZCh7cmVzcG9uc2U6ICdyb3V0ZXIgdGVzdCcgfSkgfSApO1xuICBhcHAudXNlKHJvdXRlcik7XG4gIGNvbnN0IGh0dHBTZXJ2ZXIgPSBodHRwLmNyZWF0ZVNlcnZlcihhcHApO1xuICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UoIHJlc29sdmUgPT4ge1xuICAgIGFwcC51c2UoYmluZEN0eChjdHgpKTtcbiAgICBodHRwU2VydmVyLmxpc3Rlbihwb3J0LCBob3N0LCAoKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdodHRwU2VydmVyOiAnLCBodHRwU2VydmVyLmFkZHJlc3MoKSlcbiAgICAgICAgaHR0cFNlcnZlci51cmwgPSBnZXRVcmwoaHR0cFNlcnZlcik7XG4gICAgICAgIHJlc29sdmUoeyAuLi5jdHgsIGh0dHA6IGh0dHBTZXJ2ZXIgfSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIHJldHVybiBwcm9taXNlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpbml0O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "getUrl",
        "server",
        "address",
        "port",
        "bindCtx",
        "ctx",
        "req",
        "res",
        "next",
        "init",
        "config",
        "console",
        "log",
        "host",
        "app",
        "router",
        "express",
        "Router",
        "get",
        "send",
        "response",
        "use",
        "httpServer",
        "http",
        "createServer",
        "promise",
        "Promise",
        "resolve",
        "listen",
        "url"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;AAEA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAAC,MAAM;AAAA,0BAAcA,MAAM,CAACC,OAAP,GAAiBA,OAA/B,cAA0CD,MAAM,CAACC,OAAP,GAAiBC,IAA3D;AAAA,CAArB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD;AAAA,SAAS,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3CF,IAAAA,GAAG,CAACD,GAAJ,GAAUA,GAAV;AACAG,IAAAA,IAAI;AACL,GAHe;AAAA,CAAhB;;AAKA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAJ,GAAG,EAAI;AAAA,MACVK,MADU,GACCL,GADD,CACVK,MADU;AAElBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AAFkB,MAGVP,IAHU,GAGKO,MAHL,CAGVP,IAHU;AAAA,MAGJU,IAHI,GAGKH,MAHL,CAGJG,IAHI;AAIlB,MAAMC,GAAG,GAAG,0BAAZ;;AACA,MAAMC,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AACAF,EAAAA,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,UAACZ,GAAD,EAAMC,GAAN,EAAc;AAAEA,IAAAA,GAAG,CAACY,IAAJ,CAAS;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAT;AAAsC,GAAtE;AACAN,EAAAA,GAAG,CAACO,GAAJ,CAAQN,MAAR;;AACA,MAAMO,UAAU,GAAGC,iBAAKC,YAAL,CAAkBV,GAAlB,CAAnB;;AACA,MAAMW,OAAO,GAAG,IAAIC,OAAJ,CAAa,UAAAC,OAAO,EAAI;AACtCb,IAAAA,GAAG,CAACO,GAAJ,CAAQjB,OAAO,CAACC,GAAD,CAAf;AACAiB,IAAAA,UAAU,CAACM,MAAX,CAAkBzB,IAAlB,EAAwBU,IAAxB,EAA8B,YAAM;AAChCF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BU,UAAU,CAACpB,OAAX,EAA5B;AACAoB,MAAAA,UAAU,CAACO,GAAX,GAAiB7B,MAAM,CAACsB,UAAD,CAAvB;AACAK,MAAAA,OAAO,mBAAMtB,GAAN;AAAWkB,QAAAA,IAAI,EAAED;AAAjB,SAAP;AACH,KAJD;AAKD,GAPe,CAAhB;AASA,SAAOG,OAAP;AACD,CAnBD;;eAqBehB,I",
      "sourceRoot": "/Users/bacchus/git/Leap/server/http",
      "sourcesContent": [
        "import http from 'http';\nimport express from 'express';\n\nconst getUrl = server => `http://${server.address().address}:${server.address().port}`;\nconst bindCtx = (ctx) => (req, res, next) => {\n  req.ctx = ctx;\n  next();\n};\n\nconst init = ctx => {\n  const { config } = ctx;\n  console.log('config: ', config)\n  const { port, host } = config;\n  const app = express();\n  const router = express.Router();\n  router.get('/', (req, res) => { res.send({response: 'router test' }) } );\n  app.use(router);\n  const httpServer = http.createServer(app);\n  const promise = new Promise( resolve => {\n    app.use(bindCtx(ctx));\n    httpServer.listen(port, host, () => {\n        console.log('httpServer: ', httpServer.address())\n        httpServer.url = getUrl(httpServer);\n        resolve({ ...ctx, http: httpServer });\n    });\n  });\n\n  return promise;\n}\n\nexport default init;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1582847570741
  },
  "{\"sourceRoot\":\"/Users/bacchus/git/Leap/server/socket\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/bacchus/git/Leap/server\",\"filename\":\"/Users/bacchus/git/Leap/server/socket/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/bacchus/git/Leap/server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/bacchus/git/Leap/server/socket",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/bacchus/git/Leap/server",
      "filename": "/Users/bacchus/git/Leap/server/socket/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/bacchus/git/Leap/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/bacchus/git/Leap/server/socket/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/bacchus/git/Leap/server/socket/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/bacchus/git/Leap/server/socket",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _io = _interopRequireDefault(require(\"./io\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar init = function init(ctx) {\n  var promise = new Promise(function (resolve) {\n    var io = (0, _io[\"default\"])(ctx.http); //logger('Socket.io initialized');\n\n    console.log(io);\n    resolve(_objectSpread({}, ctx, {\n      io: io\n    }));\n  });\n  return promise;\n};\n\nvar _default = init;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImluaXQiLCJjdHgiLCJwcm9taXNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJpbyIsImh0dHAiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxJQUFJLEdBQUcsU0FBUEEsSUFBTyxDQUFBQyxHQUFHLEVBQUk7QUFDbEIsTUFBTUMsT0FBTyxHQUFHLElBQUlDLE9BQUosQ0FBYSxVQUFBQyxPQUFPLEVBQUk7QUFDdEMsUUFBTUMsRUFBRSxHQUFHLG9CQUFHSixHQUFHLENBQUNLLElBQVAsQ0FBWCxDQURzQyxDQUV0Qzs7QUFDQUMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlILEVBQVo7QUFDQUQsSUFBQUEsT0FBTyxtQkFBTUgsR0FBTjtBQUFXSSxNQUFBQSxFQUFFLEVBQUdBO0FBQWhCLE9BQVA7QUFDRCxHQUxlLENBQWhCO0FBT0EsU0FBT0gsT0FBUDtBQUNELENBVEQ7O2VBV2VGLEkiLCJzb3VyY2VSb290IjoiL1VzZXJzL2JhY2NodXMvZ2l0L0xlYXAvc2VydmVyL3NvY2tldCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBJTyBmcm9tICcuL2lvJztcblxuY29uc3QgaW5pdCA9IGN0eCA9PiB7XG4gIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSggcmVzb2x2ZSA9PiB7XG4gICAgY29uc3QgaW8gPSBJTyhjdHguaHR0cCk7XG4gICAgLy9sb2dnZXIoJ1NvY2tldC5pbyBpbml0aWFsaXplZCcpO1xuICAgIGNvbnNvbGUubG9nKGlvKTtcbiAgICByZXNvbHZlKHsgLi4uY3R4LCBpbzogKGlvKSB9KTtcbiAgfSk7XG5cbiAgcmV0dXJuIHByb21pc2U7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBpbml0O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "init",
        "ctx",
        "promise",
        "Promise",
        "resolve",
        "io",
        "http",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAAAC,GAAG,EAAI;AAClB,MAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAa,UAAAC,OAAO,EAAI;AACtC,QAAMC,EAAE,GAAG,oBAAGJ,GAAG,CAACK,IAAP,CAAX,CADsC,CAEtC;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACAD,IAAAA,OAAO,mBAAMH,GAAN;AAAWI,MAAAA,EAAE,EAAGA;AAAhB,OAAP;AACD,GALe,CAAhB;AAOA,SAAOH,OAAP;AACD,CATD;;eAWeF,I",
      "sourceRoot": "/Users/bacchus/git/Leap/server/socket",
      "sourcesContent": [
        "import IO from './io';\n\nconst init = ctx => {\n  const promise = new Promise( resolve => {\n    const io = IO(ctx.http);\n    //logger('Socket.io initialized');\n    console.log(io);\n    resolve({ ...ctx, io: (io) });\n  });\n\n  return promise;\n};\n\nexport default init;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583353825375
  },
  "{\"sourceRoot\":\"/Users/bacchus/git/Leap/server/socket\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/bacchus/git/Leap/server\",\"filename\":\"/Users/bacchus/git/Leap/server/socket/io.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/bacchus/git/Leap/server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/bacchus/git/Leap/server/socket",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/bacchus/git/Leap/server",
      "filename": "/Users/bacchus/git/Leap/server/socket/io.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/bacchus/git/Leap/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/bacchus/git/Leap/server/socket/io.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/bacchus/git/Leap/server/socket/io.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/bacchus/git/Leap/server/socket",
        "sourceFileName": "io.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _socket = _interopRequireDefault(require(\"socket.io\"));\n\nvar _leap = _interopRequireDefault(require(\"../assets/leap\"));\n\nvar _eventTypes = require(\"../constants/eventTypes\");\n\nvar _constants = require(\"../constants/\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar onlineUsers = {};\nvar rooms = {\n  'room1': {\n    game: new _leap[\"default\"](4, 8, 0),\n    whitelist: false,\n    users: [],\n    host: 'user1',\n    player: {\n      one: '',\n      two: ''\n    }\n  },\n  'room2': {\n    game: new _leap[\"default\"](4, 8, 0),\n    whitelist: false,\n    users: [],\n    host: 'user2',\n    player: {\n      one: '',\n      two: ''\n    }\n  }\n};\nvar client;\nvar io;\n\nvar emitToRoom = function emitToRoom(action) {\n  io.emit('message', action);\n};\n\nvar broadcastToRoom = function broadcastToRoom() {};\n\nvar emitToSocket = function emitToSocket() {};\n\nvar setPlayer = function setPlayer(room, uid) {\n  if (room.player.one === room.player.two) {\n    if (room.game.turn === 4) room.player.one = uid;else room.player.two = uid;\n  } else if (room.player.one) room.player.two = uid;else room.player.one = uid;\n\n  console.log(\"\".concat(client, \" is now player \").concat(room.player.one === uid ? 'one' : 'two'));\n};\n\nfunction IO(_x) {\n  return _IO.apply(this, arguments);\n}\n\nfunction _IO() {\n  _IO = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(server) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            io = (0, _socket[\"default\"])(server);\n            io.origins('*:*');\n            io.on(_eventTypes.CONNECTION,\n            /*#__PURE__*/\n            function () {\n              var _ref = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(socket) {\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        //io.emit('connect');\n                        socket.on(_eventTypes.DISCONNECT, function () {\n                          disconnect();\n                        }).on(_eventTypes.EVENT.USER, function (data) {\n                          userEvent(socket, data);\n                        }).on(_eventTypes.EVENT.LOBBY, function (data) {\n                          roomEvent(data);\n                        }).on(_eventTypes.EVENT.ROOM, function (data) {\n                          roomEvent(socket, data);\n                        }).on(_eventTypes.EVENT.GAME, function (data) {\n                          gameEvent(data);\n                        }).on(_eventTypes.EVENT.CHAT, function (data) {\n                          chatEvent(data);\n                        });\n\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x2) {\n                return _ref.apply(this, arguments);\n              };\n            }());\n            return _context2.abrupt(\"return\", io);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _IO.apply(this, arguments);\n}\n\nvar disconnect = function disconnect() {\n  delete onlineUsers[client];\n  console.log(JSON.stringify(onlineUsers));\n};\n\nvar userEvent = function userEvent(socket, action) {\n  //login, logout, updateUserInfo\n  console.log(\"USER EVENT: \".concat(action.type));\n\n  switch (action.type) {\n    case _constants.USER.LOGIN:\n      console.log(action.payload);\n      onlineUsers[action.payload.me.id] = action.payload.me;\n      client = action.payload.me.id;\n      console.log(\"\".concat(action.payload.me.name, \" joined!\"));\n      console.log('send rooms over');\n      io.to(socket.id).emit('message', {\n        type: _constants.USER.LOGIN,\n        payload: {\n          rooms: rooms,\n          me: action.payload.me\n        }\n      });\n      break;\n\n    case _constants.USER.LOGOUT:\n      client = ''; //go back to session ID\n\n      break;\n\n    case _constants.USER.UPDATE:\n      break;\n\n    default:\n      break;\n  }\n};\n\nvar lobbyEvent = function lobbyEvent(action) {\n  console.log('LOBBY EVENT');\n\n  switch (action.type) {\n    case _constants.LOBBY.ADD_ROOM:\n      rooms[action.payload.id] = action.payload.room;\n      io.emit(_constants.LOBBY.ADD_ROOM, {\n        type: _constants.LOBBY.ADD_ROOM,\n        payload: {\n          rooms: rooms\n        }\n      });\n      break;\n\n    case _constants.LOBBY.REMOVE_ROOM:\n      delete rooms[action.payload.id];\n      break;\n\n    case _constants.LOBBY.UPDATE:\n      break;\n\n    case _constants.ROOM.DELETE:\n      break;\n\n    default:\n  }\n};\n\nvar roomEvent = function roomEvent(socket, action) {\n  console.log('ROOM EVENT');\n  console.log(JSON.stringify(action));\n\n  switch (action.type) {\n    case _constants.ROOM.ENTER:\n      var me = action.payload.me;\n      var roomID = action.payload.roomID;\n      var activeRoom = rooms[roomID];\n      rooms[roomID].users.push(me.id);\n      console.log(\"\".concat(me.name, \" entered Room \").concat(roomID));\n      if (!(rooms[roomID].player.one && rooms[roomID].player.two)) setPlayer(rooms[roomID], me.id);\n      console.log(\"player deets: \".concat(JSON.stringify(rooms[roomID].player)));\n      io.to(socket.id).emit('message', {\n        type: _constants.ROOM.ENTER,\n        payload: {\n          rooms: rooms\n        }\n      });\n      break;\n\n    case _constants.ROOM.EXIT:\n      break;\n\n    case _constants.ROOM.SUBMIT_MOVE:\n      //TODO: verify board state first\n      //let { roomID, game, move } = action.payload;\n\n      /*\n      CHECKS:\n        is move valid?\n        is rooms[roomID].game === game?\n      */\n      var isWin = rooms[action.payload.roomID].game.doMove(action.payload.move);\n      action.type = _constants.ROOM.UPDATE_GAME;\n      emitToRoom(action);\n      break;\n\n    case _constants.ROOM.ADD:\n      break;\n\n    case _constants.ROOM.DELETE:\n      break;\n\n    default:\n  }\n};\n\nvar gameEvent = function gameEvent(data) {\n  //gameStart, gameMove, gameEnd\n  switch (data.action) {\n    case _constants.GAME.START:\n      break;\n\n    case _constants.GAME.MOVE:\n      break;\n\n    case _constants.GAME.END:\n      break;\n\n    default:\n  }\n};\n\nvar chatEvent = function chatEvent(data) {\n  //chatSend, chatTyping\n  switch (data.action) {\n    case _constants.CHAT.SEND:\n      break;\n\n    case _constants.CHAT.TYPING:\n      break;\n\n    default:\n  }\n};\n\nvar _default = IO;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "io.js"
      ],
      "names": [
        "onlineUsers",
        "rooms",
        "game",
        "Leap",
        "whitelist",
        "users",
        "host",
        "player",
        "one",
        "two",
        "client",
        "io",
        "emitToRoom",
        "action",
        "emit",
        "broadcastToRoom",
        "emitToSocket",
        "setPlayer",
        "room",
        "uid",
        "turn",
        "console",
        "log",
        "IO",
        "server",
        "origins",
        "on",
        "CONNECTION",
        "socket",
        "DISCONNECT",
        "disconnect",
        "EVENT",
        "USER",
        "data",
        "userEvent",
        "LOBBY",
        "roomEvent",
        "ROOM",
        "GAME",
        "gameEvent",
        "CHAT",
        "chatEvent",
        "JSON",
        "stringify",
        "type",
        "LOGIN",
        "payload",
        "me",
        "id",
        "name",
        "to",
        "LOGOUT",
        "UPDATE",
        "lobbyEvent",
        "ADD_ROOM",
        "REMOVE_ROOM",
        "DELETE",
        "ENTER",
        "roomID",
        "activeRoom",
        "push",
        "EXIT",
        "SUBMIT_MOVE",
        "isWin",
        "doMove",
        "move",
        "UPDATE_GAME",
        "ADD",
        "START",
        "MOVE",
        "END",
        "SEND",
        "TYPING"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/bacchus/git/Leap/server/socket",
      "sourcesContent": [
        "import socket from 'socket.io';\nimport Leap from '../assets/leap';\nimport { EVENT, CONNECTION, DISCONNECT } from '../constants/eventTypes';\nimport { USER, LOBBY, ROOM, GAME, CHAT } from '../constants/';\n\n\n\nconst onlineUsers = {};\nconst rooms = {\n  'room1': {\n    game: new Leap (4,8,0),\n    whitelist: false,\n    users: [],\n    host: 'user1',\n    player: {\n      one: '',\n      two: '',\n    }\n\n  },\n  'room2': {\n    game: new Leap (4,8,0),\n    whitelist: false,\n    users: [],\n    host: 'user2',\n    player: {\n      one: '',\n      two: '',\n    }\n  },\n};\nvar client;\n\nvar io;\n\nconst emitToRoom = (action) => { io.emit('message', action) };\nconst broadcastToRoom = () => {};\nconst emitToSocket = () => {};\n\nconst setPlayer = (room, uid) => {\n  if (room.player.one === room.player.two) {\n    if (room.game.turn === 4) room.player.one = uid;\n    else room.player.two = uid;\n  } else if (room.player.one) room.player.two = uid;\n  else room.player.one = uid;\n\n  console.log(`${client} is now player ${room.player.one === uid ? 'one' : 'two' }`);\n}\n\nasync function IO (server) {\n  io = socket(server);\n  io.origins('*:*');\n  io.on(CONNECTION, async socket => {\n    //io.emit('connect');\n      socket\n        .on(DISCONNECT, () => { disconnect() })\n        .on(EVENT.USER, data => { userEvent(socket, data) })\n        .on(EVENT.LOBBY, data => { roomEvent(data) })\n        .on(EVENT.ROOM, data => { roomEvent(socket, data) })\n        .on(EVENT.GAME, data => { gameEvent(data) })\n        .on(EVENT.CHAT, data => { chatEvent(data) });\n  });\n\n  return io;\n}\n\nconst disconnect = () => {\n  delete onlineUsers[client];\n  console.log(JSON.stringify(onlineUsers));\n}\nconst userEvent = (socket, action) => { //login, logout, updateUserInfo\n  console.log(`USER EVENT: ${action.type}`);\n  switch (action.type) {\n    case USER.LOGIN:\n      console.log(action.payload);\n      onlineUsers[action.payload.me.id] = action.payload.me;\n      client = action.payload.me.id;\n      console.log(`${action.payload.me.name} joined!`);\n      console.log('send rooms over');\n      io.to(socket.id).emit('message', {type: USER.LOGIN, payload: {rooms: rooms, me: action.payload.me}});\n      break;\n    case USER.LOGOUT:\n      client = ''; //go back to session ID\n      break;\n    case USER.UPDATE:\n      break;\n    default:\n      break;\n  }\n}\n\nconst lobbyEvent = action => {\n    console.log('LOBBY EVENT')\n  switch (action.type) {\n    case LOBBY.ADD_ROOM:\n      rooms[action.payload.id] = action.payload.room;\n\n      io.emit(LOBBY.ADD_ROOM, {\n        type: LOBBY.ADD_ROOM,\n        payload: { rooms }\n        });\n\n      break;\n    case LOBBY.REMOVE_ROOM:\n      delete rooms[action.payload.id];\n      break;\n    case LOBBY.UPDATE:\n      break;\n    case ROOM.DELETE:\n      break;\n    default:\n  }\n}\n\nconst roomEvent = (socket, action) => {\n    console.log('ROOM EVENT')\n    console.log(JSON.stringify(action));\n  switch (action.type) {\n    case ROOM.ENTER:\n      const me = action.payload.me;\n      const roomID = action.payload.roomID;\n      const activeRoom = rooms[roomID];\n      rooms[roomID].users.push(me.id);\n      console.log(`${me.name} entered Room ${roomID}`);\n\n      if(!(rooms[roomID].player.one && rooms[roomID].player.two)) setPlayer(rooms[roomID], me.id);\n      console.log(`player deets: ${JSON.stringify(rooms[roomID].player)}`)\n      io.to(socket.id).emit('message', {type: ROOM.ENTER, payload: {rooms:rooms}});\n\n\n      break;\n    case ROOM.EXIT:\n      break;\n    case ROOM.SUBMIT_MOVE:\n      //TODO: verify board state first\n      //let { roomID, game, move } = action.payload;\n      /*\n      CHECKS:\n        is move valid?\n        is rooms[roomID].game === game?\n      */\n      const isWin = rooms[action.payload.roomID].game.doMove(action.payload.move);\n      action.type = ROOM.UPDATE_GAME;\n      emitToRoom(action);\n\n      break;\n    case ROOM.ADD:\n      break;\n    case ROOM.DELETE:\n      break;\n    default:\n  }\n}\n\nconst gameEvent = (data) => { //gameStart, gameMove, gameEnd\n  switch (data.action) {\n    case GAME.START:\n      break;\n    case GAME.MOVE:\n      break;\n    case GAME.END:\n      break;\n    default:\n  }\n}\nconst chatEvent = (data) => { //chatSend, chatTyping\n  switch (data.action) {\n    case CHAT.SEND:\n      break;\n    case CHAT.TYPING:\n      break;\n    default:\n  }\n}\n\nexport default IO;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583883460649
  },
  "{\"sourceRoot\":\"/Users/bacchus/git/Leap/server/constants\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/bacchus/git/Leap/server\",\"filename\":\"/Users/bacchus/git/Leap/server/constants/eventTypes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/bacchus/git/Leap/server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/bacchus/git/Leap/server/constants",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/bacchus/git/Leap/server",
      "filename": "/Users/bacchus/git/Leap/server/constants/eventTypes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/bacchus/git/Leap/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/bacchus/git/Leap/server/constants/eventTypes.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/bacchus/git/Leap/server/constants/eventTypes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/bacchus/git/Leap/server/constants",
        "sourceFileName": "eventTypes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DISCONNECT = exports.CONNECTION = exports.EVENT = void 0;\nvar EVENT = {\n  USER: 'userEvent',\n  LOBBY: 'lobbyEvent',\n  ROOM: 'roomEvent',\n  GAME: 'gameEvent',\n  CHAT: 'chatEvent'\n};\nexports.EVENT = EVENT;\nvar CONNECTION = 'connection';\nexports.CONNECTION = CONNECTION;\nvar DISCONNECT = 'disconnect';\nexports.DISCONNECT = DISCONNECT;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50VHlwZXMuanMiXSwibmFtZXMiOlsiRVZFTlQiLCJVU0VSIiwiTE9CQlkiLCJST09NIiwiR0FNRSIsIkNIQVQiLCJDT05ORUNUSU9OIiwiRElTQ09OTkVDVCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBTUEsS0FBSyxHQUFHO0FBQ25CQyxFQUFBQSxJQUFJLEVBQUUsV0FEYTtBQUVuQkMsRUFBQUEsS0FBSyxFQUFFLFlBRlk7QUFHbkJDLEVBQUFBLElBQUksRUFBRSxXQUhhO0FBSW5CQyxFQUFBQSxJQUFJLEVBQUUsV0FKYTtBQUtuQkMsRUFBQUEsSUFBSSxFQUFFO0FBTGEsQ0FBZDs7QUFRQSxJQUFNQyxVQUFVLEdBQUcsWUFBbkI7O0FBRUEsSUFBTUMsVUFBVSxHQUFHLFlBQW5CIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9iYWNjaHVzL2dpdC9MZWFwL3NlcnZlci9jb25zdGFudHMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgRVZFTlQgPSB7XG4gIFVTRVI6ICd1c2VyRXZlbnQnLFxuICBMT0JCWTogJ2xvYmJ5RXZlbnQnLFxuICBST09NOiAncm9vbUV2ZW50JyxcbiAgR0FNRTogJ2dhbWVFdmVudCcsXG4gIENIQVQ6ICdjaGF0RXZlbnQnLFxufTtcblxuZXhwb3J0IGNvbnN0IENPTk5FQ1RJT04gPSAnY29ubmVjdGlvbic7XG5cbmV4cG9ydCBjb25zdCBESVNDT05ORUNUID0gJ2Rpc2Nvbm5lY3QnO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "eventTypes.js"
      ],
      "names": [
        "EVENT",
        "USER",
        "LOBBY",
        "ROOM",
        "GAME",
        "CHAT",
        "CONNECTION",
        "DISCONNECT"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,KAAK,GAAG;AACnBC,EAAAA,IAAI,EAAE,WADa;AAEnBC,EAAAA,KAAK,EAAE,YAFY;AAGnBC,EAAAA,IAAI,EAAE,WAHa;AAInBC,EAAAA,IAAI,EAAE,WAJa;AAKnBC,EAAAA,IAAI,EAAE;AALa,CAAd;;AAQA,IAAMC,UAAU,GAAG,YAAnB;;AAEA,IAAMC,UAAU,GAAG,YAAnB",
      "sourceRoot": "/Users/bacchus/git/Leap/server/constants",
      "sourcesContent": [
        "export const EVENT = {\n  USER: 'userEvent',\n  LOBBY: 'lobbyEvent',\n  ROOM: 'roomEvent',\n  GAME: 'gameEvent',\n  CHAT: 'chatEvent',\n};\n\nexport const CONNECTION = 'connection';\n\nexport const DISCONNECT = 'disconnect';\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583349324430
  },
  "{\"sourceRoot\":\"/Users/bacchus/git/Leap/server/constants\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/bacchus/git/Leap/server\",\"filename\":\"/Users/bacchus/git/Leap/server/constants/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/bacchus/git/Leap/server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/bacchus/git/Leap/server/constants",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/bacchus/git/Leap/server",
      "filename": "/Users/bacchus/git/Leap/server/constants/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/bacchus/git/Leap/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/bacchus/git/Leap/server/constants/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/bacchus/git/Leap/server/constants/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/bacchus/git/Leap/server/constants",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CHAT = exports.GAME = exports.ROOM = exports.LOBBY = exports.USER = exports.ENDPOINT = exports.PORT = void 0;\nvar USER = {\n  LOGIN: 'userLogin',\n  LOGOUT: 'userLogout',\n  UPDATE: 'userUpdateInfo'\n};\nexports.USER = USER;\nvar LOBBY = {\n  UPDATE: 'update',\n  TOGGLE_SCROLL: 'toggleScroll',\n  ADD_ROOM: 'addRoom',\n  REMOVE_ROOM: 'removeRoom'\n};\nexports.LOBBY = LOBBY;\nvar ROOM = {\n  ENTER: 'roomEnter',\n  EXIT: 'roomExit',\n  END_GAME: 'gameEnd',\n  SUBMIT_MOVE: 'submitMove',\n  FETCH_ROOMS: 'fetchRooms'\n};\nexports.ROOM = ROOM;\nvar GAME = {\n  START: 'gameStart',\n  END: 'gameEnd',\n  SELECT: 'gameSelectCell',\n  CACHE_MOVE: 'cacheMove',\n  MOVE_READY: 'moveReady' //SUBMIT: 'submitMove',\n\n};\nexports.GAME = GAME;\nvar CHAT = {\n  SEND_MSG: 'chatSend',\n  TYPING: 'chatTyping'\n};\nexports.CHAT = CHAT;\nvar URL = 'http://localhost';\nvar PORT = '3001';\nexports.PORT = PORT;\nvar ENDPOINT = URL + PORT;\nexports.ENDPOINT = ENDPOINT;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlVTRVIiLCJMT0dJTiIsIkxPR09VVCIsIlVQREFURSIsIkxPQkJZIiwiVE9HR0xFX1NDUk9MTCIsIkFERF9ST09NIiwiUkVNT1ZFX1JPT00iLCJST09NIiwiRU5URVIiLCJFWElUIiwiRU5EX0dBTUUiLCJTVUJNSVRfTU9WRSIsIkZFVENIX1JPT01TIiwiR0FNRSIsIlNUQVJUIiwiRU5EIiwiU0VMRUNUIiwiQ0FDSEVfTU9WRSIsIk1PVkVfUkVBRFkiLCJDSEFUIiwiU0VORF9NU0ciLCJUWVBJTkciLCJVUkwiLCJQT1JUIiwiRU5EUE9JTlQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLElBQUksR0FBRztBQUNYQyxFQUFBQSxLQUFLLEVBQUUsV0FESTtBQUVYQyxFQUFBQSxNQUFNLEVBQUUsWUFGRztBQUdYQyxFQUFBQSxNQUFNLEVBQUU7QUFIRyxDQUFiOztBQU1BLElBQU1DLEtBQUssR0FBRztBQUNaRCxFQUFBQSxNQUFNLEVBQUUsUUFESTtBQUVaRSxFQUFBQSxhQUFhLEVBQUUsY0FGSDtBQUdaQyxFQUFBQSxRQUFRLEVBQUUsU0FIRTtBQUlaQyxFQUFBQSxXQUFXLEVBQUU7QUFKRCxDQUFkOztBQU9BLElBQU1DLElBQUksR0FBRztBQUNYQyxFQUFBQSxLQUFLLEVBQUUsV0FESTtBQUVYQyxFQUFBQSxJQUFJLEVBQUUsVUFGSztBQUdYQyxFQUFBQSxRQUFRLEVBQUUsU0FIQztBQUlYQyxFQUFBQSxXQUFXLEVBQUUsWUFKRjtBQUtYQyxFQUFBQSxXQUFXLEVBQUU7QUFMRixDQUFiOztBQVFBLElBQU1DLElBQUksR0FBRztBQUNYQyxFQUFBQSxLQUFLLEVBQUUsV0FESTtBQUVYQyxFQUFBQSxHQUFHLEVBQUUsU0FGTTtBQUdYQyxFQUFBQSxNQUFNLEVBQUUsZ0JBSEc7QUFJWEMsRUFBQUEsVUFBVSxFQUFFLFdBSkQ7QUFLWEMsRUFBQUEsVUFBVSxFQUFFLFdBTEQsQ0FNWDs7QUFOVyxDQUFiOztBQVNBLElBQU1DLElBQUksR0FBRztBQUNYQyxFQUFBQSxRQUFRLEVBQUUsVUFEQztBQUVYQyxFQUFBQSxNQUFNLEVBQUU7QUFGRyxDQUFiOztBQUtBLElBQU1DLEdBQUcsR0FBRyxrQkFBWjtBQUNPLElBQU1DLElBQUksR0FBRyxNQUFiOztBQUNBLElBQU1DLFFBQVEsR0FBR0YsR0FBRyxHQUFHQyxJQUF2QiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYmFjY2h1cy9naXQvTGVhcC9zZXJ2ZXIvY29uc3RhbnRzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVVNFUiA9IHtcbiAgTE9HSU46ICd1c2VyTG9naW4nLFxuICBMT0dPVVQ6ICd1c2VyTG9nb3V0JyxcbiAgVVBEQVRFOiAndXNlclVwZGF0ZUluZm8nLFxufTtcblxuY29uc3QgTE9CQlkgPSB7XG4gIFVQREFURTogJ3VwZGF0ZScsXG4gIFRPR0dMRV9TQ1JPTEw6ICd0b2dnbGVTY3JvbGwnLFxuICBBRERfUk9PTTogJ2FkZFJvb20nLFxuICBSRU1PVkVfUk9PTTogJ3JlbW92ZVJvb20nLFxufTtcblxuY29uc3QgUk9PTSA9IHtcbiAgRU5URVI6ICdyb29tRW50ZXInLFxuICBFWElUOiAncm9vbUV4aXQnLFxuICBFTkRfR0FNRTogJ2dhbWVFbmQnLFxuICBTVUJNSVRfTU9WRTogJ3N1Ym1pdE1vdmUnLFxuICBGRVRDSF9ST09NUzogJ2ZldGNoUm9vbXMnLFxufTtcblxuY29uc3QgR0FNRSA9IHtcbiAgU1RBUlQ6ICdnYW1lU3RhcnQnLFxuICBFTkQ6ICdnYW1lRW5kJyxcbiAgU0VMRUNUOiAnZ2FtZVNlbGVjdENlbGwnLFxuICBDQUNIRV9NT1ZFOiAnY2FjaGVNb3ZlJyxcbiAgTU9WRV9SRUFEWTogJ21vdmVSZWFkeScsXG4gIC8vU1VCTUlUOiAnc3VibWl0TW92ZScsXG59O1xuXG5jb25zdCBDSEFUID0ge1xuICBTRU5EX01TRzogJ2NoYXRTZW5kJyxcbiAgVFlQSU5HOiAnY2hhdFR5cGluZycsXG59O1xuXG5jb25zdCBVUkwgPSAnaHR0cDovL2xvY2FsaG9zdCc7XG5leHBvcnQgY29uc3QgUE9SVCA9ICczMDAxJztcbmV4cG9ydCBjb25zdCBFTkRQT0lOVCA9IFVSTCArIFBPUlQ7XG5cbmV4cG9ydCB7IFVTRVIsIExPQkJZLCBST09NLCBHQU1FLCBDSEFUIH07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "USER",
        "LOGIN",
        "LOGOUT",
        "UPDATE",
        "LOBBY",
        "TOGGLE_SCROLL",
        "ADD_ROOM",
        "REMOVE_ROOM",
        "ROOM",
        "ENTER",
        "EXIT",
        "END_GAME",
        "SUBMIT_MOVE",
        "FETCH_ROOMS",
        "GAME",
        "START",
        "END",
        "SELECT",
        "CACHE_MOVE",
        "MOVE_READY",
        "CHAT",
        "SEND_MSG",
        "TYPING",
        "URL",
        "PORT",
        "ENDPOINT"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,IAAI,GAAG;AACXC,EAAAA,KAAK,EAAE,WADI;AAEXC,EAAAA,MAAM,EAAE,YAFG;AAGXC,EAAAA,MAAM,EAAE;AAHG,CAAb;;AAMA,IAAMC,KAAK,GAAG;AACZD,EAAAA,MAAM,EAAE,QADI;AAEZE,EAAAA,aAAa,EAAE,cAFH;AAGZC,EAAAA,QAAQ,EAAE,SAHE;AAIZC,EAAAA,WAAW,EAAE;AAJD,CAAd;;AAOA,IAAMC,IAAI,GAAG;AACXC,EAAAA,KAAK,EAAE,WADI;AAEXC,EAAAA,IAAI,EAAE,UAFK;AAGXC,EAAAA,QAAQ,EAAE,SAHC;AAIXC,EAAAA,WAAW,EAAE,YAJF;AAKXC,EAAAA,WAAW,EAAE;AALF,CAAb;;AAQA,IAAMC,IAAI,GAAG;AACXC,EAAAA,KAAK,EAAE,WADI;AAEXC,EAAAA,GAAG,EAAE,SAFM;AAGXC,EAAAA,MAAM,EAAE,gBAHG;AAIXC,EAAAA,UAAU,EAAE,WAJD;AAKXC,EAAAA,UAAU,EAAE,WALD,CAMX;;AANW,CAAb;;AASA,IAAMC,IAAI,GAAG;AACXC,EAAAA,QAAQ,EAAE,UADC;AAEXC,EAAAA,MAAM,EAAE;AAFG,CAAb;;AAKA,IAAMC,GAAG,GAAG,kBAAZ;AACO,IAAMC,IAAI,GAAG,MAAb;;AACA,IAAMC,QAAQ,GAAGF,GAAG,GAAGC,IAAvB",
      "sourceRoot": "/Users/bacchus/git/Leap/server/constants",
      "sourcesContent": [
        "const USER = {\n  LOGIN: 'userLogin',\n  LOGOUT: 'userLogout',\n  UPDATE: 'userUpdateInfo',\n};\n\nconst LOBBY = {\n  UPDATE: 'update',\n  TOGGLE_SCROLL: 'toggleScroll',\n  ADD_ROOM: 'addRoom',\n  REMOVE_ROOM: 'removeRoom',\n};\n\nconst ROOM = {\n  ENTER: 'roomEnter',\n  EXIT: 'roomExit',\n  END_GAME: 'gameEnd',\n  SUBMIT_MOVE: 'submitMove',\n  FETCH_ROOMS: 'fetchRooms',\n};\n\nconst GAME = {\n  START: 'gameStart',\n  END: 'gameEnd',\n  SELECT: 'gameSelectCell',\n  CACHE_MOVE: 'cacheMove',\n  MOVE_READY: 'moveReady',\n  //SUBMIT: 'submitMove',\n};\n\nconst CHAT = {\n  SEND_MSG: 'chatSend',\n  TYPING: 'chatTyping',\n};\n\nconst URL = 'http://localhost';\nexport const PORT = '3001';\nexport const ENDPOINT = URL + PORT;\n\nexport { USER, LOBBY, ROOM, GAME, CHAT };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882966899
  },
  "{\"sourceRoot\":\"/Users/bacchus/git/Leap/server/assets\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/bacchus/git/Leap/server\",\"filename\":\"/Users/bacchus/git/Leap/server/assets/leap.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/bacchus/git/Leap/server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/bacchus/git/Leap/server/assets",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/bacchus/git/Leap/server",
      "filename": "/Users/bacchus/git/Leap/server/assets/leap.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/bacchus/git/Leap/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/bacchus/git/Leap/server/assets/leap.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/bacchus/git/Leap/server/assets/leap.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/bacchus/git/Leap/server/assets",
        "sourceFileName": "leap.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _util = require(\"./util\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar BOARD_SIZE, BOARD_AREA, BIT_SIZE, BIT_MAX_PI, BIT_INDEX_SHIFT, BIT_AREA;\nvar PLAYER_ONE = 4;\nvar PLAYER_TWO = 12;\n\nfunction getBitShift(b) {\n  return b >> 1 ? 1 + getBitShift(b >> 1) : 1;\n}\n\nfunction Leap(player, len, phaseLayout) {\n  //no args passed mean it will be a copy.\n  if (player) {\n    this.turn = player;\n    BOARD_SIZE = len;\n    BOARD_AREA = Math.pow(BOARD_SIZE, 2);\n    BIT_SIZE = Math.pow(2, getBitShift(BOARD_SIZE - 1));\n    BIT_MAX_PI = 2 * BIT_SIZE;\n    BIT_INDEX_SHIFT = getBitShift(BOARD_AREA - 1);\n    BIT_AREA = Math.pow(2, BIT_INDEX_SHIFT);\n    this.init(phaseLayout);\n  }\n}\n\nLeap.prototype.init = function (layout) {\n  var _this$pAmount;\n\n  this.pAmount = (_this$pAmount = {}, _defineProperty(_this$pAmount, PLAYER_ONE, BOARD_SIZE), _defineProperty(_this$pAmount, PLAYER_TWO, BOARD_SIZE), _this$pAmount);\n  this.continuedMove = false;\n  (this.board = []).length = BOARD_AREA + 4 * BOARD_SIZE;\n  (this.moves = []).length = 4 * BOARD_SIZE;\n  this.board.fill(0, 0, BOARD_AREA - 1);\n  this.bufferSize = 1; //how many rows between the pieces' starting location and the nearest phases\n\n  var pi = 0; //piece Index (ID)\n\n  var lastRow = (BOARD_SIZE - 1) * BOARD_SIZE;\n\n  var calcPhases = function calcPhases(index) {\n    var k = 0;\n\n    while (k < _util.phaseLayouts[layout].length) {\n      if (index === _util.phaseLayouts[layout][k]) return 1;\n      k++;\n    }\n\n    return 0;\n  };\n\n  this.clearMoves();\n\n  for (var i = 0; i < BOARD_SIZE; i++) {\n    this.board[i] = pi << 5 | PLAYER_ONE; //00000 0 01 00\n\n    this.initPiece(pi, i);\n    this.board[i + lastRow] = pi + BIT_MAX_PI << 5 | PLAYER_TWO; //100000 0 11 00\n\n    this.initPiece(pi + BIT_MAX_PI, i + lastRow);\n    pi++;\n\n    for (var j = 1 + this.bufferSize; j < BOARD_SIZE - 1 - this.bufferSize; j++) {\n      this.board[i + j * BOARD_SIZE] |= calcPhases(i + j * BOARD_SIZE);\n    }\n  }\n};\n\nLeap.prototype.initPiece = function (key, index) {\n  this.board[BOARD_AREA + key] = index;\n};\n\nLeap.prototype.copy = function () {\n  var board = new Leap();\n  var n = BOARD_AREA + 4 * BOARD_SIZE;\n  (board.board = []).length = n;\n  (board.moves = []).length = this.moves.length; //copy over the board info (including piece directory)\n\n  board.board = _toConsumableArray(this.board);\n  board.turn = this.turn;\n  board.continuedMove = this.continuedMove;\n  board.pAmount = _objectSpread({}, this.pAmount);\n  board.clearMoves();\n  return board;\n};\n\nLeap.prototype.set = function (board) {\n  this.board = board.board;\n  this.turn = board.turn;\n  this.continuedMove = board.continuedMove;\n  this.pAmount = board.pAmount;\n  this.moves = board.moves;\n  return this;\n}; // moves[pi] = [0000000 0000000] --> [board index of captured piece + board index of destination cell]\n\n\nLeap.prototype.addMove = function (from, to, captured) {\n  captured = captured || 0;\n  var pi = this.board[from] >> 5;\n  this.moves[pi].push((captured << BIT_INDEX_SHIFT) + to);\n};\n\nLeap.prototype.clearMoves = function (pi) {\n  if (pi !== undefined) {\n    this.moves[pi] = [];\n    return;\n  }\n\n  for (var i = 0; i < 4 * BOARD_SIZE; i++) {\n    this.moves[i] = [];\n  }\n};\n\nLeap.prototype.highlightMoves = function (piece) {\n  var nMoves = this.moves[piece].length;\n\n  for (var i = 0; i < nMoves; i++) {\n    var to = this.moves[piece][i] & BIT_AREA - 1;\n    this.board[to] |= 2;\n  }\n};\n\nLeap.prototype.removeHighlight = function () {\n  for (var i = 0; i < BOARD_AREA; i++) {\n    if (this.board[i] & 2) this.board[i] = this.board[i] ^ 2;\n  }\n};\n/*==========\t\t\t\t\t\t\t\t\t\t\tCLONE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t==========*/\n//Assume special tiles won't appear on spawn rows\n\n\nLeap.prototype.makeClone = function (from, to) {\n  var player = this.turn;\n  this.pAmount[player]++;\n  var c = player === 12 ? BIT_MAX_PI : 0;\n  var key; //Find first empty slot\n\n  for (key = BOARD_SIZE + c; key < 2 * BOARD_SIZE + c; key++) {\n    if (this.board[BOARD_AREA + key] === undefined) {\n      this.board[BOARD_AREA + key] = to;\n      this.board[to] = key << 5 | player | 16;\n      this.board[from] |= 16;\n      break;\n    }\n  }\n};\n\nLeap.prototype.onCloningCell = function (from) {\n  var onRow = from / BOARD_SIZE;\n  var piece = this.board[from];\n  var onBoundaryColumn = (from + 1) % BOARD_SIZE < 2;\n  var onBoundaryRow = (onRow + 1) % BOARD_SIZE < 2; //To clone: NOT be on boundary column, BE on boundary row, NOT be cloned yet\n\n  if (onBoundaryColumn || !onBoundaryRow || piece & 16) return false;\n  var spawnRow = piece >> 5 & BIT_MAX_PI ? BOARD_SIZE - 1 : 0;\n  return onRow ^ spawnRow;\n}; //Assumes valid move\n\n\nLeap.prototype.isCloneMove = function (from, to) {\n  //if on cloning cell, suffice to show if destination is on spawn row\n  var spawnRow = this.board[from] >> 5 & BIT_MAX_PI ? BOARD_SIZE - 1 : 0;\n  return this.onCloningCell(from) && Math.floor(to / BOARD_SIZE) === spawnRow;\n};\n/*==========\t\t\t\t\t\t\t\t\t\t\tMOVE LOGIC\t\t\t\t\t\t\t\t\t\t\t\t==========*/\n\n\nLeap.prototype.canLeap = function (from, adj) {\n  var to = this.getInverseIndex(from); //DOES NOT CONSIDER SPECIAL PIECE '10'\n\n  if (this.getPlayer(to)) return;\n  var inv = this.getInverseIndex(adj);\n  var phaseAdj = this.getPlayer(adj);\n  var phaseFar = this.getPlayer(inv);\n\n  if ((phaseAdj ^ phaseFar ^ this.turn) === 8) {\n    this.addMove(from, to, phaseAdj ? adj : inv);\n  } //if neighbor cell is a phase, leap_cell clear, and (enemy piece on phaseAdj XOR enemy piece on phaseFar)\n\n};\n\nLeap.prototype.canJump = function (from, direction) {\n  //if adj cell occupied, jumpCell in bounds, jumpCell clear, and jumpCell has enemy piece\n  var adj = from + direction;\n  var to = adj + direction;\n\n  if (this.inBounds(to) && !this.getPlayer(to)) {\n    this.addMove(from, to, adj);\n  }\n};\n\nLeap.prototype.isPhaseMove = function (from, to, captured) {\n  var bothPhases = this.board[from] & this.board[to] & 1;\n  return !captured && bothPhases && this.getInverseIndex(from) === to;\n};\n\nLeap.prototype.canPhase = function (from, to) {\n  var isPhase = this.board[from] & 1;\n  var isDestinationEmpty = !(this.board[to] & 4); //1 if player piece\n\n  if (isPhase && isDestinationEmpty) {\n    this.addMove(from, to);\n  }\n}; //reaching this function implies selected piece can be cloned, so piece is on a bounding row\n\n\nLeap.prototype.getSpawnCells = function (from) {\n  var spawnRow = from / BOARD_SIZE ^ BOARD_SIZE - 1;\n\n  for (var col = 1; col < BOARD_SIZE - 1; col++) {\n    var to = spawnRow * BOARD_SIZE + col;\n    var spawnCellEmpty = !(this.board[to] & 4); //if spawnCell doesn't have a player on it\n\n    if (spawnCellEmpty) this.addMove(from, to);\n  }\n};\n\nLeap.prototype.getMovesInDirection = function (from, direction) {\n  //check adjacent cells of piece p wrt the boundary\n  var adj = from + direction;\n  var isPhase = this.board[adj] & 1;\n  var jumpWithinBounds = Math.abs((adj + direction) % BOARD_SIZE - from % BOARD_SIZE) < 3;\n  if (isPhase) this.canLeap(from, adj);\n\n  if ((this.getPlayer(adj) ^ this.turn) === 8) {\n    if (jumpWithinBounds) this.canJump(from, direction);\n  } else this.addMove(from, adj);\n};\n\nLeap.prototype.getMoves = function (from) {\n  var bCol = (from + 1) % BOARD_SIZE < 2 ? (from + 1) % BOARD_SIZE : undefined;\n\n  for (var r = -1; r < 2; r++) {\n    for (var c = -1 + (bCol === 1 ? 1 : 0); c < 2 - (bCol === 0 ? 1 : 0); c++) {\n      var direction = r * BOARD_SIZE + c;\n      var adj = from + direction;\n      var validDirection = direction && this.getPlayer(adj) ^ this.turn && this.inBounds(adj);\n      if (validDirection) this.getMovesInDirection(from, direction);\n    }\n  }\n\n  var inv = this.getInverseIndex(from); // phase condition\n\n  if (!this.isRedundantMove(from, inv)) this.canPhase(from, inv); // clone condition\n\n  if (!(this.board[from] & 16) && this.onCloningCell(from)) this.getSpawnCells(from);\n};\n\nLeap.prototype.getAllMoves = function (player) {\n  var c = player === 12 ? BIT_MAX_PI : 0;\n  var hasMoves = 0;\n\n  for (var key = c; key < 2 * BOARD_SIZE + c; key++) {\n    var from = this.board[BOARD_AREA + key];\n\n    if (!(from === undefined || from < 0)) {\n      hasMoves++;\n      this.getMoves(from);\n    }\n  }\n\n  return hasMoves;\n}; //Performs move. returns true if enemy runs out of pieces\n\n\nLeap.prototype.doMove = function (from, to) {\n  //CACHE this.board HERE. ITS A VERY HOT FUNCTION lmao (. Y .)\n  if (this.isCloneMove(from, to)) {\n    this.makeClone(from, to);\n    this.removeHighlight();\n    this.clearMoves();\n    this.switchPlayer();\n    this.continuedMove = false;\n    return;\n  }\n\n  var pi = this.board[from] >> 5;\n  var capturedPiece = this.getCapturedPiece(pi, to);\n  this.removeHighlight();\n  this.clearMoves();\n  var piece = pi << 5 | this.board[from] & 16 | this.turn;\n\n  if ((this.board[to] & 12) === 8) {\n    //SPECIAL PIECE *any player can move.... but how is TODO*\n    this.board[to] |= pi << 5;\n  } else {\n    //We can assume this cell is empty\n    this.board[to] |= piece;\n  }\n\n  if (capturedPiece) {\n    var ci = this.board[capturedPiece] >> 5;\n    if (ci < 0) debugger;\n    this.board[capturedPiece] &= 3;\n    this.board[BOARD_AREA + ci] = ~this.board[BOARD_AREA + ci]; //He DED\n\n    if (--this.pAmount[this.turn ^ 8] === 0) return true; //if Leap, then we get the direction by the difference between captured index and adjacent movement cell\n\n    var capturedAdjToDestination = -9 <= to - capturedPiece && to - capturedPiece <= 9;\n    var capturedDirection = capturedAdjToDestination ? to - capturedPiece : capturedPiece - from; //if can continue move in direction\n\n    var adj = to + capturedDirection;\n    if (this.board[adj] & 1) this.canLeap(to, adj);\n    if ((this.getPlayer(adj) ^ this.turn) === 8) this.canJump(to, capturedDirection);\n  }\n\n  this.board[from] &= 3; //keep only cell data\n\n  this.board[BOARD_AREA + pi] = to;\n  var canPhase = this.board[to] & 1 && !this.isPhaseMove(from, to, capturedPiece);\n  var canClone = this.onCloningCell(to) && !this.onCloningCell(from); //If can clone or is on phase that piece hasn't just travelled through\n\n  if (canPhase) this.canPhase(to, this.getInverseIndex(to));\n  if (canClone) this.getSpawnCells(to); //if not a continued move, change player\n\n  if (!this.moves[pi].length) this.switchPlayer();else {\n    this.continuedMove = to;\n    /*debugger;*/\n  }\n  return false;\n};\n/*==========\t\t\t\t\t\t\t\t\t\t\tREFERENCES\t\t\t\t\t\t\t\t\t\t\t\t==========*/\n\n\nLeap.prototype.getPlayer = function (index) {\n  var pid = this.board[index] & 12;\n  return pid === 4 || pid === 12 ? pid : 0;\n}; //NOTE: index 0 can never be captured\n//How to optimize? Well, if moves[pid][i] !< BOARD_AREA, then it must be a capture\n\n\nLeap.prototype.getCapturedPiece = function (pid, to) {\n  var nMoves = this.moves[pid].length;\n\n  for (var i = 0; i < nMoves; i++) {\n    var move = this.moves[pid][i];\n    var capturedPiece = move >> BIT_INDEX_SHIFT;\n    if (capturedPiece >= BOARD_AREA) debugger;\n    if ((move & BIT_AREA - 1) === to && capturedPiece) return capturedPiece;\n  }\n}; //ONLY WORKS on NxN boards and phase group orders of 2\n\n\nLeap.prototype.getInverseIndex = function (index) {\n  return BOARD_AREA - 1 - index;\n};\n\nLeap.prototype.getConfig = function () {\n  return {\n    'BOARD_SIZE': BOARD_SIZE,\n    'BOARD_AREA': BOARD_AREA,\n    'BIT_SIZE': BIT_SIZE\n  };\n};\n/*==========\t\t\t\t\t\t\t\t\t\t\tUTILITY\t\t\t\t\t\t\t\t\t\t\t\t\t\t==========*/\n\n\nLeap.prototype.inBounds = function (index) {\n  return 0 <= index && index < BOARD_AREA;\n};\n\nLeap.prototype.switchPlayer = function () {\n  this.turn ^= 8;\n  this.continuedMove = false;\n  return this.turn;\n};\n\nLeap.prototype.isRedundantMove = function (from, to) {\n  var pi = this.board[from] >> 5;\n  var n = this.moves[pi].length;\n\n  for (var i = 0; i < n; i++) {\n    if ((this.moves[pi][i] & BIT_AREA - 1) === to) return true;\n  }\n\n  return false;\n};\n\nLeap.prototype.validMove = function (piece, index) {\n  var n = this.moves[piece].length;\n\n  for (var i = 0; i < n; i++) {\n    if ((this.moves[piece][i] & BIT_AREA - 1) === index) return true;\n  }\n\n  return false;\n}; //not sure how performant this is...\n\n\nLeap.prototype.randomMove = function () {\n  if (!this.continuedMove) {\n    //if no moves, enemy wins\n    if (!this.getAllMoves(this.turn)) return this.turn ^ 8; //There's gotta be a better way to remove undefined indeces\n\n    var moves = _objectSpread({}, this.moves);\n\n    var reducedMoveList = Object.keys(moves).filter(function (item) {\n      return moves[item].length;\n    }).reduce(function (res, key) {\n      return res[key] = moves[key], res;\n    }, {});\n    var moveKeys = Object.keys(reducedMoveList);\n    var length = moveKeys.length;\n    var piece = moveKeys[Math.floor(Math.random() * length)];\n    var to = reducedMoveList[piece][Math.floor(Math.random() * reducedMoveList[piece].length)] & BIT_AREA - 1;\n    var from = this.board[BOARD_AREA + parseInt(piece)];\n    return this.doMove(from, to) ? this.turn : 0;\n  } else {\n    this.clearMoves();\n    var _from = this.continuedMove;\n    this.getMoves(_from);\n    var pi = this.board[_from] >> 5;\n\n    var _to = this.moves[pi][Math.floor(Math.random() * this.moves[pi].length)] & BIT_AREA - 1;\n\n    return this.doMove(_from, _to) ? this.turn : 0;\n  }\n}; //what should the heuristic be??\n\n\nLeap.prototype.score = function () {\n  var p1 = 0;\n  var p2 = 0;\n\n  var spawnRow = function spawnRow(index) {\n    return index >> 5 & BIT_MAX_PI ? BOARD_SIZE - 1 : 0;\n  }; //no piece difference...\n\n\n  if (this.pAmount[PLAYER_ONE] - this.pAmount[PLAYER_TWO] === 0) {\n    for (var key = 0; key < 2 * BIT_MAX_PI && this.board[BOARD_AREA + key] !== undefined; key++) {\n      var piece = this.board[BOARD_AREA + key];\n      var distanceFromSpawn = Math.abs(spawnRow(piece) - piece / BOARD_SIZE);\n      if (key < BIT_MAX_PI) p1 += distanceFromSpawn;else p2 += distanceFromSpawn;\n    }\n  } else {\n    var p = _objectSpread({}, this.board.slice(BOARD_AREA));\n\n    var pieces = Object.keys(p).filter(function (item) {\n      return p[item] !== undefined;\n    }).reduce(function (res, key) {\n      return res[key] = p[key], res;\n    }, {});\n    var n = Object.keys(pieces).length;\n\n    for (var pi in pieces) {\n      var isClone = 2 * (pieces[pi] & 16);\n      var score = 5 + !isClone;\n      if (parseInt(pi) / BIT_MAX_PI) p2 += score;else p1 += score;\n    }\n  }\n\n  if (p1 > p2) return PLAYER_ONE;else if (p2 > p1) return PLAYER_TWO;else return 0;\n};\n\nvar _default = Leap;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "leap.js"
      ],
      "names": [
        "BOARD_SIZE",
        "BOARD_AREA",
        "BIT_SIZE",
        "BIT_MAX_PI",
        "BIT_INDEX_SHIFT",
        "BIT_AREA",
        "PLAYER_ONE",
        "PLAYER_TWO",
        "getBitShift",
        "b",
        "Leap",
        "player",
        "len",
        "phaseLayout",
        "turn",
        "init",
        "prototype",
        "layout",
        "pAmount",
        "continuedMove",
        "board",
        "length",
        "moves",
        "fill",
        "bufferSize",
        "pi",
        "lastRow",
        "calcPhases",
        "index",
        "k",
        "phaseLayouts",
        "clearMoves",
        "i",
        "initPiece",
        "j",
        "key",
        "copy",
        "n",
        "set",
        "addMove",
        "from",
        "to",
        "captured",
        "push",
        "undefined",
        "highlightMoves",
        "piece",
        "nMoves",
        "removeHighlight",
        "makeClone",
        "c",
        "onCloningCell",
        "onRow",
        "onBoundaryColumn",
        "onBoundaryRow",
        "spawnRow",
        "isCloneMove",
        "Math",
        "floor",
        "canLeap",
        "adj",
        "getInverseIndex",
        "getPlayer",
        "inv",
        "phaseAdj",
        "phaseFar",
        "canJump",
        "direction",
        "inBounds",
        "isPhaseMove",
        "bothPhases",
        "canPhase",
        "isPhase",
        "isDestinationEmpty",
        "getSpawnCells",
        "col",
        "spawnCellEmpty",
        "getMovesInDirection",
        "jumpWithinBounds",
        "abs",
        "getMoves",
        "bCol",
        "r",
        "validDirection",
        "isRedundantMove",
        "getAllMoves",
        "hasMoves",
        "doMove",
        "switchPlayer",
        "capturedPiece",
        "getCapturedPiece",
        "ci",
        "capturedAdjToDestination",
        "capturedDirection",
        "canClone",
        "pid",
        "move",
        "getConfig",
        "validMove",
        "randomMove",
        "reducedMoveList",
        "Object",
        "keys",
        "filter",
        "item",
        "reduce",
        "res",
        "moveKeys",
        "random",
        "parseInt",
        "score",
        "p1",
        "p2",
        "distanceFromSpawn",
        "p",
        "slice",
        "pieces",
        "isClone"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/bacchus/git/Leap/server/assets",
      "sourcesContent": [
        "//'use strict';\nimport {phaseLayouts} from './util';\n\nvar BOARD_SIZE, BOARD_AREA, BIT_SIZE, BIT_MAX_PI, BIT_INDEX_SHIFT, BIT_AREA;\nconst PLAYER_ONE = 4\nconst PLAYER_TWO = 12;\n\nfunction getBitShift(b) {\n  return (b >> 1) ? (1 + getBitShift(b >> 1)) : 1;\n}\n\n\nfunction Leap(player, len, phaseLayout) {\n\t//no args passed mean it will be a copy.\n\tif (player) {\n\t\tthis.turn = player;\n\t\tBOARD_SIZE = len;\n\t\tBOARD_AREA = BOARD_SIZE**2;\n\t\tBIT_SIZE = 2**getBitShift(BOARD_SIZE-1);\n\t\tBIT_MAX_PI = 2*BIT_SIZE;\n\t\tBIT_INDEX_SHIFT = getBitShift(BOARD_AREA-1);\n\t\tBIT_AREA = 2**BIT_INDEX_SHIFT;\n\n\t\tthis.init(phaseLayout);\n\t}\n}\n\nLeap.prototype.init = function (layout) {\n\tthis.pAmount = {\n\t\t[PLAYER_ONE]: BOARD_SIZE,\n\t\t[PLAYER_TWO]: BOARD_SIZE\n\t};\n\tthis.continuedMove = false;\n\t(this.board = []).length = BOARD_AREA + 4*BOARD_SIZE;\n\t(this.moves = []).length = 4*BOARD_SIZE;\n\tthis.board.fill(0, 0, BOARD_AREA-1);\n\tthis.bufferSize = 1;\t//how many rows between the pieces' starting location and the nearest phases\n\n  let pi=0; //piece Index (ID)\n\tconst lastRow = (BOARD_SIZE-1)*BOARD_SIZE;\n\n\tconst calcPhases = (index) => {\n\t\tlet k = 0;\n\t\twhile(k<phaseLayouts[layout].length) {\n\t\t\tif (index === phaseLayouts[layout][k]) return 1;\n\t\t\tk++;\n\t\t}\n\t\treturn 0;\n\t};\n\tthis.clearMoves();\n\tfor (let i=0; i<BOARD_SIZE; i++) {\n\t\tthis.board[i] = ( (pi << 5) | PLAYER_ONE); //00000 0 01 00\n\t\tthis.initPiece(pi, i);\n\n\t\tthis.board[i + lastRow] = ( (pi + BIT_MAX_PI << 5) | PLAYER_TWO); //100000 0 11 00\n\t\tthis.initPiece(pi + BIT_MAX_PI, i + lastRow);\n\t\tpi++;\n\n\t\tfor (let j=1+this.bufferSize; j<(BOARD_SIZE-1)-this.bufferSize; j++) {\n\t\t\tthis.board[i + j*BOARD_SIZE] |= calcPhases(i+j*BOARD_SIZE);\n\t\t}\n\t}\n}\n\nLeap.prototype.initPiece = function (key, index) {\n\tthis.board[BOARD_AREA + key] = index;\n}\n\nLeap.prototype.copy = function () {\n\tconst board = new Leap();\n\tconst n = BOARD_AREA + 4*BOARD_SIZE;\n\t(board.board = []).length = n;\n\t(board.moves = []).length = this.moves.length;\n\n\t//copy over the board info (including piece directory)\n\tboard.board = [...this.board];\n\n\tboard.turn = this.turn;\n\tboard.continuedMove = this.continuedMove;\n\tboard.pAmount = {...this.pAmount};\n\tboard.clearMoves();\n\treturn board;\n}\n\nLeap.prototype.set = function (board) {\n  this.board = board.board;\n  this.turn = board.turn;\n  this.continuedMove = board.continuedMove;\n  this.pAmount = board.pAmount;\n  this.moves = board.moves;\n  return this;\n}\n\n// moves[pi] = [0000000 0000000] --> [board index of captured piece + board index of destination cell]\nLeap.prototype.addMove = function (from, to, captured) {\n\tcaptured = captured || 0;\n\tconst pi = (this.board[from] >> 5);\n\tthis.moves[pi].push( (captured << (BIT_INDEX_SHIFT) ) + to );\n}\n\nLeap.prototype.clearMoves = function (pi) {\n\tif (pi !== undefined) {\n\t\tthis.moves[pi] = [];\n\t\treturn;\n\t}\n\tfor (let i=0; i<4*BOARD_SIZE; i++) this.moves[i] = [];\n}\n\nLeap.prototype.highlightMoves = function (piece) {\n\tconst nMoves = this.moves[piece].length;\n\tfor (let i=0; i<nMoves; i++) {\n\t\tlet to = ( this.moves[piece][i] & (BIT_AREA - 1) );\n\t\tthis.board[to] |= 2;\n\t}\n}\n\nLeap.prototype.removeHighlight = function () {\n\tfor (let i=0; i<BOARD_AREA; i++) {\n\t\tif (this.board[i] & 2) (this.board[i] = this.board[i] ^ 2);\n\t}\n}\n\n/*==========\t\t\t\t\t\t\t\t\t\t\tCLONE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t==========*/\n\n//Assume special tiles won't appear on spawn rows\nLeap.prototype.makeClone = function (from, to) {\n\tconst player = this.turn;\n\tthis.pAmount[player]++;\n\tconst c = (player === 12) ? BIT_MAX_PI : 0;\n\tlet key;\n\t//Find first empty slot\n\tfor (key= BOARD_SIZE+c; key< 2*BOARD_SIZE+c; key++) {\n\t\tif (this.board[BOARD_AREA + key] === undefined) {\n\t\t\tthis.board[BOARD_AREA + key] = to;\n\t\t\tthis.board[to] = (key << 5) | player | 16;\n\t\t\tthis.board[from] |= 16;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nLeap.prototype.onCloningCell = function (from) {\n\tconst onRow = from/BOARD_SIZE\n\tconst piece = this.board[from];\n\tconst onBoundaryColumn = (from+1)%BOARD_SIZE < 2;\n\tconst onBoundaryRow = (onRow + 1)%BOARD_SIZE < 2;\n\n\t//To clone: NOT be on boundary column, BE on boundary row, NOT be cloned yet\n\tif (onBoundaryColumn || !onBoundaryRow || (piece & 16) ) return false;\n\n\tconst spawnRow = ( (piece >> 5) & BIT_MAX_PI ) ? (BOARD_SIZE-1) : 0;\n\treturn (onRow ^ spawnRow);\n}\n//Assumes valid move\nLeap.prototype.isCloneMove = function (from, to) {\n\t//if on cloning cell, suffice to show if destination is on spawn row\n\tconst spawnRow = ( (this.board[from] >> 5) & BIT_MAX_PI ) ? (BOARD_SIZE - 1) : 0;\n\treturn this.onCloningCell(from) && (Math.floor(to/BOARD_SIZE) === spawnRow);\n}\n\n/*==========\t\t\t\t\t\t\t\t\t\t\tMOVE LOGIC\t\t\t\t\t\t\t\t\t\t\t\t==========*/\n\nLeap.prototype.canLeap = function (from, adj) {\n\tconst to = this.getInverseIndex(from);\n\n\t//DOES NOT CONSIDER SPECIAL PIECE '10'\n\tif (this.getPlayer(to)) return;\n\n\tconst inv = this.getInverseIndex(adj);\n\tconst phaseAdj = this.getPlayer(adj);\n\tconst phaseFar = this.getPlayer(inv);\n\n\tif ( (phaseAdj ^ phaseFar ^ this.turn) === 8 ) {\n\t\tthis.addMove(from, to, (phaseAdj ? adj : inv));\n\t}\n\t//if neighbor cell is a phase, leap_cell clear, and (enemy piece on phaseAdj XOR enemy piece on phaseFar)\n}\n\nLeap.prototype.canJump = function (from, direction) {\n\t//if adj cell occupied, jumpCell in bounds, jumpCell clear, and jumpCell has enemy piece\n\tconst adj = from+direction;\n\tconst to = adj+direction;\n\tif (this.inBounds(to) && !this.getPlayer(to)) {\n\t\tthis.addMove(from, to, adj);\n\t}\n}\n\nLeap.prototype.isPhaseMove = function (from, to, captured) {\n\tconst bothPhases = (this.board[from] & this.board[to]) & 1;\n\treturn !captured && bothPhases && this.getInverseIndex(from) === to;\n}\n\nLeap.prototype.canPhase = function (from, to) {\n\tconst isPhase = (this.board[from] & 1);\n\tconst isDestinationEmpty = !(this.board[to] & 4); //1 if player piece\n\tif (isPhase && isDestinationEmpty) {\n\t\tthis.addMove(from, to);\n\t}\n}\n\n//reaching this function implies selected piece can be cloned, so piece is on a bounding row\nLeap.prototype.getSpawnCells = function (from) {\n\tconst spawnRow = ( from/BOARD_SIZE ^ (BOARD_SIZE-1) );\n\tfor (let col=1; col<BOARD_SIZE-1;col++) {\n\t\tlet to = spawnRow*BOARD_SIZE + col;\n\t\tlet spawnCellEmpty = !(this.board[to] & 4);\n\n\t\t//if spawnCell doesn't have a player on it\n\t\tif (spawnCellEmpty) this.addMove(from, to);\n\t}\n}\n\nLeap.prototype.getMovesInDirection = function (from, direction) {\n\t//check adjacent cells of piece p wrt the boundary\n\tconst adj = from+direction;\n\tconst isPhase = this.board[adj] & 1;\n\tconst jumpWithinBounds = Math.abs( (adj+direction)%BOARD_SIZE - from%BOARD_SIZE ) < 3;\n\tif (isPhase) this.canLeap(from, adj);\n\n\tif ( (this.getPlayer(adj) ^ this.turn) === 8 ) {\n\t\tif (jumpWithinBounds) this.canJump(from, direction);\n \t}\n\telse this.addMove(from, adj);\n}\n\nLeap.prototype.getMoves = function (from) {\n\tconst bCol = (from+1)%BOARD_SIZE < 2 ? (from+1)%BOARD_SIZE : undefined;\n\tfor (let r=-1; r<2; r++) {\n\t\tfor (let c=-1+(bCol === 1 ? 1 : 0); c<2-(bCol === 0 ? 1 : 0); c++) {\n\t\t\tlet direction = (r*BOARD_SIZE) + c;\n\t\t\tlet adj = from+direction;\n\t\t\tlet validDirection = (direction) && ( this.getPlayer(adj) ^ this.turn ) && this.inBounds(adj);\n\t\t\tif ( validDirection ) this.getMovesInDirection(from, direction);\n\t\t}\n\t}\n\tconst inv = this.getInverseIndex(from);\n\t// phase condition\n\tif ( !this.isRedundantMove(from, inv) ) this.canPhase(from, inv);\n\t// clone condition\n\tif (!(this.board[from] & 16) && this.onCloningCell(from) ) this.getSpawnCells(from);\n}\n\nLeap.prototype.getAllMoves = function (player) {\n\tconst c = (player === 12) ? BIT_MAX_PI : 0;\n\tvar hasMoves = 0;\n\tfor (let key=c; key < 2*BOARD_SIZE + c; key++) {\n\t\tlet from = this.board[BOARD_AREA + key];\n\t\tif (!(from === undefined || from < 0)) {\n\t\t\thasMoves++;\n\t\t\tthis.getMoves(from);\n\t\t}\n\t}\n\treturn hasMoves;\n}\n\n//Performs move. returns true if enemy runs out of pieces\nLeap.prototype.doMove = function (from, to) {\n\t//CACHE this.board HERE. ITS A VERY HOT FUNCTION lmao (. Y .)\n\tif (this.isCloneMove(from, to)) {\n\t\tthis.makeClone(from, to);\n\t\tthis.removeHighlight();\n\t\tthis.clearMoves();\n\t\tthis.switchPlayer();\n\t\tthis.continuedMove = false;\n\t\treturn;\n\t}\n\tconst pi = this.board[from] >> 5;\n\tconst capturedPiece = this.getCapturedPiece(pi, to);\n\tthis.removeHighlight();\n\tthis.clearMoves();\n\n\tconst piece = (pi << 5) | (this.board[from] & 16) | this.turn;\n\n\tif ( (this.board[to] & 12) === 8 ) {\n\t\t//SPECIAL PIECE *any player can move.... but how is TODO*\n\t\tthis.board[to] |= (pi << 5);\n\t} else {\n\t\t//We can assume this cell is empty\n\t\tthis.board[to] |= piece;\n\t}\n\n\tif (capturedPiece) {\n\t\tconst ci = this.board[capturedPiece] >> 5;\n\t\tif(ci < 0) debugger;\n\t\tthis.board[capturedPiece] &= 3;\n\t\tthis.board[BOARD_AREA + ci] = ~this.board[BOARD_AREA + ci]; //He DED\n\n\n\t\tif( (--this.pAmount[(this.turn ^ 8)]) === 0) return true;\n\t\t//if Leap, then we get the direction by the difference between captured index and adjacent movement cell\n\t\tconst capturedAdjToDestination = (-9 <= (to-capturedPiece) && (to-capturedPiece) <= 9);\n\t\tconst capturedDirection = capturedAdjToDestination ? (to-capturedPiece) : (capturedPiece - from);\n\t\t//if can continue move in direction\n\t\tlet adj = to+capturedDirection;\n\t\tif ( this.board[adj] & 1 ) this.canLeap(to, adj);\n\t\tif ( (this.getPlayer(adj) ^ this.turn) === 8) this.canJump(to, capturedDirection);\n\t}\n\tthis.board[from] &= 3; //keep only cell data\n\tthis.board[BOARD_AREA + pi] = to;\n\n\tconst canPhase = (this.board[to] & 1) && !this.isPhaseMove(from, to, capturedPiece);\n\tconst canClone = this.onCloningCell(to) && !this.onCloningCell(from);\n\t//If can clone or is on phase that piece hasn't just travelled through\n\tif (canPhase) this.canPhase(to, this.getInverseIndex(to));\n\tif (canClone)\tthis.getSpawnCells(to);\n\n\t//if not a continued move, change player\n\tif(!this.moves[pi].length) this.switchPlayer();\n\telse {this.continuedMove = to;/*debugger;*/}\n\n\treturn false;\n}\n\n/*==========\t\t\t\t\t\t\t\t\t\t\tREFERENCES\t\t\t\t\t\t\t\t\t\t\t\t==========*/\n\nLeap.prototype.getPlayer = function (index) {\n\tconst pid = (this.board[index] & 12);\n\treturn (pid === 4 || pid === 12) ? pid : 0;\n}\n//NOTE: index 0 can never be captured\n//How to optimize? Well, if moves[pid][i] !< BOARD_AREA, then it must be a capture\n\nLeap.prototype.getCapturedPiece = function (pid, to) {\n\tconst nMoves = this.moves[pid].length;\n\tfor (let i=0; i< nMoves; i++) {\n\t\tlet move = this.moves[pid][i];\n\t\tlet capturedPiece = move >> (BIT_INDEX_SHIFT);\n\t\tif (capturedPiece >= BOARD_AREA) debugger;\n\t\tif ( (move & (BIT_AREA - 1)) === to  && capturedPiece) return capturedPiece;\n\t}\n}\n\n//ONLY WORKS on NxN boards and phase group orders of 2\nLeap.prototype.getInverseIndex = function (index) {\n\treturn (BOARD_AREA - 1) - index;\n}\n\nLeap.prototype.getConfig = () => ({\n  'BOARD_SIZE': BOARD_SIZE,\n  'BOARD_AREA': BOARD_AREA,\n  'BIT_SIZE': BIT_SIZE,\n});\n\n/*==========\t\t\t\t\t\t\t\t\t\t\tUTILITY\t\t\t\t\t\t\t\t\t\t\t\t\t\t==========*/\n\nLeap.prototype.inBounds = function (index) {\n\treturn 0 <= index && index < BOARD_AREA;\n}\n\nLeap.prototype.switchPlayer = function () {\n\tthis.turn ^= 8;\n\tthis.continuedMove = false;\n\treturn this.turn;\n}\n\nLeap.prototype.isRedundantMove = function (from, to) {\n\tconst pi = (this.board[from] >> 5);\n\tconst n = this.moves[pi].length;\n\tfor (let i=0; i<n; i++) {\n\t\tif ( (this.moves[pi][i] & (BIT_AREA-1)) === to ) return true;\n\t}\n\treturn false;\n}\n\nLeap.prototype.validMove = function (piece, index) {\n\tconst n = this.moves[piece].length;\n\tfor (let i=0; i<n; i++) {\n\t\tif ( (this.moves[piece][i] & (BIT_AREA - 1)) === index ) return true;\n\t}\n\treturn false;\n}\n\n//not sure how performant this is...\nLeap.prototype.randomMove = function () {\n\tif (!this.continuedMove) {\n\t\t//if no moves, enemy wins\n\t\tif (!this.getAllMoves(this.turn)) return (this.turn ^ 8);\n\n\t\t//There's gotta be a better way to remove undefined indeces\n\t\tconst moves = {...this.moves};\n\t\tconst reducedMoveList = Object.keys(moves)\n\t\t\t.filter( item => moves[item].length)\n\t\t\t.reduce( (res, key) => (res[key] = moves[key], res), {} );\n\t\tconst moveKeys = Object.keys(reducedMoveList);\n\t\tconst length = moveKeys.length;\n\t\tconst piece = moveKeys[Math.floor(Math.random() * length)];\n\t\tconst to = reducedMoveList[piece][Math.floor(Math.random() * reducedMoveList[piece].length)] & (BIT_AREA - 1);\n\t\tconst from = this.board[BOARD_AREA + parseInt(piece)];\n\n\t\treturn (this.doMove(from, to)) ? this.turn : 0;\n\t} else {\n\n\t\tthis.clearMoves();\n\t\tconst from = this.continuedMove;\n\t\tthis.getMoves(from);\n\t\tconst pi = this.board[from] >> 5;\n\t\tconst to = this.moves[pi][Math.floor(Math.random() * this.moves[pi].length)] & (BIT_AREA - 1);\n\t\treturn (this.doMove(from, to)) ? this.turn : 0;\n\t}\n}\n\n//what should the heuristic be??\nLeap.prototype.score = function () {\n\tlet p1 = 0;\n\tlet p2 = 0;\n\tconst spawnRow = index => ( (index >> 5) & BIT_MAX_PI ) ? (BOARD_SIZE-1) : 0;\n\n\t//no piece difference...\n\tif ( (this.pAmount[PLAYER_ONE] - this.pAmount[PLAYER_TWO]) === 0 ) {\n\t\tfor (let key=0; key<2*BIT_MAX_PI && (this.board[BOARD_AREA + key] !== undefined);key++) {\n\t\t\tconst piece = this.board[BOARD_AREA + key];\n\t\t\tconst distanceFromSpawn = Math.abs(spawnRow(piece) - piece/BOARD_SIZE);\n\t\t\tif (key < BIT_MAX_PI) p1 += distanceFromSpawn;\n\t\t\telse p2 += distanceFromSpawn;\n\t\t}\n\t} else {\n\t\tconst p = {...this.board.slice(BOARD_AREA)};\n\t\tconst pieces = Object.keys(p)\n\t\t\t.filter( item => p[item] !== undefined)\n\t\t\t.reduce( (res, key) => (res[key] = p[key], res), {} );\n\t\tconst n = Object.keys(pieces).length;\n\t\tfor (let pi in pieces) {\n\t\t\tconst isClone = 2*(pieces[pi] & 16);\n\t\t\tconst score = (5+!isClone);\n\t\t\tif (parseInt(pi)/BIT_MAX_PI) p2 += score;\n\t\t\telse p1 += score;\n\t\t}\n\t}\n\tif (p1 > p2) return PLAYER_ONE;\n\telse if (p2 > p1) return PLAYER_TWO;\n\telse return 0;\n}\n\nexport default Leap;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583353478744
  },
  "{\"sourceRoot\":\"/Users/bacchus/git/Leap/server/assets\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/bacchus/git/Leap/server\",\"filename\":\"/Users/bacchus/git/Leap/server/assets/util.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/bacchus/git/Leap/server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/bacchus/git/Leap/server/assets",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/bacchus/git/Leap/server",
      "filename": "/Users/bacchus/git/Leap/server/assets/util.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/bacchus/git/Leap/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/bacchus/git/Leap/server/assets/util.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/bacchus/git/Leap/server/assets/util.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/bacchus/git/Leap/server/assets",
        "sourceFileName": "util.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cellType = exports.phaseLayouts = exports.CELL_COLORS = void 0;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CELL_COLORS = [\"gray1\", \"gray2\", \"pink\", \"red\", \"orange\", \"yellow\", \"green\", \"blue\"];\nexports.CELL_COLORS = CELL_COLORS;\n\nvar phaseLayouts = _defineProperty({}, 0, [17, 41, 26, 34, 19, 43, 20, 44, 29, 37, 22, 46]);\n\nexports.phaseLayouts = phaseLayouts;\n\nvar cellType = function cellType(index) {\n  var type;\n\n  switch (true) {\n    case index === 17 || index === 41:\n      type = 2;\n      break;\n\n    case index === 26 || index === 34:\n      type = 3;\n      break;\n\n    case index === 19 || index === 43:\n      type = 4;\n      break;\n\n    case index === 20 || index === 44:\n      type = 5;\n      break;\n\n    case index === 29 || index === 37:\n      type = 6;\n      break;\n\n    case index === 22 || index === 46:\n      type = 7;\n      break;\n\n    default:\n      type = index % 2 ? 1 : 0;\n      break;\n  }\n\n  return type;\n}; //\n// module.exports.inBounds = function (row, col) {\n// \treturn ((row > -1 && row < 8) && (col > -1 && col < 8));\n// }\n\n\nexports.cellType = cellType;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWwuanMiXSwibmFtZXMiOlsiQ0VMTF9DT0xPUlMiLCJwaGFzZUxheW91dHMiLCJjZWxsVHlwZSIsImluZGV4IiwidHlwZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQ08sSUFBTUEsV0FBVyxHQUFHLENBQUUsT0FBRixFQUFXLE9BQVgsRUFBb0IsTUFBcEIsRUFBNEIsS0FBNUIsRUFBbUMsUUFBbkMsRUFBNkMsUUFBN0MsRUFBdUQsT0FBdkQsRUFBZ0UsTUFBaEUsQ0FBcEI7OztBQUVBLElBQU1DLFlBQVksdUJBQ3ZCLENBRHVCLEVBQ25CLENBQUUsRUFBRixFQUFNLEVBQU4sRUFBVSxFQUFWLEVBQWMsRUFBZCxFQUFtQixFQUFuQixFQUF1QixFQUF2QixFQUE0QixFQUE1QixFQUFnQyxFQUFoQyxFQUFxQyxFQUFyQyxFQUF5QyxFQUF6QyxFQUE4QyxFQUE5QyxFQUFrRCxFQUFsRCxDQURtQixDQUFsQjs7OztBQUlBLElBQU1DLFFBQVEsR0FBRyxTQUFYQSxRQUFXLENBQUFDLEtBQUssRUFBSTtBQUNoQyxNQUFJQyxJQUFKOztBQUNBLFVBQVEsSUFBUjtBQUNDLFNBQU1ELEtBQUssS0FBSyxFQUFYLElBQW1CQSxLQUFLLEtBQUssRUFBbEM7QUFDQ0MsTUFBQUEsSUFBSSxHQUFHLENBQVA7QUFDQTs7QUFDRCxTQUFNRCxLQUFLLEtBQUssRUFBWCxJQUFtQkEsS0FBSyxLQUFLLEVBQWxDO0FBQ0NDLE1BQUFBLElBQUksR0FBRyxDQUFQO0FBQ0E7O0FBQ0QsU0FBTUQsS0FBSyxLQUFLLEVBQVgsSUFBbUJBLEtBQUssS0FBSyxFQUFsQztBQUNDQyxNQUFBQSxJQUFJLEdBQUcsQ0FBUDtBQUNBOztBQUNELFNBQU1ELEtBQUssS0FBSyxFQUFYLElBQW1CQSxLQUFLLEtBQUssRUFBbEM7QUFDQ0MsTUFBQUEsSUFBSSxHQUFHLENBQVA7QUFDQTs7QUFDRCxTQUFNRCxLQUFLLEtBQUssRUFBWCxJQUFtQkEsS0FBSyxLQUFLLEVBQWxDO0FBQ0NDLE1BQUFBLElBQUksR0FBRyxDQUFQO0FBQ0E7O0FBQ0QsU0FBTUQsS0FBSyxLQUFLLEVBQVgsSUFBbUJBLEtBQUssS0FBSyxFQUFsQztBQUNDQyxNQUFBQSxJQUFJLEdBQUcsQ0FBUDtBQUNBOztBQUNEO0FBQ0NBLE1BQUFBLElBQUksR0FBSUQsS0FBSyxHQUFHLENBQVQsR0FBYyxDQUFkLEdBQWtCLENBQXpCO0FBQ0E7QUFyQkY7O0FBdUJBLFNBQU9DLElBQVA7QUFDQSxDQTFCTSxDLENBMkJQO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9iYWNjaHVzL2dpdC9MZWFwL3NlcnZlci9hc3NldHMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCBjb25zdCBDRUxMX0NPTE9SUyA9IFsgXCJncmF5MVwiLCBcImdyYXkyXCIsIFwicGlua1wiLCBcInJlZFwiLCBcIm9yYW5nZVwiLCBcInllbGxvd1wiLCBcImdyZWVuXCIsIFwiYmx1ZVwiXTtcblxuZXhwb3J0IGNvbnN0IHBoYXNlTGF5b3V0cyA9IHtcblx0WzBdOiBbIDE3LCA0MSxcdDI2LCAzNCxcdFx0MTksIDQzLFx0XHQyMCwgNDQsXHRcdDI5LCAzNywgXHQyMiwgNDZdIC8vIHNwYWNlZCBieSBjb2x1bW4gZm9yIHNvbWUgcmVhc29uP1xufTtcblxuZXhwb3J0IGNvbnN0IGNlbGxUeXBlID0gaW5kZXggPT4ge1xuXHRsZXQgdHlwZTtcblx0c3dpdGNoICh0cnVlKSB7XG5cdFx0Y2FzZSAoaW5kZXggPT09IDE3KSB8fCAoaW5kZXggPT09IDQxKTpcblx0XHRcdHR5cGUgPSAyO1xuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSAoaW5kZXggPT09IDI2KSB8fCAoaW5kZXggPT09IDM0KTpcblx0XHRcdHR5cGUgPSAzO1xuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSAoaW5kZXggPT09IDE5KSB8fCAoaW5kZXggPT09IDQzKTpcblx0XHRcdHR5cGUgPSA0O1xuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSAoaW5kZXggPT09IDIwKSB8fCAoaW5kZXggPT09IDQ0KTpcblx0XHRcdHR5cGUgPSA1O1xuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSAoaW5kZXggPT09IDI5KSB8fCAoaW5kZXggPT09IDM3KTpcblx0XHRcdHR5cGUgPSA2O1xuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSAoaW5kZXggPT09IDIyKSB8fCAoaW5kZXggPT09IDQ2KTpcblx0XHRcdHR5cGUgPSA3O1xuXHRcdFx0YnJlYWs7XG5cdFx0ZGVmYXVsdDpcblx0XHRcdHR5cGUgPSAoaW5kZXggJSAyKSA/IDEgOiAwO1xuXHRcdFx0YnJlYWs7XG5cdH1cblx0cmV0dXJuIHR5cGU7XG59XG4vL1xuLy8gbW9kdWxlLmV4cG9ydHMuaW5Cb3VuZHMgPSBmdW5jdGlvbiAocm93LCBjb2wpIHtcbi8vIFx0cmV0dXJuICgocm93ID4gLTEgJiYgcm93IDwgOCkgJiYgKGNvbCA+IC0xICYmIGNvbCA8IDgpKTtcbi8vIH1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "util.js"
      ],
      "names": [
        "CELL_COLORS",
        "phaseLayouts",
        "cellType",
        "index",
        "type"
      ],
      "mappings": ";;;;;;;;;AACO,IAAMA,WAAW,GAAG,CAAE,OAAF,EAAW,OAAX,EAAoB,MAApB,EAA4B,KAA5B,EAAmC,QAAnC,EAA6C,QAA7C,EAAuD,OAAvD,EAAgE,MAAhE,CAApB;;;AAEA,IAAMC,YAAY,uBACvB,CADuB,EACnB,CAAE,EAAF,EAAM,EAAN,EAAU,EAAV,EAAc,EAAd,EAAmB,EAAnB,EAAuB,EAAvB,EAA4B,EAA5B,EAAgC,EAAhC,EAAqC,EAArC,EAAyC,EAAzC,EAA8C,EAA9C,EAAkD,EAAlD,CADmB,CAAlB;;;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAChC,MAAIC,IAAJ;;AACA,UAAQ,IAAR;AACC,SAAMD,KAAK,KAAK,EAAX,IAAmBA,KAAK,KAAK,EAAlC;AACCC,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD,SAAMD,KAAK,KAAK,EAAX,IAAmBA,KAAK,KAAK,EAAlC;AACCC,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD,SAAMD,KAAK,KAAK,EAAX,IAAmBA,KAAK,KAAK,EAAlC;AACCC,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD,SAAMD,KAAK,KAAK,EAAX,IAAmBA,KAAK,KAAK,EAAlC;AACCC,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD,SAAMD,KAAK,KAAK,EAAX,IAAmBA,KAAK,KAAK,EAAlC;AACCC,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD,SAAMD,KAAK,KAAK,EAAX,IAAmBA,KAAK,KAAK,EAAlC;AACCC,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD;AACCA,MAAAA,IAAI,GAAID,KAAK,GAAG,CAAT,GAAc,CAAd,GAAkB,CAAzB;AACA;AArBF;;AAuBA,SAAOC,IAAP;AACA,CA1BM,C,CA2BP;AACA;AACA;AACA",
      "sourceRoot": "/Users/bacchus/git/Leap/server/assets",
      "sourcesContent": [
        "\nexport const CELL_COLORS = [ \"gray1\", \"gray2\", \"pink\", \"red\", \"orange\", \"yellow\", \"green\", \"blue\"];\n\nexport const phaseLayouts = {\n\t[0]: [ 17, 41,\t26, 34,\t\t19, 43,\t\t20, 44,\t\t29, 37, \t22, 46] // spaced by column for some reason?\n};\n\nexport const cellType = index => {\n\tlet type;\n\tswitch (true) {\n\t\tcase (index === 17) || (index === 41):\n\t\t\ttype = 2;\n\t\t\tbreak;\n\t\tcase (index === 26) || (index === 34):\n\t\t\ttype = 3;\n\t\t\tbreak;\n\t\tcase (index === 19) || (index === 43):\n\t\t\ttype = 4;\n\t\t\tbreak;\n\t\tcase (index === 20) || (index === 44):\n\t\t\ttype = 5;\n\t\t\tbreak;\n\t\tcase (index === 29) || (index === 37):\n\t\t\ttype = 6;\n\t\t\tbreak;\n\t\tcase (index === 22) || (index === 46):\n\t\t\ttype = 7;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ttype = (index % 2) ? 1 : 0;\n\t\t\tbreak;\n\t}\n\treturn type;\n}\n//\n// module.exports.inBounds = function (row, col) {\n// \treturn ((row > -1 && row < 8) && (col > -1 && col < 8));\n// }\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583353478745
  }
}