{"ast":null,"code":"\"use strict\";\n/**\n * We do not assign 'storage' to window.localStorage immediatelly for React\n * Native compatibility. window.localStorage is not present when this module is\n * loaded.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar storage;\n\nfunction getStorage() {\n  if (!storage) {\n    storage = typeof cc !== 'undefined' && cc.sys && cc.sys.localStorage ? cc.sys.localStorage // compatibility with cocos creator\n    : typeof window !== \"undefined\" && window.localStorage //RN does have window object at this point, but localStorage is not defined\n    ? window.localStorage // regular browser environment\n    : {\n      cache: {},\n      setItem: function (key, value) {\n        this.cache[key] = value;\n      },\n      getItem: function (key) {\n        this.cache[key];\n      },\n      removeItem: function (key) {\n        delete this.cache[key];\n      }\n    };\n  }\n\n  return storage;\n}\n\nfunction setItem(key, value) {\n  getStorage().setItem(key, value);\n}\n\nexports.setItem = setItem;\n\nfunction removeItem(key) {\n  getStorage().removeItem(key);\n}\n\nexports.removeItem = removeItem;\n\nfunction getItem(key, callback) {\n  var value = getStorage().getItem(key);\n\n  if (typeof Promise === 'undefined' || // old browsers\n  !(value instanceof Promise)) {\n    // browser has synchronous return\n    callback(value);\n  } else {\n    // react-native is asynchronous\n    value.then(function (id) {\n      return callback(id);\n    });\n  }\n}\n\nexports.getItem = getItem;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/node_modules/colyseus.js/lib/Storage.js"],"names":["Object","defineProperty","exports","value","storage","getStorage","cc","sys","localStorage","window","cache","setItem","key","getItem","removeItem","callback","Promise","then","id"],"mappings":"AAAA;AACA;;;;;;AAKAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA,IAAIC,OAAJ;;AACA,SAASC,UAAT,GAAsB;AAClB,MAAI,CAACD,OAAL,EAAc;AACVA,IAAAA,OAAO,GAAI,OAAQE,EAAR,KAAgB,WAAhB,IAA+BA,EAAE,CAACC,GAAlC,IAAyCD,EAAE,CAACC,GAAH,CAAOC,YAAjD,GACJF,EAAE,CAACC,GAAH,CAAOC,YADH,CACgB;AADhB,MAEJ,OAAQC,MAAR,KAAoB,WAApB,IAAmCA,MAAM,CAACD,YAA1C,CAAuD;AAAvD,MACIC,MAAM,CAACD,YADX,CACwB;AADxB,MAEI;AACEE,MAAAA,KAAK,EAAE,EADT;AAEEC,MAAAA,OAAO,EAAE,UAAUC,GAAV,EAAeT,KAAf,EAAsB;AAAE,aAAKO,KAAL,CAAWE,GAAX,IAAkBT,KAAlB;AAA0B,OAF7D;AAGEU,MAAAA,OAAO,EAAE,UAAUD,GAAV,EAAe;AAAE,aAAKF,KAAL,CAAWE,GAAX;AAAkB,OAH9C;AAIEE,MAAAA,UAAU,EAAE,UAAUF,GAAV,EAAe;AAAE,eAAO,KAAKF,KAAL,CAAWE,GAAX,CAAP;AAAyB;AAJxD,KAJV;AAUH;;AACD,SAAOR,OAAP;AACH;;AACD,SAASO,OAAT,CAAiBC,GAAjB,EAAsBT,KAAtB,EAA6B;AACzBE,EAAAA,UAAU,GAAGM,OAAb,CAAqBC,GAArB,EAA0BT,KAA1B;AACH;;AACDD,OAAO,CAACS,OAAR,GAAkBA,OAAlB;;AACA,SAASG,UAAT,CAAoBF,GAApB,EAAyB;AACrBP,EAAAA,UAAU,GAAGS,UAAb,CAAwBF,GAAxB;AACH;;AACDV,OAAO,CAACY,UAAR,GAAqBA,UAArB;;AACA,SAASD,OAAT,CAAiBD,GAAjB,EAAsBG,QAAtB,EAAgC;AAC5B,MAAIZ,KAAK,GAAGE,UAAU,GAAGQ,OAAb,CAAqBD,GAArB,CAAZ;;AACA,MAAI,OAAQI,OAAR,KAAqB,WAArB,IAAoC;AACpC,IAAEb,KAAK,YAAYa,OAAnB,CADJ,EACiC;AAC7B;AACAD,IAAAA,QAAQ,CAACZ,KAAD,CAAR;AACH,GAJD,MAKK;AACD;AACAA,IAAAA,KAAK,CAACc,IAAN,CAAW,UAAUC,EAAV,EAAc;AAAE,aAAOH,QAAQ,CAACG,EAAD,CAAf;AAAsB,KAAjD;AACH;AACJ;;AACDhB,OAAO,CAACW,OAAR,GAAkBA,OAAlB","sourcesContent":["\"use strict\";\n/**\n * We do not assign 'storage' to window.localStorage immediatelly for React\n * Native compatibility. window.localStorage is not present when this module is\n * loaded.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage;\nfunction getStorage() {\n    if (!storage) {\n        storage = (typeof (cc) !== 'undefined' && cc.sys && cc.sys.localStorage)\n            ? cc.sys.localStorage // compatibility with cocos creator\n            : typeof (window) !== \"undefined\" && window.localStorage //RN does have window object at this point, but localStorage is not defined\n                ? window.localStorage // regular browser environment\n                : {\n                    cache: {},\n                    setItem: function (key, value) { this.cache[key] = value; },\n                    getItem: function (key) { this.cache[key]; },\n                    removeItem: function (key) { delete this.cache[key]; },\n                };\n    }\n    return storage;\n}\nfunction setItem(key, value) {\n    getStorage().setItem(key, value);\n}\nexports.setItem = setItem;\nfunction removeItem(key) {\n    getStorage().removeItem(key);\n}\nexports.removeItem = removeItem;\nfunction getItem(key, callback) {\n    var value = getStorage().getItem(key);\n    if (typeof (Promise) === 'undefined' || // old browsers\n        !(value instanceof Promise)) {\n        // browser has synchronous return\n        callback(value);\n    }\n    else {\n        // react-native is asynchronous\n        value.then(function (id) { return callback(id); });\n    }\n}\nexports.getItem = getItem;\n"]},"metadata":{},"sourceType":"script"}