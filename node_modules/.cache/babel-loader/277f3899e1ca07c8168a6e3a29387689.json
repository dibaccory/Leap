{"ast":null,"code":"function apply(src, tar) {\n  tar.headers = src.headers || {};\n  tar.statusMessage = src.statusText;\n  tar.statusCode = src.status;\n  tar.data = src.response;\n}\n\nexport function send(method, uri, opts) {\n  return new Promise(function (res, rej) {\n    opts = opts || {};\n    var k, str, tmp, arr;\n    var req = new XMLHttpRequest();\n    var headers = opts.headers || {}; // IE compatible\n\n    if (opts.timeout) req.timeout = opts.timeout;\n\n    req.ontimeout = req.onerror = function (err) {\n      err.timeout = err.type == 'timeout';\n      rej(err);\n    };\n\n    req.open(method, uri);\n\n    req.onload = function () {\n      arr = req.getAllResponseHeaders().trim().split(/[\\r\\n]+/);\n      apply(req, req); //=> req.headers\n\n      while (tmp = arr.shift()) {\n        tmp = tmp.split(': ');\n        req.headers[tmp.shift().toLowerCase()] = tmp.join(': ');\n      }\n\n      tmp = req.headers['content-type'];\n\n      if (tmp && !!~tmp.indexOf('application/json')) {\n        try {\n          req.data = JSON.parse(req.data, opts.reviver);\n        } catch (err) {\n          apply(req, err);\n          return rej(err);\n        }\n      }\n\n      (req.status >= 400 ? rej : res)(req);\n    };\n\n    if ((str = opts.body) && /Array|Object/.test(str.constructor)) {\n      headers['content-type'] = 'application/json';\n      str = JSON.stringify(str);\n    }\n\n    for (k in headers) {\n      req.setRequestHeader(k, headers[k]);\n    }\n\n    req.send(str);\n  });\n}\nexport var get = send.bind(send, 'GET');\nexport var post = send.bind(send, 'POST');\nexport var patch = send.bind(send, 'PATCH');\nexport var del = send.bind(send, 'DELETE');\nexport var put = send.bind(send, 'PUT');","map":{"version":3,"sources":["/Users/bacchus/git/Leap/node_modules/httpie/dist/httpie.esm.js"],"names":["apply","src","tar","headers","statusMessage","statusText","statusCode","status","data","response","send","method","uri","opts","Promise","res","rej","k","str","tmp","arr","req","XMLHttpRequest","timeout","ontimeout","onerror","err","type","open","onload","getAllResponseHeaders","trim","split","shift","toLowerCase","join","indexOf","JSON","parse","reviver","body","test","constructor","stringify","setRequestHeader","get","bind","post","patch","del","put"],"mappings":"AAAA,SAASA,KAAT,CAAeC,GAAf,EAAoBC,GAApB,EAAyB;AACxBA,EAAAA,GAAG,CAACC,OAAJ,GAAcF,GAAG,CAACE,OAAJ,IAAe,EAA7B;AACAD,EAAAA,GAAG,CAACE,aAAJ,GAAoBH,GAAG,CAACI,UAAxB;AACAH,EAAAA,GAAG,CAACI,UAAJ,GAAiBL,GAAG,CAACM,MAArB;AACAL,EAAAA,GAAG,CAACM,IAAJ,GAAWP,GAAG,CAACQ,QAAf;AACA;;AAED,OAAO,SAASC,IAAT,CAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiC;AACvC,SAAO,IAAIC,OAAJ,CAAY,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACtCH,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACA,QAAII,CAAJ,EAAOC,GAAP,EAAYC,GAAZ,EAAiBC,GAAjB;AACA,QAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACA,QAAInB,OAAO,GAAGU,IAAI,CAACV,OAAL,IAAgB,EAA9B,CAJsC,CAMtC;;AACA,QAAIU,IAAI,CAACU,OAAT,EAAkBF,GAAG,CAACE,OAAJ,GAAcV,IAAI,CAACU,OAAnB;;AAClBF,IAAAA,GAAG,CAACG,SAAJ,GAAgBH,GAAG,CAACI,OAAJ,GAAc,UAAUC,GAAV,EAAe;AAC5CA,MAAAA,GAAG,CAACH,OAAJ,GAAcG,GAAG,CAACC,IAAJ,IAAY,SAA1B;AACAX,MAAAA,GAAG,CAACU,GAAD,CAAH;AACA,KAHD;;AAKAL,IAAAA,GAAG,CAACO,IAAJ,CAASjB,MAAT,EAAiBC,GAAjB;;AAEAS,IAAAA,GAAG,CAACQ,MAAJ,GAAa,YAAY;AACxBT,MAAAA,GAAG,GAAGC,GAAG,CAACS,qBAAJ,GAA4BC,IAA5B,GAAmCC,KAAnC,CAAyC,SAAzC,CAAN;AACAhC,MAAAA,KAAK,CAACqB,GAAD,EAAMA,GAAN,CAAL,CAFwB,CAEP;;AAEjB,aAAOF,GAAG,GAAGC,GAAG,CAACa,KAAJ,EAAb,EAA0B;AACzBd,QAAAA,GAAG,GAAGA,GAAG,CAACa,KAAJ,CAAU,IAAV,CAAN;AACAX,QAAAA,GAAG,CAAClB,OAAJ,CAAYgB,GAAG,CAACc,KAAJ,GAAYC,WAAZ,EAAZ,IAAyCf,GAAG,CAACgB,IAAJ,CAAS,IAAT,CAAzC;AACA;;AAEDhB,MAAAA,GAAG,GAAGE,GAAG,CAAClB,OAAJ,CAAY,cAAZ,CAAN;;AACA,UAAIgB,GAAG,IAAI,CAAC,CAAC,CAACA,GAAG,CAACiB,OAAJ,CAAY,kBAAZ,CAAd,EAA+C;AAC9C,YAAI;AACHf,UAAAA,GAAG,CAACb,IAAJ,GAAW6B,IAAI,CAACC,KAAL,CAAWjB,GAAG,CAACb,IAAf,EAAqBK,IAAI,CAAC0B,OAA1B,CAAX;AACA,SAFD,CAEE,OAAOb,GAAP,EAAY;AACb1B,UAAAA,KAAK,CAACqB,GAAD,EAAMK,GAAN,CAAL;AACA,iBAAOV,GAAG,CAACU,GAAD,CAAV;AACA;AACD;;AAED,OAACL,GAAG,CAACd,MAAJ,IAAc,GAAd,GAAoBS,GAApB,GAA0BD,GAA3B,EAAgCM,GAAhC;AACA,KApBD;;AAsBA,QAAI,CAACH,GAAG,GAAGL,IAAI,CAAC2B,IAAZ,KAAqB,eAAeC,IAAf,CAAoBvB,GAAG,CAACwB,WAAxB,CAAzB,EAA+D;AAC9DvC,MAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACAe,MAAAA,GAAG,GAAGmB,IAAI,CAACM,SAAL,CAAezB,GAAf,CAAN;AACA;;AAED,SAAKD,CAAL,IAAUd,OAAV,EAAmB;AAClBkB,MAAAA,GAAG,CAACuB,gBAAJ,CAAqB3B,CAArB,EAAwBd,OAAO,CAACc,CAAD,CAA/B;AACA;;AAEDI,IAAAA,GAAG,CAACX,IAAJ,CAASQ,GAAT;AACA,GA/CM,CAAP;AAgDA;AAED,OAAO,IAAI2B,GAAG,GAAGnC,IAAI,CAACoC,IAAL,CAAUpC,IAAV,EAAgB,KAAhB,CAAV;AACP,OAAO,IAAIqC,IAAI,GAAGrC,IAAI,CAACoC,IAAL,CAAUpC,IAAV,EAAgB,MAAhB,CAAX;AACP,OAAO,IAAIsC,KAAK,GAAGtC,IAAI,CAACoC,IAAL,CAAUpC,IAAV,EAAgB,OAAhB,CAAZ;AACP,OAAO,IAAIuC,GAAG,GAAGvC,IAAI,CAACoC,IAAL,CAAUpC,IAAV,EAAgB,QAAhB,CAAV;AACP,OAAO,IAAIwC,GAAG,GAAGxC,IAAI,CAACoC,IAAL,CAAUpC,IAAV,EAAgB,KAAhB,CAAV","sourcesContent":["function apply(src, tar) {\n\ttar.headers = src.headers || {};\n\ttar.statusMessage = src.statusText;\n\ttar.statusCode = src.status;\n\ttar.data = src.response;\n}\n\nexport function send(method, uri, opts) {\n\treturn new Promise(function (res, rej) {\n\t\topts = opts || {};\n\t\tvar k, str, tmp, arr;\n\t\tvar req = new XMLHttpRequest;\n\t\tvar headers = opts.headers || {};\n\n\t\t// IE compatible\n\t\tif (opts.timeout) req.timeout = opts.timeout;\n\t\treq.ontimeout = req.onerror = function (err) {\n\t\t\terr.timeout = err.type == 'timeout';\n\t\t\trej(err);\n\t\t}\n\n\t\treq.open(method, uri);\n\n\t\treq.onload = function () {\n\t\t\tarr = req.getAllResponseHeaders().trim().split(/[\\r\\n]+/);\n\t\t\tapply(req, req); //=> req.headers\n\n\t\t\twhile (tmp = arr.shift()) {\n\t\t\t\ttmp = tmp.split(': ');\n\t\t\t\treq.headers[tmp.shift().toLowerCase()] = tmp.join(': ');\n\t\t\t}\n\n\t\t\ttmp = req.headers['content-type'];\n\t\t\tif (tmp && !!~tmp.indexOf('application/json')) {\n\t\t\t\ttry {\n\t\t\t\t\treq.data = JSON.parse(req.data, opts.reviver);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tapply(req, err);\n\t\t\t\t\treturn rej(err);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t(req.status >= 400 ? rej : res)(req);\n\t\t};\n\n\t\tif ((str = opts.body) && /Array|Object/.test(str.constructor)) {\n\t\t\theaders['content-type'] = 'application/json';\n\t\t\tstr = JSON.stringify(str);\n\t\t}\n\n\t\tfor (k in headers) {\n\t\t\treq.setRequestHeader(k, headers[k]);\n\t\t}\n\n\t\treq.send(str);\n\t});\n}\n\nexport var get = send.bind(send, 'GET');\nexport var post = send.bind(send, 'POST');\nexport var patch = send.bind(send, 'PATCH');\nexport var del = send.bind(send, 'DELETE');\nexport var put = send.bind(send, 'PUT');\n"]},"metadata":{},"sourceType":"module"}