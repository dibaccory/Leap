{"ast":null,"code":"export const phaseLayouts = {\n  [0]: [17, 41, 26, 34, 19, 43, 20, 44, 29, 37, 22, 46] // spaced by column for some reason?\n\n};\nexport const toIndex = (row, col) => (row << this.BIT_SHIFT) + col;\nexport const getRow = index => index >> this.BIT_SHIFT;\nexport const getCol = index => index & this.BIT_LENGTH - 1; //Instead of by coordinates, turn into stack\n\nexport const cellType = function (row, col) {\n  let type;\n\n  switch (true) {\n    case col === 1 && row === 2 || col === 6 && row === 5:\n      type = 2;\n      break;\n\n    case col === 3 && row === 2 || col === 4 && row === 5:\n      type = 3;\n      break;\n\n    case col === 4 && row === 2 || col === 3 && row === 5:\n      type = 4;\n      break;\n\n    case col === 5 && row === 3 || col === 2 && row === 4:\n      type = 5;\n      break;\n\n    case col === 5 && row === 4 || col === 2 && row === 3:\n      type = 6;\n      break;\n\n    case col === 6 && row === 2 || col === 1 && row === 5:\n      type = 7;\n      break;\n\n    default:\n      type = (row + col) % 2 === 0 ? 0 : 1;\n      break;\n  }\n\n  return type;\n}; //\n// module.exports.inBounds = function (row, col) {\n// \treturn ((row > -1 && row < 8) && (col > -1 && col < 8));\n// }","map":{"version":3,"sources":["/Users/bacchus/git/Leap/src/js/util.js"],"names":["phaseLayouts","toIndex","row","col","BIT_SHIFT","getRow","index","getCol","BIT_LENGTH","cellType","type"],"mappings":"AAGA,OAAO,MAAMA,YAAY,GAAG;AAC3B,GAAC,CAAD,GAAK,CAAE,EAAF,EAAM,EAAN,EAAU,EAAV,EAAc,EAAd,EAAmB,EAAnB,EAAuB,EAAvB,EAA4B,EAA5B,EAAgC,EAAhC,EAAqC,EAArC,EAAyC,EAAzC,EAA8C,EAA9C,EAAkD,EAAlD,CADsB,CACgC;;AADhC,CAArB;AAIP,OAAO,MAAMC,OAAO,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc,CAACD,GAAG,IAAI,KAAKE,SAAb,IAA0BD,GAAxD;AAEP,OAAO,MAAME,MAAM,GAAIC,KAAD,IAAYA,KAAK,IAAI,KAAKF,SAAzC;AACP,OAAO,MAAMG,MAAM,GAAID,KAAD,IAAYA,KAAK,GAAI,KAAKE,UAAL,GAAgB,CAApD,C,CAGP;;AACA,OAAO,MAAMC,QAAQ,GAAG,UAAUP,GAAV,EAAeC,GAAf,EAAoB;AAC3C,MAAIO,IAAJ;;AACA,UAAQ,IAAR;AACC,SAAMP,GAAG,KAAK,CAAR,IAAaD,GAAG,KAAK,CAAtB,IAA6BC,GAAG,KAAK,CAAR,IAAaD,GAAG,KAAK,CAAvD;AACCQ,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD,SAAMP,GAAG,KAAK,CAAR,IAAaD,GAAG,KAAK,CAAtB,IAA6BC,GAAG,KAAK,CAAR,IAAaD,GAAG,KAAK,CAAvD;AACCQ,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD,SAAMP,GAAG,KAAK,CAAR,IAAaD,GAAG,KAAK,CAAtB,IAA6BC,GAAG,KAAK,CAAR,IAAaD,GAAG,KAAK,CAAvD;AACCQ,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD,SAAMP,GAAG,KAAK,CAAR,IAAaD,GAAG,KAAK,CAAtB,IAA6BC,GAAG,KAAK,CAAR,IAAaD,GAAG,KAAK,CAAvD;AACCQ,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD,SAAMP,GAAG,KAAK,CAAR,IAAaD,GAAG,KAAK,CAAtB,IAA6BC,GAAG,KAAK,CAAR,IAAaD,GAAG,KAAK,CAAvD;AACCQ,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD,SAAMP,GAAG,KAAK,CAAR,IAAaD,GAAG,KAAK,CAAtB,IAA6BC,GAAG,KAAK,CAAR,IAAaD,GAAG,KAAK,CAAvD;AACCQ,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD;AACCA,MAAAA,IAAI,GAAG,CAACR,GAAG,GAAGC,GAAP,IAAc,CAAd,KAAoB,CAApB,GAAwB,CAAxB,GAA4B,CAAnC;AACA;AArBF;;AAuBA,SAAOO,IAAP;AACA,CA1BM,C,CA2BP;AACA;AACA;AACA","sourcesContent":["\n\n\nexport const phaseLayouts = {\n\t[0]: [ 17, 41,\t26, 34,\t\t19, 43,\t\t20, 44,\t\t29, 37, \t22, 46] // spaced by column for some reason?\n};\n\nexport const toIndex = (row, col) => (row << this.BIT_SHIFT) + col;\n\nexport const getRow = (index) => (index >> this.BIT_SHIFT);\nexport const getCol = (index) => (index & (this.BIT_LENGTH-1));\n\n\n//Instead of by coordinates, turn into stack\nexport const cellType = function (row, col) {\n\tlet type;\n\tswitch (true) {\n\t\tcase (col === 1 && row === 2) || (col === 6 && row === 5):\n\t\t\ttype = 2;\n\t\t\tbreak;\n\t\tcase (col === 3 && row === 2) || (col === 4 && row === 5):\n\t\t\ttype = 3;\n\t\t\tbreak;\n\t\tcase (col === 4 && row === 2) || (col === 3 && row === 5):\n\t\t\ttype = 4;\n\t\t\tbreak;\n\t\tcase (col === 5 && row === 3) || (col === 2 && row === 4):\n\t\t\ttype = 5;\n\t\t\tbreak;\n\t\tcase (col === 5 && row === 4) || (col === 2 && row === 3):\n\t\t\ttype = 6;\n\t\t\tbreak;\n\t\tcase (col === 6 && row === 2) || (col === 1 && row === 5):\n\t\t\ttype = 7;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ttype = (row + col) % 2 === 0 ? 0 : 1;\n\t\t\tbreak;\n\t}\n\treturn type;\n}\n//\n// module.exports.inBounds = function (row, col) {\n// \treturn ((row > -1 && row < 8) && (col > -1 && col < 8));\n// }\n"]},"metadata":{},"sourceType":"module"}