{"ast":null,"code":"import _slicedToArray from \"/Users/bacchus/git/Leap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bacchus/git/Leap/src/Menu.js\";\nimport React, { useState, useEffect } from 'react';\nimport './css/menu.css';\nimport './lib/fa/css/all.min.css';\nimport NavModalContent from './NavModalContent';\nimport { CSSTransition } from 'react-transition-group';\nimport { Container } from 'react-bootstrap';\nimport Leap from './Leap';\n\nclass Menu extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      activeNavItem: '',\n      openGame: false\n    };\n    this.openNavModal = this.openNavModal.bind(this);\n    this.begin = this.begin.bind(this);\n  }\n\n  openNavModal(activeItem) {\n    if (activeItem !== this.state.activeNavItem) this.setState({\n      activeNavItem: activeItem\n    });\n  }\n\n  begin(playMode, config) {\n    if (playMode) {\n      //Singleplayer\n      this.setState({\n        openGame: true,\n        gameConfig: config\n      });\n    }\n  }\n\n  render() {\n    //Animate <Intro> on start up, fade in rest of Menu\n    if (this.state.openGame) {\n      return React.createElement(Leap, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"menu-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Leap\"), React.createElement(Settings, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(NavModalContent, {\n      type: this.state.activeNavItem,\n      begin: this.begin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(NavigationContainer, {\n      openNavModal: this.openNavModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction Settings() {\n  const options = {\n    'sfx': {\n      text: 'SFX',\n      icon: 'fas fa-volume-down',\n      type: 'toggle',\n      crossed: false\n    },\n    'music': {\n      text: 'Music',\n      icon: 'fas fa-music',\n      type: 'toggle',\n      crossed: false\n    },\n    'ads': {\n      text: 'Ads',\n      icon: 'fas fa-ad',\n      type: 'page'\n    }\n  };\n  let containerToggle = false;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        container = _useState2[0],\n        showContainer = _useState2[1]; //useEffect(()=>containerToggle = !containerToggle);\n\n\n  const settingsItems = Object.values(options).map((item, i) => React.createElement(SettingsItem, {\n    key: i,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: \"settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-cog\",\n    onClick: () => showContainer(!container),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(CSSTransition, {\n    in: container,\n    timeout: 0,\n    classNames: \"settings-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"setcon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, settingsItems)));\n}\n\nclass NavigationContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeNavItem: props.activeNavItem,\n      activeItemPos: 0,\n      activeItemColor: '',\n      menuItems: [{\n        text: 'Stats',\n        icon: 'fas fa-medal',\n        active: false\n      }, {\n        text: 'Create',\n        icon: 'fas fa-plus',\n        ready: false,\n        active: false\n      }, {\n        text: 'Friends',\n        icon: 'fas fa-users',\n        active: false\n      }]\n    };\n    this.openNavModal = props.openNavModal;\n  }\n\n  render() {\n    const navItems = this.state.menuItems.map((item, i) => React.createElement(NavItem, {\n      key: i,\n      item: item,\n      openNavModal: this.openNavModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"nav-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" \", navItems, \" \");\n  }\n\n}\n\nfunction NavItem(props) {\n  let id = props.item.text.toLowerCase();\n  let classes = 'nav-item';\n  classes += props.item.ready ? ' ready' : '';\n  classes += props.item.active ? ' active' : '';\n  return React.createElement(\"div\", {\n    className: classes,\n    id: id,\n    onClick: () => props.openNavModal(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: props.item.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }));\n}\n\nfunction SettingsItem(props) {\n  let id = props.item.text.toLowerCase();\n  let classes = 'settings-item';\n\n  if (props.item.type === 'toggle') {\n    classes += props.item.crossed ? ' crossed' : '';\n  }\n\n  return React.createElement(\"div\", {\n    className: classes,\n    id: id\n    /*onClick={ () => props.handleClick(id) }*/\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: props.item.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }));\n}\n\nexport default Menu;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/src/Menu.js"],"names":["React","useState","useEffect","NavModalContent","CSSTransition","Container","Leap","Menu","Component","constructor","state","activeNavItem","openGame","openNavModal","bind","begin","activeItem","setState","playMode","config","gameConfig","render","Settings","options","text","icon","type","crossed","containerToggle","container","showContainer","settingsItems","Object","values","map","item","i","NavigationContainer","props","activeItemPos","activeItemColor","menuItems","active","ready","navItems","NavItem","id","toLowerCase","classes","SettingsItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './css/menu.css';\nimport './lib/fa/css/all.min.css';\nimport NavModalContent from './NavModalContent';\nimport { CSSTransition } from 'react-transition-group';\nimport { Container } from 'react-bootstrap';\nimport Leap from './Leap';\n\nclass Menu extends React.Component {\n  constructor() {\n    super();\n\n    this.state = { activeNavItem: '', openGame: false};\n\n    this.openNavModal = this.openNavModal.bind(this);\n    this.begin = this.begin.bind(this);\n    }\n\n    openNavModal(activeItem) {\n      if (activeItem !== this.state.activeNavItem) this.setState({activeNavItem: activeItem});\n    }\n\n    begin(playMode, config) {\n      if(playMode) { //Singleplayer\n          this.setState({openGame: true, gameConfig: config});\n      }\n    }\n\n  render() {\n    //Animate <Intro> on start up, fade in rest of Menu\n\n    if (this.state.openGame) {\n      return <Leap />;\n    }\n\n    return (\n      <div className='menu'>\n        <div className='menu-title'>Leap</div>\n        <Settings/>\n        <NavModalContent\n          type={this.state.activeNavItem}\n          begin={this.begin}\n        />\n        <NavigationContainer openNavModal = { this.openNavModal }/>\n      </div>\n    )\n  }\n}\n\nfunction Settings() {\n  const options= {\n      'sfx'   :{text: 'SFX', icon: 'fas fa-volume-down', type:'toggle', crossed: false},\n      'music' :{text: 'Music', icon: 'fas fa-music', type:'toggle', crossed: false},\n      'ads'   :{text: 'Ads', icon: 'fas fa-ad', type:'page'}\n    };\n  let containerToggle = false;\n  const [container, showContainer] = useState(false);\n  //useEffect(()=>containerToggle = !containerToggle);\n  const settingsItems = Object.values(options).map( (item, i) =>\n    <SettingsItem\n      key={ i }\n      item={ item }\n    />\n  );\n  return ( <div className='settings'>\n      <i className='fas fa-cog' onClick = { () => showContainer(!container) } />\n      <CSSTransition\n        in={container}\n        timeout={0}\n        classNames= 'settings-container'\n      >\n        <div className='setcon'>{settingsItems}</div>\n      </CSSTransition>\n    </div>\n  );\n}\n\nclass NavigationContainer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      activeNavItem: props.activeNavItem,\n      activeItemPos: 0,\n      activeItemColor: '',\n      menuItems: [\n        {text: 'Stats', icon: 'fas fa-medal', active: false},\n        {text: 'Create', icon: 'fas fa-plus', ready: false, active: false},\n        {text: 'Friends', icon: 'fas fa-users', active: false}\n      ],\n    };\n\n    this.openNavModal = props.openNavModal;\n  }\n\n  render() {\n    const navItems = this.state.menuItems.map(\n      (item, i) => <NavItem key={ i }\n                            item={ item }\n                            openNavModal = { this.openNavModal }/> );\n    return ( <div className='nav-container'> { navItems } </div> );\n  }\n}\n\nfunction NavItem(props) {\n  let id = props.item.text.toLowerCase();\n  let classes = 'nav-item';\n  classes += props.item.ready ? ' ready' : '';\n  classes += props.item.active ? ' active': '';\n  return ( <div className= { classes } id={ id } onClick={ () => props.openNavModal(id) }>\n      <i className= { props.item.icon } ></i>\n    </div> );\n}\n\nfunction SettingsItem(props) {\n  let id = props.item.text.toLowerCase();\n  let classes = 'settings-item';\n  if(props.item.type === 'toggle'){\n    classes += props.item.crossed ? ' crossed' : '';\n  }\n  return ( <div className= { classes } id={ id } /*onClick={ () => props.handleClick(id) }*/>\n    <i className= { props.item.icon } ></i>\n  </div> );\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}