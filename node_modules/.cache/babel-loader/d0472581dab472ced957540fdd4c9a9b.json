{"ast":null,"code":"var _jsxFileName = \"/Users/bacchus/git/Leap/client/src/containers/Room/Room.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bool, array, string, object } from 'prop-types';\nimport { getUsers, getGame, getHost, getMe, getMoveSelectionsForActiveGame, getMoveStatusForActiveGame } from '../../selectors/';\nimport { bindActionCreators } from 'redux';\nimport { submitMove, enter, exit } from '../../actions/room.actions';\nimport Game from '../../components/Game';\nimport './Room.css';\n\nclass Room extends React.Component {\n  constructor({\n    active,\n    roomID,\n    me,\n    users,\n    host,\n    game,\n    move,\n    isMoveReadyToSubmit,\n    enter,\n    submitMove\n  }) {}\n\n  componentDidMount() {\n    const _this$props = this.props,\n          me = _this$props.me,\n          enter = _this$props.enter,\n          roomID = _this$props.roomID;\n    if (me) enter({\n      me,\n      roomID\n    });\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          isMoveReadyToSubmit = _this$props2.isMoveReadyToSubmit,\n          submitMove = _this$props2.submitMove,\n          game = _this$props2.game,\n          move = _this$props2.move,\n          roomID = _this$props2.roomID;\n    move = move || {\n      to: undefined,\n      from: undefined,\n      captured: undefined\n    };\n    return React.createElement(\"div\", {\n      className: \"room-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Game, {\n      game: game,\n      move: move,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        isMoveReadyToSubmit ? submitMove({\n          roomID,\n          game,\n          move\n        }) : console.log('boopies');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Play\"));\n  }\n\n} //<PlayerHeader user={}/>\n//\n//<PlayerHeader user={}/>\n\n\nRoom.propTypes = {\n  me: object,\n  users: array.isRequired,\n  host: string.isRequired,\n  //userID string?\n  game: object.isRequired,\n  move: object,\n  isMoveReadyToSubmit: bool\n}; //TODO: make selectors\n\nconst mapStateToProps = state => ({\n  users: getUsers(state),\n  host: getHost(state),\n  game: getGame(state),\n  move: getMoveSelectionsForActiveGame(state),\n  isMoveReadyToSubmit: getMoveStatusForActiveGame(state) //errorMessage: getErrorMessage(state),\n  //modalMessage: getModalMessage(state),\n\n});\n\nconst actions = {\n  submitMove,\n  enter,\n  exit\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Room);","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/containers/Room/Room.js"],"names":["React","connect","bool","array","string","object","getUsers","getGame","getHost","getMe","getMoveSelectionsForActiveGame","getMoveStatusForActiveGame","bindActionCreators","submitMove","enter","exit","Game","Room","Component","constructor","active","roomID","me","users","host","game","move","isMoveReadyToSubmit","componentDidMount","props","render","to","undefined","from","captured","console","log","propTypes","isRequired","mapStateToProps","state","actions","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { bool, array, string, object } from 'prop-types';\nimport { getUsers, getGame, getHost, getMe, getMoveSelectionsForActiveGame, getMoveStatusForActiveGame } from '../../selectors/';\nimport { bindActionCreators } from 'redux';\nimport { submitMove, enter, exit } from '../../actions/room.actions';\nimport Game from '../../components/Game';\nimport './Room.css';\n\nclass Room extends React.Component {\n  constructor ({\n  active,\n  roomID,\n  me,\n  users,\n  host,\n  game,\n  move,\n  isMoveReadyToSubmit,\n  enter,\n  submitMove,\n}) {\n}\n\ncomponentDidMount () {\n  const { me, enter, roomID } = this.props;\n  if (me) enter({me, roomID});\n}\n\nrender () {\n  const { isMoveReadyToSubmit, submitMove, game, move, roomID } = this.props;\n  move = move || {to: undefined, from: undefined, captured: undefined};\n\n  return (\n    <div className=\"room-container\">\n      <Game game={game} move={move}/>\n      <button onClick={() => {isMoveReadyToSubmit ? submitMove({roomID, game, move}): console.log('boopies')} }>Play</button>\n    </div>\n  );\n}\n}\n//<PlayerHeader user={}/>\n//\n//<PlayerHeader user={}/>\nRoom.propTypes = {\n  me: object,\n  users: array.isRequired,\n  host: string.isRequired, //userID string?\n  game: object.isRequired,\n  move: object,\n  isMoveReadyToSubmit: bool,\n};\n//TODO: make selectors\nconst mapStateToProps = state => ({\n  users: getUsers(state),\n  host: getHost(state),\n  game: getGame(state),\n  move: getMoveSelectionsForActiveGame(state),\n  isMoveReadyToSubmit: getMoveStatusForActiveGame(state),\n  //errorMessage: getErrorMessage(state),\n  //modalMessage: getModalMessage(state),\n});\n\nconst actions = {\n  submitMove,\n  enter,\n  exit,\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Room);\n"]},"metadata":{},"sourceType":"module"}