{"ast":null,"code":"var _jsxFileName = \"/Users/bacchus/git/Leap/client/src/components/Login/Login.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { bool, array, funca, string, number, object } from 'prop-types';\nimport { getMe } from '../../selectors/';\nimport { userLogin } from '../../actions/user';\nimport { v4 as getUUID } from 'uuid';\n\nclass Login extends React.Component {\n  constructor({\n    me,\n    userLogin\n  }) {\n    super();\n    this.state = {\n      name: ''\n    };\n    this.update = this.handleChange.bind(this);\n    this.submit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    userLogin({\n      me: {\n        id: getUUID(),\n        name: event.target.value\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Display name:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.update,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Done\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nconst actions = {\n  userLogin\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nconst mapStateToProps = state => ({\n  me: getMe(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/components/Login/Login.js"],"names":["React","useEffect","connect","bindActionCreators","bool","array","funca","string","number","object","getMe","userLogin","v4","getUUID","Login","Component","constructor","me","state","name","update","handleChange","bind","submit","handleSubmit","event","setState","target","value","id","render","actions","mapDispatchToProps","dispatch","mapStateToProps","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,MAArC,EAA6CC,MAA7C,QAA2D,YAA3D;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,SAASC,EAAE,IAAIC,OAAf,QAA8B,MAA9B;;AAEA,MAAMC,KAAN,SAAoBd,KAAK,CAACe,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAAE;AAAEC,IAAAA,EAAF;AAAMN,IAAAA;AAAN,GAAF,EAAqB;AAC9B;AACA,SAAKO,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AACA,SAAKC,MAAL,GAAc,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAd;AACA,SAAKC,MAAL,GAAc,KAAKC,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAAd;AACD;;AACDD,EAAAA,YAAY,CAAEI,KAAF,EAAS;AAAE,SAAKC,QAAL,CAAc;AAACP,MAAAA,IAAI,EAAEM,KAAK,CAACE,MAAN,CAAaC;AAApB,KAAd;AAA4C;;AACnEJ,EAAAA,YAAY,CAAEC,KAAF,EAAS;AAAEd,IAAAA,SAAS,CAAC;AAACM,MAAAA,EAAE,EAAE;AAACY,QAAAA,EAAE,EAAEhB,OAAO,EAAZ;AAAgBM,QAAAA,IAAI,EAAEM,KAAK,CAACE,MAAN,CAAaC;AAAnC;AAAL,KAAD,CAAT;AAA8D;;AAErFE,EAAAA,MAAM,GAAI;AACR,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKP,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,IAArC;AAA2C,MAAA,QAAQ,EAAE,KAAKC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AApBiC;;AAqBnC;AAED,MAAMW,OAAO,GAAG;AAAEpB,EAAAA;AAAF,CAAhB;;AAEA,MAAMqB,kBAAkB,GAAGC,QAAQ,IAAI9B,kBAAkB,CAAC4B,OAAD,EAAUE,QAAV,CAAzD;;AACA,MAAMC,eAAe,GAAGhB,KAAK,KAAK;AAAED,EAAAA,EAAE,EAAEP,KAAK,CAACQ,KAAD;AAAX,CAAL,CAA7B;;AAEA,eAAehB,OAAO,CAACgC,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CG,GAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { bool, array, funca, string, number, object } from 'prop-types';\nimport { getMe } from '../../selectors/';\nimport { userLogin } from '../../actions/user';\n\nimport { v4 as getUUID } from 'uuid';\n\nclass Login extends React.Component {\n  constructor ({ me, userLogin }) {\n    super();\n    this.state = {name: ''};\n    this.update = this.handleChange.bind(this);\n    this.submit = this.handleSubmit.bind(this);\n  }\n  handleChange (event) { this.setState({name: event.target.value}); }\n  handleSubmit (event) { userLogin({me: {id: getUUID(), name: event.target.value} }); }\n\n  render () {\n    return (\n      <form onSubmit={this.submit}>\n        <label>\n          Display name:\n          <input type=\"text\" value={this.state.name} onChange={this.update} />\n        </label>\n        <input type=\"submit\" value=\"Done\" />\n      </form>\n    );\n  }\n};\n\nconst actions = { userLogin };\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\nconst mapStateToProps = state => ({ me: getMe(state) });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}