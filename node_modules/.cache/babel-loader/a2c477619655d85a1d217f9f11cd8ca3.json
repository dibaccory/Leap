{"ast":null,"code":"'use strict';\n\nfunction Decoder(buffer) {\n  this._offset = 0;\n\n  if (buffer instanceof ArrayBuffer) {\n    this._buffer = buffer;\n    this._view = new DataView(this._buffer);\n  } else if (ArrayBuffer.isView(buffer)) {\n    this._buffer = buffer.buffer;\n    this._view = new DataView(this._buffer, buffer.byteOffset, buffer.byteLength);\n  } else {\n    throw new Error('Invalid argument');\n  }\n}\n\nfunction utf8Read(view, offset, length) {\n  var string = '',\n      chr = 0;\n\n  for (var i = offset, end = offset + length; i < end; i++) {\n    var byte = view.getUint8(i);\n\n    if ((byte & 0x80) === 0x00) {\n      string += String.fromCharCode(byte);\n      continue;\n    }\n\n    if ((byte & 0xe0) === 0xc0) {\n      string += String.fromCharCode((byte & 0x1f) << 6 | view.getUint8(++i) & 0x3f);\n      continue;\n    }\n\n    if ((byte & 0xf0) === 0xe0) {\n      string += String.fromCharCode((byte & 0x0f) << 12 | (view.getUint8(++i) & 0x3f) << 6 | (view.getUint8(++i) & 0x3f) << 0);\n      continue;\n    }\n\n    if ((byte & 0xf8) === 0xf0) {\n      chr = (byte & 0x07) << 18 | (view.getUint8(++i) & 0x3f) << 12 | (view.getUint8(++i) & 0x3f) << 6 | (view.getUint8(++i) & 0x3f) << 0;\n\n      if (chr >= 0x010000) {\n        // surrogate pair\n        chr -= 0x010000;\n        string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n      } else {\n        string += String.fromCharCode(chr);\n      }\n\n      continue;\n    }\n\n    throw new Error('Invalid byte ' + byte.toString(16));\n  }\n\n  return string;\n}\n\nDecoder.prototype._array = function (length) {\n  var value = new Array(length);\n\n  for (var i = 0; i < length; i++) {\n    value[i] = this._parse();\n  }\n\n  return value;\n};\n\nDecoder.prototype._map = function (length) {\n  var key = '',\n      value = {};\n\n  for (var i = 0; i < length; i++) {\n    key = this._parse();\n    value[key] = this._parse();\n  }\n\n  return value;\n};\n\nDecoder.prototype._str = function (length) {\n  var value = utf8Read(this._view, this._offset, length);\n  this._offset += length;\n  return value;\n};\n\nDecoder.prototype._bin = function (length) {\n  var value = this._buffer.slice(this._offset, this._offset + length);\n\n  this._offset += length;\n  return value;\n};\n\nDecoder.prototype._parse = function () {\n  var prefix = this._view.getUint8(this._offset++);\n\n  var value,\n      length = 0,\n      type = 0,\n      hi = 0,\n      lo = 0;\n\n  if (prefix < 0xc0) {\n    // positive fixint\n    if (prefix < 0x80) {\n      return prefix;\n    } // fixmap\n\n\n    if (prefix < 0x90) {\n      return this._map(prefix & 0x0f);\n    } // fixarray\n\n\n    if (prefix < 0xa0) {\n      return this._array(prefix & 0x0f);\n    } // fixstr\n\n\n    return this._str(prefix & 0x1f);\n  } // negative fixint\n\n\n  if (prefix > 0xdf) {\n    return (0xff - prefix + 1) * -1;\n  }\n\n  switch (prefix) {\n    // nil\n    case 0xc0:\n      return null;\n    // false\n\n    case 0xc2:\n      return false;\n    // true\n\n    case 0xc3:\n      return true;\n    // bin\n\n    case 0xc4:\n      length = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return this._bin(length);\n\n    case 0xc5:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._bin(length);\n\n    case 0xc6:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._bin(length);\n    // ext\n\n    case 0xc7:\n      length = this._view.getUint8(this._offset);\n      type = this._view.getInt8(this._offset + 1);\n      this._offset += 2;\n      return [type, this._bin(length)];\n\n    case 0xc8:\n      length = this._view.getUint16(this._offset);\n      type = this._view.getInt8(this._offset + 2);\n      this._offset += 3;\n      return [type, this._bin(length)];\n\n    case 0xc9:\n      length = this._view.getUint32(this._offset);\n      type = this._view.getInt8(this._offset + 4);\n      this._offset += 5;\n      return [type, this._bin(length)];\n    // float\n\n    case 0xca:\n      value = this._view.getFloat32(this._offset);\n      this._offset += 4;\n      return value;\n\n    case 0xcb:\n      value = this._view.getFloat64(this._offset);\n      this._offset += 8;\n      return value;\n    // uint\n\n    case 0xcc:\n      value = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return value;\n\n    case 0xcd:\n      value = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return value;\n\n    case 0xce:\n      value = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return value;\n\n    case 0xcf:\n      hi = this._view.getUint32(this._offset) * Math.pow(2, 32);\n      lo = this._view.getUint32(this._offset + 4);\n      this._offset += 8;\n      return hi + lo;\n    // int\n\n    case 0xd0:\n      value = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return value;\n\n    case 0xd1:\n      value = this._view.getInt16(this._offset);\n      this._offset += 2;\n      return value;\n\n    case 0xd2:\n      value = this._view.getInt32(this._offset);\n      this._offset += 4;\n      return value;\n\n    case 0xd3:\n      hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n      lo = this._view.getUint32(this._offset + 4);\n      this._offset += 8;\n      return hi + lo;\n    // fixext\n\n    case 0xd4:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n\n      if (type === 0x00) {\n        this._offset += 1;\n        return void 0;\n      }\n\n      return [type, this._bin(1)];\n\n    case 0xd5:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(2)];\n\n    case 0xd6:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(4)];\n\n    case 0xd7:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n\n      if (type === 0x00) {\n        hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n        lo = this._view.getUint32(this._offset + 4);\n        this._offset += 8;\n        return new Date(hi + lo);\n      }\n\n      return [type, this._bin(8)];\n\n    case 0xd8:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(16)];\n    // str\n\n    case 0xd9:\n      length = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return this._str(length);\n\n    case 0xda:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._str(length);\n\n    case 0xdb:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._str(length);\n    // array\n\n    case 0xdc:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._array(length);\n\n    case 0xdd:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._array(length);\n    // map\n\n    case 0xde:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._map(length);\n\n    case 0xdf:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._map(length);\n  }\n\n  throw new Error('Could not parse');\n};\n\nfunction decode(buffer) {\n  var decoder = new Decoder(buffer);\n\n  var value = decoder._parse();\n\n  if (decoder._offset !== buffer.byteLength) {\n    throw new Error(buffer.byteLength - decoder._offset + ' trailing bytes');\n  }\n\n  return value;\n}\n\nmodule.exports = decode;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/node_modules/notepack.io/browser/decode.js"],"names":["Decoder","buffer","_offset","ArrayBuffer","_buffer","_view","DataView","isView","byteOffset","byteLength","Error","utf8Read","view","offset","length","string","chr","i","end","byte","getUint8","String","fromCharCode","toString","prototype","_array","value","Array","_parse","_map","key","_str","_bin","slice","prefix","type","hi","lo","getUint16","getUint32","getInt8","getFloat32","getFloat64","Math","pow","getInt16","getInt32","Date","decode","decoder","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction Decoder(buffer) {\n  this._offset = 0;\n  if (buffer instanceof ArrayBuffer) {\n    this._buffer = buffer;\n    this._view = new DataView(this._buffer);\n  } else if (ArrayBuffer.isView(buffer)) {\n    this._buffer = buffer.buffer;\n    this._view = new DataView(this._buffer, buffer.byteOffset, buffer.byteLength);\n  } else {\n    throw new Error('Invalid argument');\n  }\n}\n\nfunction utf8Read(view, offset, length) {\n  var string = '', chr = 0;\n  for (var i = offset, end = offset + length; i < end; i++) {\n    var byte = view.getUint8(i);\n    if ((byte & 0x80) === 0x00) {\n      string += String.fromCharCode(byte);\n      continue;\n    }\n    if ((byte & 0xe0) === 0xc0) {\n      string += String.fromCharCode(\n        ((byte & 0x1f) << 6) |\n        (view.getUint8(++i) & 0x3f)\n      );\n      continue;\n    }\n    if ((byte & 0xf0) === 0xe0) {\n      string += String.fromCharCode(\n        ((byte & 0x0f) << 12) |\n        ((view.getUint8(++i) & 0x3f) << 6) |\n        ((view.getUint8(++i) & 0x3f) << 0)\n      );\n      continue;\n    }\n    if ((byte & 0xf8) === 0xf0) {\n      chr = ((byte & 0x07) << 18) |\n        ((view.getUint8(++i) & 0x3f) << 12) |\n        ((view.getUint8(++i) & 0x3f) << 6) |\n        ((view.getUint8(++i) & 0x3f) << 0);\n      if (chr >= 0x010000) { // surrogate pair\n        chr -= 0x010000;\n        string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n      } else {\n        string += String.fromCharCode(chr);\n      }\n      continue;\n    }\n    throw new Error('Invalid byte ' + byte.toString(16));\n  }\n  return string;\n}\n\nDecoder.prototype._array = function (length) {\n  var value = new Array(length);\n  for (var i = 0; i < length; i++) {\n    value[i] = this._parse();\n  }\n  return value;\n};\n\nDecoder.prototype._map = function (length) {\n  var key = '', value = {};\n  for (var i = 0; i < length; i++) {\n    key = this._parse();\n    value[key] = this._parse();\n  }\n  return value;\n};\n\nDecoder.prototype._str = function (length) {\n  var value = utf8Read(this._view, this._offset, length);\n  this._offset += length;\n  return value;\n};\n\nDecoder.prototype._bin = function (length) {\n  var value = this._buffer.slice(this._offset, this._offset + length);\n  this._offset += length;\n  return value;\n};\n\nDecoder.prototype._parse = function () {\n  var prefix = this._view.getUint8(this._offset++);\n  var value, length = 0, type = 0, hi = 0, lo = 0;\n\n  if (prefix < 0xc0) {\n    // positive fixint\n    if (prefix < 0x80) {\n      return prefix;\n    }\n    // fixmap\n    if (prefix < 0x90) {\n      return this._map(prefix & 0x0f);\n    }\n    // fixarray\n    if (prefix < 0xa0) {\n      return this._array(prefix & 0x0f);\n    }\n    // fixstr\n    return this._str(prefix & 0x1f);\n  }\n\n  // negative fixint\n  if (prefix > 0xdf) {\n    return (0xff - prefix + 1) * -1;\n  }\n\n  switch (prefix) {\n    // nil\n    case 0xc0:\n      return null;\n    // false\n    case 0xc2:\n      return false;\n    // true\n    case 0xc3:\n      return true;\n\n    // bin\n    case 0xc4:\n      length = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return this._bin(length);\n    case 0xc5:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._bin(length);\n    case 0xc6:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._bin(length);\n\n    // ext\n    case 0xc7:\n      length = this._view.getUint8(this._offset);\n      type = this._view.getInt8(this._offset + 1);\n      this._offset += 2;\n      return [type, this._bin(length)];\n    case 0xc8:\n      length = this._view.getUint16(this._offset);\n      type = this._view.getInt8(this._offset + 2);\n      this._offset += 3;\n      return [type, this._bin(length)];\n    case 0xc9:\n      length = this._view.getUint32(this._offset);\n      type = this._view.getInt8(this._offset + 4);\n      this._offset += 5;\n      return [type, this._bin(length)];\n\n    // float\n    case 0xca:\n      value = this._view.getFloat32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xcb:\n      value = this._view.getFloat64(this._offset);\n      this._offset += 8;\n      return value;\n\n    // uint\n    case 0xcc:\n      value = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return value;\n    case 0xcd:\n      value = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return value;\n    case 0xce:\n      value = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xcf:\n      hi = this._view.getUint32(this._offset) * Math.pow(2, 32);\n      lo = this._view.getUint32(this._offset + 4);\n      this._offset += 8;\n      return hi + lo;\n\n    // int\n    case 0xd0:\n      value = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return value;\n    case 0xd1:\n      value = this._view.getInt16(this._offset);\n      this._offset += 2;\n      return value;\n    case 0xd2:\n      value = this._view.getInt32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xd3:\n      hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n      lo = this._view.getUint32(this._offset + 4);\n      this._offset += 8;\n      return hi + lo;\n\n    // fixext\n    case 0xd4:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      if (type === 0x00) {\n        this._offset += 1;\n        return void 0;\n      }\n      return [type, this._bin(1)];\n    case 0xd5:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(2)];\n    case 0xd6:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(4)];\n    case 0xd7:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      if (type === 0x00) {\n        hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n        lo = this._view.getUint32(this._offset + 4);\n        this._offset += 8;\n        return new Date(hi + lo);\n      }\n      return [type, this._bin(8)];\n    case 0xd8:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(16)];\n\n    // str\n    case 0xd9:\n      length = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return this._str(length);\n    case 0xda:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._str(length);\n    case 0xdb:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._str(length);\n\n    // array\n    case 0xdc:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._array(length);\n    case 0xdd:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._array(length);\n\n    // map\n    case 0xde:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._map(length);\n    case 0xdf:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._map(length);\n  }\n\n  throw new Error('Could not parse');\n};\n\nfunction decode(buffer) {\n  var decoder = new Decoder(buffer);\n  var value = decoder._parse();\n  if (decoder._offset !== buffer.byteLength) {\n    throw new Error((buffer.byteLength - decoder._offset) + ' trailing bytes');\n  }\n  return value;\n}\n\nmodule.exports = decode;\n"]},"metadata":{},"sourceType":"script"}