{"ast":null,"code":"import _objectSpread from \"/Users/bacchus/git/Leap/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport Leap from '../assets/leap';\nexport const getMe = state => state.root.me;\nexport const getIsLoggedIn = state => state.root.isLoggedIn;\nexport const getRooms = state => state.rooms;\nexport const getLobbyRooms = state => {\n  console.log(state);\n  const rooms = state.rooms;\n  return state.views[state.root.activeView].rooms.reduce((obj, room) => _objectSpread({}, obj, {\n    [room]: rooms[room]\n  }), {});\n};\nexport const getActiveRoom = state => {\n  const view = state.views[state.root.activeView];\n  return view.rooms[view.activeRoom];\n}; //TODO: do emit instead and grab from server\n\nexport const getRoom = state => state.rooms[getActiveRoom(state)];\nexport const getUsers = state => getRoom(state).users;\nexport const getGame = state => new Leap().set(getRoom(state).game);\nexport const getHost = state => getRoom(state).host;\nexport const getUserPlaymode = state => {\n  return getRoom(state).player.one === getMe(state).id ? 4 : 12;\n}; //LOCAL\n\nconst isCachedMoveForThisRoom = state => state.rooms[getActiveRoom(state)] === state.root.cachedGame.room;\n\nexport const getMoveSelectionsForActiveGame = state => isCachedMoveForThisRoom(state) ? state.root.cachedGame.move : null;\nexport const getMoveStatusForActiveGame = state => isCachedMoveForThisRoom(state) ? state.root.cachedGame.isMoveReadyToSubmit : false;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/selectors/index.js"],"names":["Leap","getMe","state","root","me","getIsLoggedIn","isLoggedIn","getRooms","rooms","getLobbyRooms","console","log","views","activeView","reduce","obj","room","getActiveRoom","view","activeRoom","getRoom","getUsers","users","getGame","set","game","getHost","host","getUserPlaymode","player","one","id","isCachedMoveForThisRoom","cachedGame","getMoveSelectionsForActiveGame","move","getMoveStatusForActiveGame","isMoveReadyToSubmit"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,gBAAjB;AAEA,OAAO,MAAMC,KAAK,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,EAAlC;AACP,OAAO,MAAMC,aAAa,GAAGH,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWG,UAA1C;AACP,OAAO,MAAMC,QAAQ,GAAGL,KAAK,IAAIA,KAAK,CAACM,KAAhC;AAEP,OAAO,MAAMC,aAAa,GAAGP,KAAK,IAAI;AACpCQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,QAAMM,KAAK,GAAGN,KAAK,CAACM,KAApB;AACA,SAAON,KAAK,CAACU,KAAN,CAAYV,KAAK,CAACC,IAAN,CAAWU,UAAvB,EAAmCL,KAAnC,CAAyCM,MAAzC,CAAiD,CAACC,GAAD,EAAKC,IAAL,uBAAmBD,GAAnB;AAAwB,KAACC,IAAD,GAAQR,KAAK,CAACQ,IAAD;AAArC,IAAjD,EAAgG,EAAhG,CAAP;AACD,CAJM;AAMP,OAAO,MAAMC,aAAa,GAAGf,KAAK,IAAI;AACpC,QAAMgB,IAAI,GAAGhB,KAAK,CAACU,KAAN,CAAYV,KAAK,CAACC,IAAN,CAAWU,UAAvB,CAAb;AACA,SAAOK,IAAI,CAACV,KAAL,CAAWU,IAAI,CAACC,UAAhB,CAAP;AACD,CAHM,C,CAKP;;AACA,OAAO,MAAMC,OAAO,GAAGlB,KAAK,IAAIA,KAAK,CAACM,KAAN,CAAYS,aAAa,CAACf,KAAD,CAAzB,CAAzB;AACP,OAAO,MAAMmB,QAAQ,GAAGnB,KAAK,IAAIkB,OAAO,CAAClB,KAAD,CAAP,CAAeoB,KAAzC;AACP,OAAO,MAAMC,OAAO,GAAGrB,KAAK,IAAI,IAAIF,IAAJ,GAAWwB,GAAX,CAAeJ,OAAO,CAAClB,KAAD,CAAP,CAAeuB,IAA9B,CAAzB;AACP,OAAO,MAAMC,OAAO,GAAGxB,KAAK,IAAIkB,OAAO,CAAClB,KAAD,CAAP,CAAeyB,IAAxC;AAGP,OAAO,MAAMC,eAAe,GAAG1B,KAAK,IAAI;AACtC,SAAQkB,OAAO,CAAClB,KAAD,CAAP,CAAe2B,MAAf,CAAsBC,GAAtB,KAA8B7B,KAAK,CAACC,KAAD,CAAL,CAAa6B,EAA5C,GAAkD,CAAlD,GAAsD,EAA7D;AACD,CAFM,C,CAIP;;AACA,MAAMC,uBAAuB,GAAG9B,KAAK,IAAKA,KAAK,CAACM,KAAN,CAAYS,aAAa,CAACf,KAAD,CAAzB,MAAsCA,KAAK,CAACC,IAAN,CAAW8B,UAAX,CAAsBjB,IAAtG;;AACA,OAAO,MAAMkB,8BAA8B,GAAGhC,KAAK,IAAI8B,uBAAuB,CAAC9B,KAAD,CAAvB,GAAiCA,KAAK,CAACC,IAAN,CAAW8B,UAAX,CAAsBE,IAAvD,GAA8D,IAA9G;AACP,OAAO,MAAMC,0BAA0B,GAAGlC,KAAK,IAAI8B,uBAAuB,CAAC9B,KAAD,CAAvB,GAAiCA,KAAK,CAACC,IAAN,CAAW8B,UAAX,CAAsBI,mBAAvD,GAA6E,KAAzH","sourcesContent":["import Leap from '../assets/leap';\n\nexport const getMe = state => state.root.me;\nexport const getIsLoggedIn = state => state.root.isLoggedIn;\nexport const getRooms = state => state.rooms;\n\nexport const getLobbyRooms = state => {\n  console.log(state);\n  const rooms = state.rooms;\n  return state.views[state.root.activeView].rooms.reduce( (obj,room) => ({...obj, [room]: rooms[room]}), {} );\n};\n\nexport const getActiveRoom = state => {\n  const view = state.views[state.root.activeView];\n  return view.rooms[view.activeRoom];\n}\n\n//TODO: do emit instead and grab from server\nexport const getRoom = state => state.rooms[getActiveRoom(state)];\nexport const getUsers = state => getRoom(state).users;\nexport const getGame = state => new Leap().set(getRoom(state).game);\nexport const getHost = state => getRoom(state).host;\n\n\nexport const getUserPlaymode = state => {\n  return (getRoom(state).player.one === getMe(state).id) ? 4 : 12;\n};\n\n//LOCAL\nconst isCachedMoveForThisRoom = state => (state.rooms[getActiveRoom(state)] === state.root.cachedGame.room);\nexport const getMoveSelectionsForActiveGame = state => isCachedMoveForThisRoom(state) ? state.root.cachedGame.move : null;\nexport const getMoveStatusForActiveGame = state => isCachedMoveForThisRoom(state) ? state.root.cachedGame.isMoveReadyToSubmit : false;\n"]},"metadata":{},"sourceType":"module"}