{"ast":null,"code":"import _slicedToArray from \"/Users/bacchus/git/Leap/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bacchus/git/Leap/client/src/components/Login/Login.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { func } from 'prop-types';\nimport { userLogin } from '../../actions/user';\nimport { v4 as getUUID } from 'uuid';\n\nconst Login = ({\n  userLogin\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        displayName = _useState2[0],\n        setDisplayName = _useState2[1];\n\n  const handleSubmit = event => {\n    userLogin({\n      me: {\n        id: getUUID(),\n        name: displayName\n      }\n    });\n    event.preventDefault();\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Display name:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: displayName,\n    onChange: e => setDisplayName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Done\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n};\n\nLogin.propTypes = {\n  userLogin: func.isRequired\n};\nconst actions = {\n  userLogin\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nexport default connect(mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/components/Login/Login.js"],"names":["React","useState","connect","bindActionCreators","func","userLogin","v4","getUUID","Login","displayName","setDisplayName","handleSubmit","event","me","id","name","preventDefault","e","target","value","propTypes","isRequired","actions","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,EAAE,IAAIC,OAAf,QAA8B,MAA9B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAmB;AAAA,oBACOJ,QAAQ,CAAC,EAAD,CADf;AAAA;AAAA,QACxBQ,WADwB;AAAA,QACXC,cADW;;AAG/B,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BP,IAAAA,SAAS,CAAC;AAACQ,MAAAA,EAAE,EAAE;AAACC,QAAAA,EAAE,EAAEP,OAAO,EAAZ;AAAgBQ,QAAAA,IAAI,EAAEN;AAAtB;AAAL,KAAD,CAAT;AACAG,IAAAA,KAAK,CAACI,cAAN;AACD,GAHD;;AAKE,SACE;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEF,WAA1B;AAAuC,IAAA,QAAQ,EAAEQ,CAAC,IAAIP,cAAc,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASH,CAjBD;;AAmBAX,KAAK,CAACY,SAAN,GAAkB;AAChBf,EAAAA,SAAS,EAAED,IAAI,CAACiB;AADA,CAAlB;AAIA,MAAMC,OAAO,GAAG;AAAEjB,EAAAA;AAAF,CAAhB;;AAEA,MAAMkB,kBAAkB,GAAGC,QAAQ,IAAIrB,kBAAkB,CAACmB,OAAD,EAAUE,QAAV,CAAzD;;AAEA,eAAetB,OAAO,CAACqB,kBAAD,CAAP,CAA4Bf,KAA5B,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { func } from 'prop-types';\nimport { userLogin } from '../../actions/user';\nimport { v4 as getUUID } from 'uuid';\n\nconst Login = ({ userLogin }) => {\n  const [displayName, setDisplayName] = useState('');\n\n  const handleSubmit = (event) => {\n    userLogin({me: {id: getUUID(), name: displayName} });\n    event.preventDefault();\n  }\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <label>\n          Display name:\n          <input type=\"text\" value={displayName} onChange={e => setDisplayName(e.target.value)} />\n        </label>\n        <input type=\"submit\" value=\"Done\" />\n      </form>\n    );\n};\n\nLogin.propTypes = {\n  userLogin: func.isRequired,\n}\n\nconst actions = { userLogin };\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nexport default connect(mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}