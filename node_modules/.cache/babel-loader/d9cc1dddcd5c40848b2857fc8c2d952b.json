{"ast":null,"code":"var _jsxFileName = \"/Users/bacchus/git/Leap/client/src/containers/App/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { bool, object } from 'prop-types';\nimport { getMe, getIsLoggedIn } from '../../selectors/';\nimport { wsConnect } from '../../actions/socket.actions'; //TODO: import WithAuth from 'AuthenticationWrapper'\n\nimport ViewStack from '../ViewStack/';\nimport Login from '../../components/Login/';\nimport './app.css';\n\nconst App = ({\n  me,\n  isLoggedIn,\n  wsConnect\n}) => {\n  wsConnect(); //const ClientSocket = React.createContext();\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, isLoggedIn ? React.createElement(ViewStack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }) : React.createElement(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n\nApp.propTypes = {\n  me: object,\n  isLoggedIn: bool.isRequired\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  wsConnect\n}, dispatch);\n\nconst mapStateToProps = state => ({\n  me: getMe(state),\n  isLoggedIn: getIsLoggedIn(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/containers/App/App.js"],"names":["React","connect","bindActionCreators","bool","object","getMe","getIsLoggedIn","wsConnect","ViewStack","Login","App","me","isLoggedIn","propTypes","isRequired","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,YAA7B;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,kBAArC;AACA,SAASC,SAAT,QAA0B,8BAA1B,C,CACA;;AAEA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,UAAN;AAAkBL,EAAAA;AAAlB,CAAD,KAAmC;AAC7CA,EAAAA,SAAS,GADoC,CAE7C;;AACE,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,UAAU,GAAG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAkB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD/B,CADJ;AAKH,CARD;;AAUAF,GAAG,CAACG,SAAJ,GAAgB;AACdF,EAAAA,EAAE,EAAEP,MADU;AAEdQ,EAAAA,UAAU,EAAET,IAAI,CAACW;AAFH,CAAhB;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAId,kBAAkB,CAAC;AAACK,EAAAA;AAAD,CAAD,EAAcS,QAAd,CAAzD;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCP,EAAAA,EAAE,EAAEN,KAAK,CAACa,KAAD,CADuB;AAEhCN,EAAAA,UAAU,EAAEN,aAAa,CAACY,KAAD;AAFO,CAAL,CAA7B;;AAKA,eAAejB,OAAO,CAACgB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CL,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { bool, object } from 'prop-types';\nimport { getMe, getIsLoggedIn } from '../../selectors/';\nimport { wsConnect } from '../../actions/socket.actions';\n//TODO: import WithAuth from 'AuthenticationWrapper'\n\nimport ViewStack from '../ViewStack/';\nimport Login from '../../components/Login/';\nimport './app.css';\n\nconst App = ({ me, isLoggedIn, wsConnect }) => {\n  wsConnect();\n  //const ClientSocket = React.createContext();\n    return (\n        <div className=\"App\">\n          {isLoggedIn ? <ViewStack/> : <Login/>}\n        </div>\n      );\n}\n\nApp.propTypes = {\n  me: object,\n  isLoggedIn: bool.isRequired,\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({wsConnect}, dispatch);\n\nconst mapStateToProps = state => ({\n  me: getMe(state),\n  isLoggedIn: getIsLoggedIn(state),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}