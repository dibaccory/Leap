{"ast":null,"code":"import _objectSpread from \"/Users/bacchus/git/Leap/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport ROOM from '../constants/room.types';\nimport GAME from '../constants/game.types'; //import socket from '../socket';\n\nimport Leap from '../assets/leap';\nconst game = new Leap(4, 8, 0);\nconst initialState = {\n  'room1': {\n    game: game,\n    whitelist: false,\n    users: ['user1'],\n    host: ['user1']\n  },\n  'room2': {\n    game: game,\n    whitelist: false,\n    users: ['user2'],\n    host: ['user2']\n  }\n};\n\nfunction roomReducer(state = initialState, action) {\n  const _state = state,\n        game = _state.game,\n        move = _state.move;\n\n  switch (action.type) {\n    case ROOM.ENTER:\n      //socket.io.emit('roomAction', action);\n      break;\n\n    case ROOM.EXIT:\n      break;\n\n    case GAME.MOVE_READY:\n      //selectcell logic in here... when submiting move, confirm on server\n      break;\n\n    case LOBBY.UPDATE:\n      state = _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n}\n\nexport default roomReducer;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/reducers/room.reducer.js"],"names":["ROOM","GAME","Leap","game","initialState","whitelist","users","host","roomReducer","state","action","move","type","ENTER","EXIT","MOVE_READY","LOBBY","UPDATE"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,yBAAjB;AACA,OAAOC,IAAP,MAAiB,yBAAjB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AAEA,MAAMC,IAAI,GAAG,IAAID,IAAJ,CAAU,CAAV,EAAY,CAAZ,EAAc,CAAd,CAAb;AAEA,MAAME,YAAY,GAAG;AACnB,WAAS;AACPD,IAAAA,IAAI,EAAEA,IADC;AAEPE,IAAAA,SAAS,EAAE,KAFJ;AAGPC,IAAAA,KAAK,EAAE,CAAC,OAAD,CAHA;AAIPC,IAAAA,IAAI,EAAE,CAAC,OAAD;AAJC,GADU;AAOnB,WAAS;AACPJ,IAAAA,IAAI,EAAEA,IADC;AAEPE,IAAAA,SAAS,EAAE,KAFJ;AAGPC,IAAAA,KAAK,EAAE,CAAC,OAAD,CAHA;AAIPC,IAAAA,IAAI,EAAE,CAAC,OAAD;AAJC;AAPU,CAArB;;AAiBA,SAASC,WAAT,CAAsBC,KAAK,GAAGL,YAA9B,EAA4CM,MAA5C,EAAoD;AAAA,iBAC3BD,KAD2B;AAAA,QAC1CN,IAD0C,UAC1CA,IAD0C;AAAA,QACpCQ,IADoC,UACpCA,IADoC;;AAElD,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKZ,IAAI,CAACa,KAAV;AACE;AACA;;AACF,SAAKb,IAAI,CAACc,IAAV;AAEE;;AAEF,SAAKb,IAAI,CAACc,UAAV;AACE;AACA;;AAEF,SAAKC,KAAK,CAACC,MAAX;AACER,MAAAA,KAAK,qBAAOA,KAAP,CAAL;;AAEF;AAAS,aAAOA,KAAP;AAfX;AAiBD;;AAED,eAAeD,WAAf","sourcesContent":["import ROOM from '../constants/room.types';\nimport GAME from '../constants/game.types';\n//import socket from '../socket';\nimport Leap from '../assets/leap';\n\nconst game = new Leap (4,8,0);\n\nconst initialState = {\n  'room1': {\n    game: game,\n    whitelist: false,\n    users: ['user1'],\n    host: ['user1'],\n  },\n  'room2': {\n    game: game,\n    whitelist: false,\n    users: ['user2'],\n    host: ['user2'],\n  },\n\n};\n\n\nfunction roomReducer (state = initialState, action) {\n  const { game, move } = state;\n  switch (action.type) {\n    case ROOM.ENTER:\n      //socket.io.emit('roomAction', action);\n      break;\n    case ROOM.EXIT:\n\n      break;\n\n    case GAME.MOVE_READY:\n      //selectcell logic in here... when submiting move, confirm on server\n      break;\n\n    case LOBBY.UPDATE:\n      state = {...state, };\n\n    default: return state;\n  }\n}\n\nexport default roomReducer;\n"]},"metadata":{},"sourceType":"module"}