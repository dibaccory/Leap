{"ast":null,"code":"var _jsxFileName = \"/Users/bacchus/git/Leap/client/src/containers/App/App.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { bool, array, funca, string, number, object } from 'prop-types';\nimport { getMe, getIsLoggedIn } from '../../selectors/';\nimport ViewStack from '../ViewStack/';\nimport Login from '../Login/';\nimport './app.css';\n\nconst App = ({\n  socket,\n  isLoggedIn,\n  userLogin\n}) => {\n  //const ClientSocket = React.createContext();\n  return isLoggedIn ? React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(ViewStack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n}; //{!isLoggedIn && <Splash/>}\n//<BannerContainer />\n//<HeaderContainer me={me}/> //has settings at upper righthand\n//<CreateGameModal io={io}/>\n//<BottomNavigation/>\n\n\nApp.propTypes = {\n  isLoggedIn: bool.isRequired\n}; //\n\nconst actions = {\n  userLogin\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nconst mapStateToProps = state => ({\n  isLoggedIn: getIsLoggedIn(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/containers/App/App.js"],"names":["React","useState","connect","bindActionCreators","bool","array","funca","string","number","object","getMe","getIsLoggedIn","ViewStack","Login","App","socket","isLoggedIn","userLogin","propTypes","isRequired","actions","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,MAArC,EAA6CC,MAA7C,QAA2D,YAA3D;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,kBAArC;AAEA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAO,WAAP;;AAIA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,UAAV;AAAsBC,EAAAA;AAAtB,CAAD,KAAsC;AAChD;AACE,SAAOD,UAAU,GAEb;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFa,GAMb;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANJ;AAUH,CAZD,C,CAaA;AACA;AACA;AACA;AACA;;;AAEAF,GAAG,CAACI,SAAJ,GAAgB;AACdF,EAAAA,UAAU,EAAEZ,IAAI,CAACe;AADH,CAAhB,C,CAGA;;AACA,MAAMC,OAAO,GAAG;AACZH,EAAAA;AADY,CAAhB;;AAIA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAInB,kBAAkB,CAACiB,OAAD,EAAUE,QAAV,CAAzD;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCR,EAAAA,UAAU,EAAEL,aAAa,CAACa,KAAD;AADO,CAAL,CAA7B;;AAIA,eAAetB,OAAO,CAACqB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CP,GAA7C,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { bool, array, funca, string, number, object } from 'prop-types';\nimport { getMe, getIsLoggedIn } from '../../selectors/';\n\nimport ViewStack from '../ViewStack/';\nimport Login from '../Login/';\nimport './app.css';\n\n\n\nconst App = ({ socket, isLoggedIn, userLogin}) => {\n  //const ClientSocket = React.createContext();\n    return isLoggedIn\n      ? (\n        <div className=\"App\">\n          <ViewStack/>\n          </div>\n      ) : (\n        <div className=\"App\">\n          <Login/>\n        </div>\n      );\n}\n//{!isLoggedIn && <Splash/>}\n//<BannerContainer />\n//<HeaderContainer me={me}/> //has settings at upper righthand\n//<CreateGameModal io={io}/>\n//<BottomNavigation/>\n\nApp.propTypes = {\n  isLoggedIn: bool.isRequired,\n}\n//\nconst actions = {\n    userLogin,\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nconst mapStateToProps = state => ({\n  isLoggedIn: getIsLoggedIn(state),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}