{"ast":null,"code":"var _jsxFileName = \"/Users/bacchus/git/Leap/client/src/containers/App/App.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { bool, array, funca, string, number, object } from 'prop-types';\nimport { getMe, getIsLoggedIn } from '../../selectors/';\nimport ViewStack from '../ViewStack/';\nimport Login from '../../components/Login/';\nimport './app.css';\n\nconst App = ({\n  me,\n  socket,\n  isLoggedIn,\n  userExit\n}) => {\n  window.onbeforeunload = () => socket.io.emit('disconnect', me.id);\n\n  ; //const ClientSocket = React.createContext();\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, isLoggedIn ? React.createElement(ViewStack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n};\n\nApp.propTypes = {\n  me: object,\n  isLoggedIn: bool.isRequired\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  userExit\n}, dispatch);\n\nconst mapStateToProps = state => ({\n  me: getMe(state),\n  isLoggedIn: getIsLoggedIn(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/containers/App/App.js"],"names":["React","useState","connect","bindActionCreators","bool","array","funca","string","number","object","getMe","getIsLoggedIn","ViewStack","Login","App","me","socket","isLoggedIn","userExit","window","onbeforeunload","io","emit","id","propTypes","isRequired","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,MAArC,EAA6CC,MAA7C,QAA2D,YAA3D;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,kBAArC;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,MAAN;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA;AAA1B,CAAD,KAAyC;AACjDC,EAAAA,MAAM,CAACC,cAAP,GAAwB,MAAMJ,MAAM,CAACK,EAAP,CAAUC,IAAV,CAAe,YAAf,EAA6BP,EAAE,CAACQ,EAAhC,CAA9B;;AAAkE,GADjB,CAEnD;;AACE,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,UAAU,GAAG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAkB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD/B,CADJ;AAKH,CARD;;AAUAH,GAAG,CAACU,SAAJ,GAAgB;AACdT,EAAAA,EAAE,EAAEN,MADU;AAEdQ,EAAAA,UAAU,EAAEb,IAAI,CAACqB;AAFH,CAAhB;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAIxB,kBAAkB,CAAC;AAAEe,EAAAA;AAAF,CAAD,EAAeS,QAAf,CAAzD;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,EAAE,EAAEL,KAAK,CAACmB,KAAD,CADuB;AAEhCZ,EAAAA,UAAU,EAAEN,aAAa,CAACkB,KAAD;AAFO,CAAL,CAA7B;;AAKA,eAAe3B,OAAO,CAAC0B,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CZ,GAA7C,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { bool, array, funca, string, number, object } from 'prop-types';\nimport { getMe, getIsLoggedIn } from '../../selectors/';\nimport ViewStack from '../ViewStack/';\nimport Login from '../../components/Login/';\nimport './app.css';\n\nconst App = ({ me, socket, isLoggedIn, userExit}) => {\n    window.onbeforeunload = () => socket.io.emit('disconnect', me.id);;\n  //const ClientSocket = React.createContext();\n    return (\n        <div className=\"App\">\n          {isLoggedIn ? <ViewStack/> : <Login/>}\n        </div>\n      );\n}\n\nApp.propTypes = {\n  me: object,\n  isLoggedIn: bool.isRequired,\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ userExit }, dispatch);\n\nconst mapStateToProps = state => ({\n  me: getMe(state),\n  isLoggedIn: getIsLoggedIn(state),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}