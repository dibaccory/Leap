{"ast":null,"code":"var _jsxFileName = \"/Users/bacchus/git/Leap/src/Menu.js\";\nimport React from 'react';\nimport './css/menu.css';\nimport NavigationModal from './NavigationModal';\n\nclass Menu extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      activeNavItem: ''\n    };\n    this.openNavigationModal = this.openNavigationModal.bind(this);\n  }\n\n  openNavigationModal(activeItem) {\n    return e => this.state.setState({\n      activeNavItem: activeItem\n    });\n  }\n\n  render() {\n    //Animate <Intro> on start up, fade in rest of Menu\n    return React.createElement(\"div\", {\n      class: \"menu-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"menu-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(SettingsContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(NavigationModal, {\n      nav: this.state.activeNavItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(NavigationContainer, {\n      openNavigationModal: this.openNavigationModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass SettingsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: ''\n    };\n    this.settingsItems = {\n      'sfx': {\n        text: 'SFX',\n        type: 'toggle',\n        crossed: false\n      },\n      'music': {\n        text: 'Music',\n        type: 'toggle',\n        crossed: false\n      },\n      'ads': {\n        text: 'Ads',\n        type: 'page'\n      }\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(activeItem) {\n    //Check if toggle, Ads, or background color change?\n    return e => {\n      e.preventDefault(); //this.setState({ activeItem });  //perform action in render (other than crossing icon or not)\n\n      if (this.settingsItems[activeItem].type == 'toggle') {\n        this.settingsItems[activeItem].crossed = !this.settingsItems[activeItem].crossed;\n      }\n    };\n  }\n\n  render() {\n    const settingsItems = Object.values(this.settingsItems).map(item => React.createElement(SettingsItem, {\n      item: item,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"settings-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, settingsItems);\n  }\n\n}\n\nclass NavigationContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: '',\n      activeItemPos: 0,\n      activeItemColor: '',\n      menuItems: [{\n        text: 'Stats'\n      }, {\n        text: 'Create'\n      }, {\n        text: 'Friends'\n      }]\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(activeItem) {\n    return e => {\n      e.preventDefault();\n      /*\n      this.setState({\n        activeItem,\n        activeItemPos: document.getElementById(activeItem).offsetLeft,\n        activeItemColor: window.getComputedStyle(document.getElementById(activeItem)).getPropertyValue('background-color'),\n      });\n      */\n\n      this.props.openNavigationModal(activeItem);\n    };\n  }\n\n  render() {\n    const navItems = this.state.menuItems.map(item => React.createElement(NavItem, {\n      item: item,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"nav-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"nav-item--active\",\n      style: {\n        left: this.state.activeItemPos,\n        backgroundColor: this.state.activeItemColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), navItems);\n  }\n\n}\n\nfunction NavItem(props) {\n  let id = props.item.text.toLowerCase();\n  return React.createElement(\"div\", {\n    className: \"nav-item\",\n    id: id,\n    onClick: props.handleClick(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  });\n}\n\nfunction SettingsItem(props) {\n  let id = props.item.text.toLowerCase();\n  let classes = 'settings-item';\n\n  if (props.item.type == 'toggle') {\n    classes += props.item.crossed ? '-crossed' : '';\n  }\n\n  return React.createElement(\"div\", {\n    className: classes //settings-item-crossed\n    ,\n    id: id,\n    onClick: props.handleClick(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  });\n}\n\nexport default Menu;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/src/Menu.js"],"names":["React","NavigationModal","Menu","Component","constructor","state","activeNavItem","openNavigationModal","bind","activeItem","e","setState","render","SettingsContainer","props","settingsItems","text","type","crossed","handleClick","preventDefault","Object","values","map","item","NavigationContainer","activeItemPos","activeItemColor","menuItems","navItems","left","backgroundColor","NavItem","id","toLowerCase","SettingsItem","classes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './css/menu.css';\nimport NavigationModal from './NavigationModal';\n\nclass Menu extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      activeNavItem: '',\n    }\n\n    this.openNavigationModal = this.openNavigationModal.bind(this);\n    }\n\n    openNavigationModal(activeItem) {\n      return e => this.state.setState({activeNavItem: activeItem});\n    }\n\n  render() {\n    //Animate <Intro> on start up, fade in rest of Menu\n    return (\n      <div class='menu-bg'>\n        <div class='menu-title'></div>\n        <SettingsContainer/>\n        <NavigationModal nav = { this.state.activeNavItem }/>\n        <NavigationContainer openNavigationModal = {this.openNavigationModal}/>\n      </div>\n    )\n  }\n}\n\nclass SettingsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { activeItem: '' };\n\n    this.settingsItems= {\n        'sfx'   :{text: 'SFX', type:'toggle', crossed: false},\n        'music' :{text: 'Music', type:'toggle', crossed: false},\n        'ads'   :{text: 'Ads', type:'page'}\n      };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick(activeItem) {\n    //Check if toggle, Ads, or background color change?\n    return e => {\n      e.preventDefault();\n      //this.setState({ activeItem });  //perform action in render (other than crossing icon or not)\n      if(this.settingsItems[activeItem].type == 'toggle') {\n        this.settingsItems[activeItem].crossed = !this.settingsItems[activeItem].crossed;\n      }\n    }\n  }\n\n  render() {\n    const settingsItems = Object.values(this.settingsItems).map(item => <SettingsItem item={ item } handleClick = { this.handleClick }/>)\n    return (\n      <div className='settings-container'>\n          { settingsItems }\n      </div>\n    )\n  }\n}\n\nclass NavigationContainer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      activeItem: '',\n      activeItemPos: 0,\n      activeItemColor: '',\n      menuItems: [\n        {text: 'Stats'},\n        {text: 'Create'},\n        {text: 'Friends'}\n      ],\n    }\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick(activeItem) {\n    return e => {\n      e.preventDefault();\n      /*\n      this.setState({\n        activeItem,\n        activeItemPos: document.getElementById(activeItem).offsetLeft,\n        activeItemColor: window.getComputedStyle(document.getElementById(activeItem)).getPropertyValue('background-color'),\n      });\n      */\n      this.props.openNavigationModal(activeItem);\n\n    }\n  }\n\n  render() {\n    const navItems = this.state.menuItems.map(item => <NavItem item={ item } handleClick = { this.handleClick }/>)\n    return (\n      <div className='nav-container'>\n        <span className='nav-item--active' style={{left: this.state.activeItemPos, backgroundColor: this.state.activeItemColor}}/>\n          { navItems }\n      </div>\n    )\n  }\n}\n\nfunction NavItem(props) {\n  let id = props.item.text.toLowerCase();\n  return (<div className='nav-item'\n               id={ id }\n               onClick={ props.handleClick(id) }></div>)\n}\n\nfunction SettingsItem(props) {\n  let id = props.item.text.toLowerCase();\n  let classes = 'settings-item';\n  if(props.item.type == 'toggle'){\n    classes += props.item.crossed ? '-crossed' : '';\n  }\n  return (<div className= { classes } //settings-item-crossed\n               id={ id }\n               onClick={ props.handleClick(id) }></div>)\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}