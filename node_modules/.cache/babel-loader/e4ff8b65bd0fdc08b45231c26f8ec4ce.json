{"ast":null,"code":"'use strict';\n\nfunction utf8Write(view, offset, str) {\n  var c = 0;\n\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n\n    if (c < 0x80) {\n      view.setUint8(offset++, c);\n    } else if (c < 0x800) {\n      view.setUint8(offset++, 0xc0 | c >> 6);\n      view.setUint8(offset++, 0x80 | c & 0x3f);\n    } else if (c < 0xd800 || c >= 0xe000) {\n      view.setUint8(offset++, 0xe0 | c >> 12);\n      view.setUint8(offset++, 0x80 | c >> 6 & 0x3f);\n      view.setUint8(offset++, 0x80 | c & 0x3f);\n    } else {\n      i++;\n      c = 0x10000 + ((c & 0x3ff) << 10 | str.charCodeAt(i) & 0x3ff);\n      view.setUint8(offset++, 0xf0 | c >> 18);\n      view.setUint8(offset++, 0x80 | c >> 12 & 0x3f);\n      view.setUint8(offset++, 0x80 | c >> 6 & 0x3f);\n      view.setUint8(offset++, 0x80 | c & 0x3f);\n    }\n  }\n}\n\nfunction utf8Length(str) {\n  var c = 0,\n      length = 0;\n\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n\n    if (c < 0x80) {\n      length += 1;\n    } else if (c < 0x800) {\n      length += 2;\n    } else if (c < 0xd800 || c >= 0xe000) {\n      length += 3;\n    } else {\n      i++;\n      length += 4;\n    }\n  }\n\n  return length;\n}\n\nfunction _encode(bytes, defers, value) {\n  var type = typeof value,\n      i = 0,\n      l = 0,\n      hi = 0,\n      lo = 0,\n      length = 0,\n      size = 0;\n\n  if (type === 'string') {\n    length = utf8Length(value); // fixstr\n\n    if (length < 0x20) {\n      bytes.push(length | 0xa0);\n      size = 1;\n    } // str 8\n    else if (length < 0x100) {\n        bytes.push(0xd9, length);\n        size = 2;\n      } // str 16\n      else if (length < 0x10000) {\n          bytes.push(0xda, length >> 8, length);\n          size = 3;\n        } // str 32\n        else if (length < 0x100000000) {\n            bytes.push(0xdb, length >> 24, length >> 16, length >> 8, length);\n            size = 5;\n          } else {\n            throw new Error('String too long');\n          }\n\n    defers.push({\n      _str: value,\n      _length: length,\n      _offset: bytes.length\n    });\n    return size + length;\n  }\n\n  if (type === 'number') {\n    // TODO: encode to float 32?\n    // float 64\n    if (Math.floor(value) !== value || !isFinite(value)) {\n      bytes.push(0xcb);\n      defers.push({\n        _float: value,\n        _length: 8,\n        _offset: bytes.length\n      });\n      return 9;\n    }\n\n    if (value >= 0) {\n      // positive fixnum\n      if (value < 0x80) {\n        bytes.push(value);\n        return 1;\n      } // uint 8\n\n\n      if (value < 0x100) {\n        bytes.push(0xcc, value);\n        return 2;\n      } // uint 16\n\n\n      if (value < 0x10000) {\n        bytes.push(0xcd, value >> 8, value);\n        return 3;\n      } // uint 32\n\n\n      if (value < 0x100000000) {\n        bytes.push(0xce, value >> 24, value >> 16, value >> 8, value);\n        return 5;\n      } // uint 64\n\n\n      hi = value / Math.pow(2, 32) >> 0;\n      lo = value >>> 0;\n      bytes.push(0xcf, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 9;\n    } else {\n      // negative fixnum\n      if (value >= -0x20) {\n        bytes.push(value);\n        return 1;\n      } // int 8\n\n\n      if (value >= -0x80) {\n        bytes.push(0xd0, value);\n        return 2;\n      } // int 16\n\n\n      if (value >= -0x8000) {\n        bytes.push(0xd1, value >> 8, value);\n        return 3;\n      } // int 32\n\n\n      if (value >= -0x80000000) {\n        bytes.push(0xd2, value >> 24, value >> 16, value >> 8, value);\n        return 5;\n      } // int 64\n\n\n      hi = Math.floor(value / Math.pow(2, 32));\n      lo = value >>> 0;\n      bytes.push(0xd3, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 9;\n    }\n  }\n\n  if (type === 'object') {\n    // nil\n    if (value === null) {\n      bytes.push(0xc0);\n      return 1;\n    }\n\n    if (Array.isArray(value)) {\n      length = value.length; // fixarray\n\n      if (length < 0x10) {\n        bytes.push(length | 0x90);\n        size = 1;\n      } // array 16\n      else if (length < 0x10000) {\n          bytes.push(0xdc, length >> 8, length);\n          size = 3;\n        } // array 32\n        else if (length < 0x100000000) {\n            bytes.push(0xdd, length >> 24, length >> 16, length >> 8, length);\n            size = 5;\n          } else {\n            throw new Error('Array too large');\n          }\n\n      for (i = 0; i < length; i++) {\n        size += _encode(bytes, defers, value[i]);\n      }\n\n      return size;\n    } // fixext 8 / Date\n\n\n    if (value instanceof Date) {\n      var time = value.getTime();\n      hi = Math.floor(time / Math.pow(2, 32));\n      lo = time >>> 0;\n      bytes.push(0xd7, 0, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 10;\n    }\n\n    if (value instanceof ArrayBuffer) {\n      length = value.byteLength; // bin 8\n\n      if (length < 0x100) {\n        bytes.push(0xc4, length);\n        size = 2;\n      } else // bin 16\n        if (length < 0x10000) {\n          bytes.push(0xc5, length >> 8, length);\n          size = 3;\n        } else // bin 32\n          if (length < 0x100000000) {\n            bytes.push(0xc6, length >> 24, length >> 16, length >> 8, length);\n            size = 5;\n          } else {\n            throw new Error('Buffer too large');\n          }\n\n      defers.push({\n        _bin: value,\n        _length: length,\n        _offset: bytes.length\n      });\n      return size + length;\n    }\n\n    if (typeof value.toJSON === 'function') {\n      return _encode(bytes, defers, value.toJSON());\n    }\n\n    var keys = [],\n        key = '';\n    var allKeys = Object.keys(value);\n\n    for (i = 0, l = allKeys.length; i < l; i++) {\n      key = allKeys[i];\n\n      if (typeof value[key] !== 'function') {\n        keys.push(key);\n      }\n    }\n\n    length = keys.length; // fixmap\n\n    if (length < 0x10) {\n      bytes.push(length | 0x80);\n      size = 1;\n    } // map 16\n    else if (length < 0x10000) {\n        bytes.push(0xde, length >> 8, length);\n        size = 3;\n      } // map 32\n      else if (length < 0x100000000) {\n          bytes.push(0xdf, length >> 24, length >> 16, length >> 8, length);\n          size = 5;\n        } else {\n          throw new Error('Object too large');\n        }\n\n    for (i = 0; i < length; i++) {\n      key = keys[i];\n      size += _encode(bytes, defers, key);\n      size += _encode(bytes, defers, value[key]);\n    }\n\n    return size;\n  } // false/true\n\n\n  if (type === 'boolean') {\n    bytes.push(value ? 0xc3 : 0xc2);\n    return 1;\n  } // fixext 1 / undefined\n\n\n  if (type === 'undefined') {\n    bytes.push(0xd4, 0, 0);\n    return 3;\n  }\n\n  throw new Error('Could not encode');\n}\n\nfunction encode(value) {\n  var bytes = [];\n  var defers = [];\n\n  var size = _encode(bytes, defers, value);\n\n  var buf = new ArrayBuffer(size);\n  var view = new DataView(buf);\n  var deferIndex = 0;\n  var deferWritten = 0;\n  var nextOffset = -1;\n\n  if (defers.length > 0) {\n    nextOffset = defers[0]._offset;\n  }\n\n  var defer,\n      deferLength = 0,\n      offset = 0;\n\n  for (var i = 0, l = bytes.length; i < l; i++) {\n    view.setUint8(deferWritten + i, bytes[i]);\n\n    if (i + 1 !== nextOffset) {\n      continue;\n    }\n\n    defer = defers[deferIndex];\n    deferLength = defer._length;\n    offset = deferWritten + nextOffset;\n\n    if (defer._bin) {\n      var bin = new Uint8Array(defer._bin);\n\n      for (var j = 0; j < deferLength; j++) {\n        view.setUint8(offset + j, bin[j]);\n      }\n    } else if (defer._str) {\n      utf8Write(view, offset, defer._str);\n    } else if (defer._float !== undefined) {\n      view.setFloat64(offset, defer._float);\n    }\n\n    deferIndex++;\n    deferWritten += deferLength;\n\n    if (defers[deferIndex]) {\n      nextOffset = defers[deferIndex]._offset;\n    }\n  }\n\n  return buf;\n}\n\nmodule.exports = encode;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/node_modules/notepack.io/browser/encode.js"],"names":["utf8Write","view","offset","str","c","i","l","length","charCodeAt","setUint8","utf8Length","_encode","bytes","defers","value","type","hi","lo","size","push","Error","_str","_length","_offset","Math","floor","isFinite","_float","pow","Array","isArray","Date","time","getTime","ArrayBuffer","byteLength","_bin","toJSON","keys","key","allKeys","Object","encode","buf","DataView","deferIndex","deferWritten","nextOffset","defer","deferLength","bin","Uint8Array","j","undefined","setFloat64","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction utf8Write(view, offset, str) {\n  var c = 0;\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n    if (c < 0x80) {\n      view.setUint8(offset++, c);\n    }\n    else if (c < 0x800) {\n      view.setUint8(offset++, 0xc0 | (c >> 6));\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n    else if (c < 0xd800 || c >= 0xe000) {\n      view.setUint8(offset++, 0xe0 | (c >> 12));\n      view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n    else {\n      i++;\n      c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n      view.setUint8(offset++, 0xf0 | (c >> 18));\n      view.setUint8(offset++, 0x80 | (c >> 12) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n  }\n}\n\nfunction utf8Length(str) {\n  var c = 0, length = 0;\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n    if (c < 0x80) {\n      length += 1;\n    }\n    else if (c < 0x800) {\n      length += 2;\n    }\n    else if (c < 0xd800 || c >= 0xe000) {\n      length += 3;\n    }\n    else {\n      i++;\n      length += 4;\n    }\n  }\n  return length;\n}\n\nfunction _encode(bytes, defers, value) {\n  var type = typeof value, i = 0, l = 0, hi = 0, lo = 0, length = 0, size = 0;\n\n  if (type === 'string') {\n    length = utf8Length(value);\n\n    // fixstr\n    if (length < 0x20) {\n      bytes.push(length | 0xa0);\n      size = 1;\n    }\n    // str 8\n    else if (length < 0x100) {\n      bytes.push(0xd9, length);\n      size = 2;\n    }\n    // str 16\n    else if (length < 0x10000) {\n      bytes.push(0xda, length >> 8, length);\n      size = 3;\n    }\n    // str 32\n    else if (length < 0x100000000) {\n      bytes.push(0xdb, length >> 24, length >> 16, length >> 8, length);\n      size = 5;\n    } else {\n      throw new Error('String too long');\n    }\n    defers.push({ _str: value, _length: length, _offset: bytes.length });\n    return size + length;\n  }\n  if (type === 'number') {\n    // TODO: encode to float 32?\n\n    // float 64\n    if (Math.floor(value) !== value || !isFinite(value)) {\n      bytes.push(0xcb);\n      defers.push({ _float: value, _length: 8, _offset: bytes.length });\n      return 9;\n    }\n\n    if (value >= 0) {\n      // positive fixnum\n      if (value < 0x80) {\n        bytes.push(value);\n        return 1;\n      }\n      // uint 8\n      if (value < 0x100) {\n        bytes.push(0xcc, value);\n        return 2;\n      }\n      // uint 16\n      if (value < 0x10000) {\n        bytes.push(0xcd, value >> 8, value);\n        return 3;\n      }\n      // uint 32\n      if (value < 0x100000000) {\n        bytes.push(0xce, value >> 24, value >> 16, value >> 8, value);\n        return 5;\n      }\n      // uint 64\n      hi = (value / Math.pow(2, 32)) >> 0;\n      lo = value >>> 0;\n      bytes.push(0xcf, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 9;\n    } else {\n      // negative fixnum\n      if (value >= -0x20) {\n        bytes.push(value);\n        return 1;\n      }\n      // int 8\n      if (value >= -0x80) {\n        bytes.push(0xd0, value);\n        return 2;\n      }\n      // int 16\n      if (value >= -0x8000) {\n        bytes.push(0xd1, value >> 8, value);\n        return 3;\n      }\n      // int 32\n      if (value >= -0x80000000) {\n        bytes.push(0xd2, value >> 24, value >> 16, value >> 8, value);\n        return 5;\n      }\n      // int 64\n      hi = Math.floor(value / Math.pow(2, 32));\n      lo = value >>> 0;\n      bytes.push(0xd3, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 9;\n    }\n  }\n  if (type === 'object') {\n    // nil\n    if (value === null) {\n      bytes.push(0xc0);\n      return 1;\n    }\n\n    if (Array.isArray(value)) {\n      length = value.length;\n\n      // fixarray\n      if (length < 0x10) {\n        bytes.push(length | 0x90);\n        size = 1;\n      }\n      // array 16\n      else if (length < 0x10000) {\n        bytes.push(0xdc, length >> 8, length);\n        size = 3;\n      }\n      // array 32\n      else if (length < 0x100000000) {\n        bytes.push(0xdd, length >> 24, length >> 16, length >> 8, length);\n        size = 5;\n      } else {\n        throw new Error('Array too large');\n      }\n      for (i = 0; i < length; i++) {\n        size += _encode(bytes, defers, value[i]);\n      }\n      return size;\n    }\n\n    // fixext 8 / Date\n    if (value instanceof Date) {\n      var time = value.getTime();\n      hi = Math.floor(time / Math.pow(2, 32));\n      lo = time >>> 0;\n      bytes.push(0xd7, 0, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 10;\n    }\n\n    if (value instanceof ArrayBuffer) {\n      length = value.byteLength;\n\n      // bin 8\n      if (length < 0x100) {\n        bytes.push(0xc4, length);\n        size = 2;\n      } else\n      // bin 16\n      if (length < 0x10000) {\n        bytes.push(0xc5, length >> 8, length);\n        size = 3;\n      } else\n      // bin 32\n      if (length < 0x100000000) {\n        bytes.push(0xc6, length >> 24, length >> 16, length >> 8, length);\n        size = 5;\n      } else {\n        throw new Error('Buffer too large');\n      }\n      defers.push({ _bin: value, _length: length, _offset: bytes.length });\n      return size + length;\n    }\n\n    if (typeof value.toJSON === 'function') {\n      return _encode(bytes, defers, value.toJSON());\n    }\n\n    var keys = [], key = '';\n\n    var allKeys = Object.keys(value);\n    for (i = 0, l = allKeys.length; i < l; i++) {\n      key = allKeys[i];\n      if (typeof value[key] !== 'function') {\n        keys.push(key);\n      }\n    }\n    length = keys.length;\n\n    // fixmap\n    if (length < 0x10) {\n      bytes.push(length | 0x80);\n      size = 1;\n    }\n    // map 16\n    else if (length < 0x10000) {\n      bytes.push(0xde, length >> 8, length);\n      size = 3;\n    }\n    // map 32\n    else if (length < 0x100000000) {\n      bytes.push(0xdf, length >> 24, length >> 16, length >> 8, length);\n      size = 5;\n    } else {\n      throw new Error('Object too large');\n    }\n\n    for (i = 0; i < length; i++) {\n      key = keys[i];\n      size += _encode(bytes, defers, key);\n      size += _encode(bytes, defers, value[key]);\n    }\n    return size;\n  }\n  // false/true\n  if (type === 'boolean') {\n    bytes.push(value ? 0xc3 : 0xc2);\n    return 1;\n  }\n  // fixext 1 / undefined\n  if (type === 'undefined') {\n    bytes.push(0xd4, 0, 0);\n    return 3;\n  }\n  throw new Error('Could not encode');\n}\n\nfunction encode(value) {\n  var bytes = [];\n  var defers = [];\n  var size = _encode(bytes, defers, value);\n  var buf = new ArrayBuffer(size);\n  var view = new DataView(buf);\n\n  var deferIndex = 0;\n  var deferWritten = 0;\n  var nextOffset = -1;\n  if (defers.length > 0) {\n    nextOffset = defers[0]._offset;\n  }\n\n  var defer, deferLength = 0, offset = 0;\n  for (var i = 0, l = bytes.length; i < l; i++) {\n    view.setUint8(deferWritten + i, bytes[i]);\n    if (i + 1 !== nextOffset) { continue; }\n    defer = defers[deferIndex];\n    deferLength = defer._length;\n    offset = deferWritten + nextOffset;\n    if (defer._bin) {\n      var bin = new Uint8Array(defer._bin);\n      for (var j = 0; j < deferLength; j++) {\n        view.setUint8(offset + j, bin[j]);\n      }\n    } else if (defer._str) {\n      utf8Write(view, offset, defer._str);\n    } else if (defer._float !== undefined) {\n      view.setFloat64(offset, defer._float);\n    }\n    deferIndex++;\n    deferWritten += deferLength;\n    if (defers[deferIndex]) {\n      nextOffset = defers[deferIndex]._offset;\n    }\n  }\n  return buf;\n}\n\nmodule.exports = encode;\n"]},"metadata":{},"sourceType":"script"}