{"ast":null,"code":"var _jsxFileName = \"/Users/bacchus/git/Leap/client/src/containers/Lobby/Lobby.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Room from '../Room';\nimport crypto from 'crypto';\nimport { getLobbyRooms, getActiveRoom } from '../../selectors/'; //import { lobbyUpdate, lobbyToggleScroll } from '../../actions/lobby.actions';\n\nimport { object, string } from 'prop-types';\nimport './Lobby.css';\n\nconst Lobby = ({\n  id,\n  rooms,\n  activeRoom\n}) => {\n  /*\n   TODO: add actions\n    load Games through up/down arrows + or - state roomIndex\n  */\n  const roomKeys = Object.keys(rooms);\n  const activeRoomIndex = roomKeys.indexOf(activeRoom);\n  const size = roomKeys.length;\n  let loadedRooms = [];\n\n  if (size > 1) {\n    const prev = Math.abs((activeRoomIndex - 1) % size);\n    const next = (activeRoomIndex + 1) % size;\n    loadedRooms.push(React.createElement(Room, {\n      key: 'prev_room',\n      room: rooms[roomKeys[prev]].id,\n      active: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Room, {\n      key: 'display_room',\n      room: rooms[roomKeys[activeRoomIndex]].id,\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Room, {\n      key: 'next_room',\n      room: rooms[roomKeys[next]].id,\n      active: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  } else if (size) {\n    loadedRooms.push(React.createElement(Room, {\n      key: 'display_room',\n      room: rooms[roomKeys[activeRoomIndex]].id,\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  } else {\n    loadedRooms.push(React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \" LMAO NUTTIN \"));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"lobby-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, loadedRooms);\n};\n\nLobby.propTypes = {\n  rooms: object,\n  activeRoom: string\n}; //TODO: make selectors\n\nconst mapStateToProps = state => ({\n  rooms: getLobbyRooms(state),\n  activeRoom: getActiveRoom(state)\n});\n\nexport default connect(mapStateToProps)(Lobby);","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/containers/Lobby/Lobby.js"],"names":["React","connect","Room","crypto","getLobbyRooms","getActiveRoom","object","string","Lobby","id","rooms","activeRoom","roomKeys","Object","keys","activeRoomIndex","indexOf","size","length","loadedRooms","prev","Math","abs","next","push","propTypes","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kBAA7C,C,CACA;;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,YAA/B;AAEA,OAAO,aAAP;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA,KAAL;AAAYC,EAAAA;AAAZ,CAAD,KAA6B;AAEzC;;;;AAIA,QAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,CAAjB;AACA,QAAMK,eAAe,GAAGH,QAAQ,CAACI,OAAT,CAAiBL,UAAjB,CAAxB;AACA,QAAMM,IAAI,GAAGL,QAAQ,CAACM,MAAtB;AACA,MAAIC,WAAW,GAAG,EAAlB;;AACA,MAAIF,IAAI,GAAG,CAAX,EAAc;AACZ,UAAMG,IAAI,GAAGC,IAAI,CAACC,GAAL,CAAU,CAACP,eAAe,GAAC,CAAjB,IAAoBE,IAA9B,CAAb;AACA,UAAMM,IAAI,GAAG,CAACR,eAAe,GAAC,CAAjB,IAAoBE,IAAjC;AACAE,IAAAA,WAAW,CAACK,IAAZ,CACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,WAAX;AAAwB,MAAA,IAAI,EAAEd,KAAK,CAACE,QAAQ,CAACQ,IAAD,CAAT,CAAL,CAAsBX,EAApD;AAAwD,MAAA,MAAM,EAAE,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,cAAX;AAA2B,MAAA,IAAI,EAAEC,KAAK,CAACE,QAAQ,CAACG,eAAD,CAAT,CAAL,CAAiCN,EAAlE;AAAsE,MAAA,MAAM,EAAE,IAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,WAAX;AAAwB,MAAA,IAAI,EAAEC,KAAK,CAACE,QAAQ,CAACW,IAAD,CAAT,CAAL,CAAsBd,EAApD;AAAwD,MAAA,MAAM,EAAE,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF;AAKD,GARD,MAQO,IAAIQ,IAAJ,EAAU;AACfE,IAAAA,WAAW,CAACK,IAAZ,CAAiB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,cAAX;AAA2B,MAAA,IAAI,EAAEd,KAAK,CAACE,QAAQ,CAACG,eAAD,CAAT,CAAL,CAAiCN,EAAlE;AAAsE,MAAA,MAAM,EAAE,IAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB;AACD,GAFM,MAEA;AACLU,IAAAA,WAAW,CAACK,IAAZ,CAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAnB;AACD;;AAGD,SACE;AAAK,IAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIL,WADJ,CADF;AAMD,CA/BD;;AAiCAX,KAAK,CAACiB,SAAN,GAAkB;AAChBf,EAAAA,KAAK,EAAEJ,MADS;AAEhBK,EAAAA,UAAU,EAAEJ;AAFI,CAAlB,C,CAKA;;AACA,MAAMmB,eAAe,GAAGC,KAAK,KAAK;AAChCjB,EAAAA,KAAK,EAAEN,aAAa,CAACuB,KAAD,CADY;AAEhChB,EAAAA,UAAU,EAAEN,aAAa,CAACsB,KAAD;AAFO,CAAL,CAA7B;;AAMA,eAAe1B,OAAO,CAACyB,eAAD,CAAP,CAAyBlB,KAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Room from '../Room';\nimport crypto from 'crypto';\nimport { getLobbyRooms, getActiveRoom } from '../../selectors/';\n//import { lobbyUpdate, lobbyToggleScroll } from '../../actions/lobby.actions';\nimport { object, string } from 'prop-types';\n\nimport './Lobby.css';\n\n\nconst Lobby = ({id, rooms, activeRoom}) => {\n\n  /*\n   TODO: add actions\n    load Games through up/down arrows + or - state roomIndex\n  */\n  const roomKeys = Object.keys(rooms);\n  const activeRoomIndex = roomKeys.indexOf(activeRoom);\n  const size = roomKeys.length;\n  let loadedRooms = [];\n  if (size > 1) {\n    const prev = Math.abs( (activeRoomIndex-1)%size );\n    const next = (activeRoomIndex+1)%size;\n    loadedRooms.push(\n      <Room key={'prev_room'} room={rooms[roomKeys[prev]].id} active={false} />,\n      <Room key={'display_room'} room={rooms[roomKeys[activeRoomIndex]].id} active={true} />,\n      <Room key={'next_room'} room={rooms[roomKeys[next]].id} active={false} />\n    );\n  } else if (size) {\n    loadedRooms.push(<Room key={'display_room'} room={rooms[roomKeys[activeRoomIndex]].id} active={true} />);\n  } else {\n    loadedRooms.push( (<div> LMAO NUTTIN </div>) );\n  }\n\n\n  return (\n    <div className= \"lobby-container\">\n      { loadedRooms }\n    </div>\n  );\n\n};\n\nLobby.propTypes = {\n  rooms: object,\n  activeRoom: string,\n}\n\n//TODO: make selectors\nconst mapStateToProps = state => ({\n  rooms: getLobbyRooms(state),\n  activeRoom: getActiveRoom(state),\n\n})\n\nexport default connect(mapStateToProps)(Lobby);\n"]},"metadata":{},"sourceType":"module"}