{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar schema_1 = require(\"@colyseus/schema\");\n\nvar SchemaSerializer =\n/** @class */\nfunction () {\n  function SchemaSerializer() {}\n\n  SchemaSerializer.prototype.setState = function (rawState) {\n    this.state.decode(rawState);\n  };\n\n  SchemaSerializer.prototype.getState = function () {\n    return this.state;\n  };\n\n  SchemaSerializer.prototype.patch = function (patches) {\n    this.state.decode(patches);\n  };\n\n  SchemaSerializer.prototype.teardown = function () {// this.state.onRemove\n  };\n\n  SchemaSerializer.prototype.handshake = function (bytes) {\n    if (this.state) {\n      // validate client/server definitinos\n      var reflection = new schema_1.Reflection();\n      reflection.decode(bytes);\n    } else {\n      // initialize reflected state from server\n      this.state = schema_1.Reflection.decode(bytes);\n    }\n  };\n\n  return SchemaSerializer;\n}();\n\nexports.SchemaSerializer = SchemaSerializer;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/node_modules/colyseus.js/lib/serializer/SchemaSerializer.js"],"names":["Object","defineProperty","exports","value","schema_1","require","SchemaSerializer","prototype","setState","rawState","state","decode","getState","patch","patches","teardown","handshake","bytes","reflection","Reflection"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,kBAAD,CAAtB;;AACA,IAAIC,gBAAgB;AAAG;AAAe,YAAY;AAC9C,WAASA,gBAAT,GAA4B,CAC3B;;AACDA,EAAAA,gBAAgB,CAACC,SAAjB,CAA2BC,QAA3B,GAAsC,UAAUC,QAAV,EAAoB;AACtD,SAAKC,KAAL,CAAWC,MAAX,CAAkBF,QAAlB;AACH,GAFD;;AAGAH,EAAAA,gBAAgB,CAACC,SAAjB,CAA2BK,QAA3B,GAAsC,YAAY;AAC9C,WAAO,KAAKF,KAAZ;AACH,GAFD;;AAGAJ,EAAAA,gBAAgB,CAACC,SAAjB,CAA2BM,KAA3B,GAAmC,UAAUC,OAAV,EAAmB;AAClD,SAAKJ,KAAL,CAAWC,MAAX,CAAkBG,OAAlB;AACH,GAFD;;AAGAR,EAAAA,gBAAgB,CAACC,SAAjB,CAA2BQ,QAA3B,GAAsC,YAAY,CAC9C;AACH,GAFD;;AAGAT,EAAAA,gBAAgB,CAACC,SAAjB,CAA2BS,SAA3B,GAAuC,UAAUC,KAAV,EAAiB;AACpD,QAAI,KAAKP,KAAT,EAAgB;AACZ;AACA,UAAIQ,UAAU,GAAG,IAAId,QAAQ,CAACe,UAAb,EAAjB;AACAD,MAAAA,UAAU,CAACP,MAAX,CAAkBM,KAAlB;AACH,KAJD,MAKK;AACD;AACA,WAAKP,KAAL,GAAaN,QAAQ,CAACe,UAAT,CAAoBR,MAApB,CAA2BM,KAA3B,CAAb;AACH;AACJ,GAVD;;AAWA,SAAOX,gBAAP;AACH,CA3BqC,EAAtC;;AA4BAJ,OAAO,CAACI,gBAAR,GAA2BA,gBAA3B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar schema_1 = require(\"@colyseus/schema\");\nvar SchemaSerializer = /** @class */ (function () {\n    function SchemaSerializer() {\n    }\n    SchemaSerializer.prototype.setState = function (rawState) {\n        this.state.decode(rawState);\n    };\n    SchemaSerializer.prototype.getState = function () {\n        return this.state;\n    };\n    SchemaSerializer.prototype.patch = function (patches) {\n        this.state.decode(patches);\n    };\n    SchemaSerializer.prototype.teardown = function () {\n        // this.state.onRemove\n    };\n    SchemaSerializer.prototype.handshake = function (bytes) {\n        if (this.state) {\n            // validate client/server definitinos\n            var reflection = new schema_1.Reflection();\n            reflection.decode(bytes);\n        }\n        else {\n            // initialize reflected state from server\n            this.state = schema_1.Reflection.decode(bytes);\n        }\n    };\n    return SchemaSerializer;\n}());\nexports.SchemaSerializer = SchemaSerializer;\n"]},"metadata":{},"sourceType":"script"}