{"ast":null,"code":"var _jsxFileName = \"/Users/bacchus/git/Leap/client/src/containers/Room/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bool, array, func, string, number, object } from 'prop-types';\nimport { getUsers, getGame, getHost, getMe, getMoveSelectionsForActiveGame } from '../../selectors/';\nimport Game from '../../components/Game';\n\nconst Room = ({\n  active,\n  game,\n  move,\n  users,\n  host\n}) => {\n  move = move || {\n    to: undefined,\n    from: undefined,\n    captured: undefined\n  };\n  return React.createElement(\"div\", {\n    className: \"room-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Game, {\n    game: game,\n    move: move,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Play\"));\n}; //<PlayerHeader user={}/>\n//\n//<PlayerHeader user={}/>\n\n\nRoom.propTypes = {\n  me: object,\n  users: object.isRequired,\n  host: string.isRequired,\n  //userID string?\n  game: object.isRequired,\n  move: object\n}; //TODO: make selectors\n\nconst mapStateToProps = state => ({\n  me: getMe(state),\n  users: getUsers(state),\n  host: getHost(state),\n  game: getGame(state),\n  move: getMoveSelectionsForActiveGame(state) //errorMessage: getErrorMessage(state),\n  //modalMessage: getModalMessage(state),\n\n});\n\nconst actions = {\n  /*cacheMove,*/\n  submitMove\n};\nexport default connect(mapStateToProps)(Room);","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/containers/Room/index.js"],"names":["React","Component","connect","bool","array","func","string","number","object","getUsers","getGame","getHost","getMe","getMoveSelectionsForActiveGame","Game","Room","active","game","move","users","host","to","undefined","from","captured","propTypes","me","isRequired","mapStateToProps","state","actions","submitMove"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,MAA5C,QAA0D,YAA1D;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,OAA5B,EAAqCC,KAArC,EAA4CC,8BAA5C,QAAkF,kBAAlF;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,MADY;AAEZC,EAAAA,IAFY;AAGZC,EAAAA,IAHY;AAIZC,EAAAA,KAJY;AAKZC,EAAAA;AALY,CAAD,KAMP;AACJF,EAAAA,IAAI,GAAGA,IAAI,IAAI;AAACG,IAAAA,EAAE,EAAEC,SAAL;AAAgBC,IAAAA,IAAI,EAAED,SAAtB;AAAiCE,IAAAA,QAAQ,EAAEF;AAA3C,GAAf;AACA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEL,IAAZ;AAAkB,IAAA,IAAI,EAAEC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF;AAMD,CAdD,C,CAeA;AACA;AACA;;;AACAH,IAAI,CAACU,SAAL,GAAiB;AACfC,EAAAA,EAAE,EAAElB,MADW;AAEfW,EAAAA,KAAK,EAAEX,MAAM,CAACmB,UAFC;AAGfP,EAAAA,IAAI,EAAEd,MAAM,CAACqB,UAHE;AAGU;AACzBV,EAAAA,IAAI,EAAET,MAAM,CAACmB,UAJE;AAKfT,EAAAA,IAAI,EAAEV;AALS,CAAjB,C,CAOA;;AACA,MAAMoB,eAAe,GAAGC,KAAK,KAAK;AAChCH,EAAAA,EAAE,EAAEd,KAAK,CAACiB,KAAD,CADuB;AAEhCV,EAAAA,KAAK,EAAEV,QAAQ,CAACoB,KAAD,CAFiB;AAGhCT,EAAAA,IAAI,EAAET,OAAO,CAACkB,KAAD,CAHmB;AAIhCZ,EAAAA,IAAI,EAAEP,OAAO,CAACmB,KAAD,CAJmB;AAKhCX,EAAAA,IAAI,EAAEL,8BAA8B,CAACgB,KAAD,CALJ,CAMhC;AACA;;AAPgC,CAAL,CAA7B;;AAUA,MAAMC,OAAO,GAAG;AACd;AACAC,EAAAA;AAFc,CAAhB;AAKA,eAAe7B,OAAO,CAAC0B,eAAD,CAAP,CAAyBb,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bool, array, func, string, number, object } from 'prop-types';\nimport { getUsers, getGame, getHost, getMe, getMoveSelectionsForActiveGame } from '../../selectors/';\nimport Game from '../../components/Game';\n\nconst Room = ({\n  active,\n  game,\n  move,\n  users,\n  host,\n}) => {\n  move = move || {to: undefined, from: undefined, captured: undefined};\n  return (\n    <div className=\"room-container\">\n      <Game game={game} move={move}/>\n      <button>Play</button>\n    </div>\n  );\n}\n//<PlayerHeader user={}/>\n//\n//<PlayerHeader user={}/>\nRoom.propTypes = {\n  me: object,\n  users: object.isRequired,\n  host: string.isRequired, //userID string?\n  game: object.isRequired,\n  move: object,\n};\n//TODO: make selectors\nconst mapStateToProps = state => ({\n  me: getMe(state),\n  users: getUsers(state),\n  host: getHost(state),\n  game: getGame(state),\n  move: getMoveSelectionsForActiveGame(state),\n  //errorMessage: getErrorMessage(state),\n  //modalMessage: getModalMessage(state),\n});\n\nconst actions = {\n  /*cacheMove,*/\n  submitMove,\n};\n\nexport default connect(mapStateToProps)(Room);\n"]},"metadata":{},"sourceType":"module"}