{"ast":null,"code":"var _jsxFileName = \"/Users/bacchus/git/Leap/client/src/containers/App/index.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { bool, array, func, string, number, object } from 'prop-types';\nimport { getMe, getIsLoggedIn } from '../../selectors/';\nimport ViewStack from '../ViewStack/';\nimport Room from '../Room/';\nimport BottomNavigation from '../BottomNavigation/';\nimport './App.css';\nimport './lib/fa/css/all.min.css';\n\nconst App = ({\n  me,\n  isLoggedIn\n}) => {\n  //const ClientSocket = React.createContext();\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"//\", React.createElement(ClientSocket.Provider, {\n    value: io,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, !isLoggedIn && React.createElement(Splash, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), \"//\", React.createElement(BannerContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), \"//\", React.createElement(HeaderContainer, {\n    me: me,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), \" //has settings at upper righthand //\", React.createElement(CreateGameModal, {\n    io: io,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(ViewStack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), \"//\", React.createElement(BottomNavigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), \"//\"));\n};\n\nApp.propTypes = {\n  me: object.isRequired,\n  isLoggedIn: bool.isRequired\n};\nconst actions = {\n  changeView\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nconst mapStateToProps = state => ({\n  me: getMe(state),\n  isLoggedIn: getIsLoggedIn(state)\n});\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/containers/App/index.js"],"names":["React","useState","connect","bindActionCreators","bool","array","func","string","number","object","getMe","getIsLoggedIn","ViewStack","Room","BottomNavigation","App","me","isLoggedIn","io","propTypes","isRequired","actions","changeView","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,MAA5C,QAA0D,YAA1D;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,kBAArC;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,IAAP,MAAiB,UAAjB;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAO,WAAP;AACA,OAAO,0BAAP;;AAEA,MAAMC,GAAG,GAAG,CAAC;AACXC,EAAAA,EADW;AAEXC,EAAAA;AAFW,CAAD,KAGN;AACJ;AACE,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAACD,UAAD,IAAe,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,QAEE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,QAGE,oBAAC,eAAD;AAAiB,IAAA,EAAE,EAAED,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,2CAIE,oBAAC,eAAD;AAAiB,IAAA,EAAE,EAAEE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,QAME,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,OADJ,CADF;AAYH,CAjBD;;AAmBAH,GAAG,CAACI,SAAJ,GAAgB;AACdH,EAAAA,EAAE,EAAEP,MAAM,CAACW,UADG;AAEdH,EAAAA,UAAU,EAAEb,IAAI,CAACgB;AAFH,CAAhB;AAKA,MAAMC,OAAO,GAAG;AACZC,EAAAA;AADY,CAAhB;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAIrB,kBAAkB,CAACkB,OAAD,EAAUG,QAAV,CAAzD;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,EAAE,EAAEN,KAAK,CAACgB,KAAD,CADuB;AAEhCT,EAAAA,UAAU,EAAEN,aAAa,CAACe,KAAD;AAFO,CAAL,CAA7B;;AAKA,eAAexB,OAAO,CAACuB,eAAD,CAAP,CAAyBV,GAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { bool, array, func, string, number, object } from 'prop-types';\nimport { getMe, getIsLoggedIn } from '../../selectors/';\nimport ViewStack from '../ViewStack/';\nimport Room from '../Room/';\nimport BottomNavigation from '../BottomNavigation/';\nimport './App.css';\nimport './lib/fa/css/all.min.css';\n\nconst App = ({\n  me,\n  isLoggedIn,\n}) => {\n  //const ClientSocket = React.createContext();\n    return (\n      <div className=\"App\">\n        //<ClientSocket.Provider value={io}>\n          {!isLoggedIn && <Splash/>}\n          //<BannerContainer />\n          //<HeaderContainer me={me}/> //has settings at upper righthand\n          //<CreateGameModal io={io}/>\n          <ViewStack/>\n          //<BottomNavigation/>\n        //</ClientSocket.Provider>\n      </div>\n    );\n};\n\nApp.propTypes = {\n  me: object.isRequired,\n  isLoggedIn: bool.isRequired,\n}\n\nconst actions = {\n    changeView,\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nconst mapStateToProps = state => ({\n  me: getMe(state),\n  isLoggedIn: getIsLoggedIn(state),\n});\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}