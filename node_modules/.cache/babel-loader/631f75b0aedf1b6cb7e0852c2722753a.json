{"ast":null,"code":"import _slicedToArray from \"/Users/bacchus/git/Leap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bacchus/git/Leap/src/NavModalContent.js\";\nimport React, { useState } from 'react';\nimport './css/menu.css';\nimport Slider from 'rc-slider';\nimport { CSSTransition } from 'react-transition-group';\nimport 'rc-slider/assets/index.css';\n\nfunction NavModalContent(props) {\n  const modalType = {\n    'stats': React.createElement(NewGame, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }),\n    'create': React.createElement(NewGame, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }),\n    'friends': React.createElement(NewGame, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })\n  };\n  return React.createElement(\"div\", {\n    className: \"nav-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, modalType[props.type]);\n} //playmode\n//FriendRow\n\n\nfunction NewGame() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        mode = _useState2[0],\n        setMode = _useState2[1]; //render. active modes?\n\n\n  return React.createElement(\"div\", {\n    className: \"nav-modal-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"playmode-btn-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"playmode-sp-btn\",\n    onClick: () => setMode(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user fa-2x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), \"Singleplayer\"), React.createElement(\"div\", {\n    className: \"playmode-mp-btn\",\n    onClick: () => setMode(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user-friends fa-2x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), \"Multiplayer\")), React.createElement(CSSTransition, {\n    in: mode,\n    classNames: \"playmode-container\",\n    timeout: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"playmode-config\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Difficulty\", React.createElement(Slider, {\n    dots: true,\n    step: 10,\n    defaultValue: 50,\n    onAfterChange: console.log('ye'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"sp-player-goes-first\",\n    name: \"Player goes first\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), React.createElement(CSSTransition, {\n    in: !mode,\n    classNames: \"playmode-container\",\n    timeout: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"playmode-config\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mp-options-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    /*TODO: only appear when required input satisfied (sp: just click the playmode, mp: select one of three options)*/\n    className: \"start-game-btn\",\n    onClick: () => console.log(\"beginGame(difficulty, playerGoesFirst, colors)\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Start\"));\n}\n\nexport default NavModalContent;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/src/NavModalContent.js"],"names":["React","useState","Slider","CSSTransition","NavModalContent","props","modalType","type","NewGame","mode","setMode","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './css/menu.css';\nimport Slider from 'rc-slider';\nimport { CSSTransition } from 'react-transition-group';\nimport 'rc-slider/assets/index.css'\n\n\nfunction NavModalContent(props){\n  const modalType = {\n    'stats':    <NewGame/>,\n    'create':   <NewGame/>,\n    'friends':  <NewGame/>\n  };\n\n  return (\n    <div className='nav-modal'>\n     { modalType[props.type] }\n    </div>\n  );\n}\n//playmode\n//FriendRow\n\nfunction NewGame() {\n  const [mode, setMode] = useState(false);\n\n        //render. active modes?\n  return (<div className='nav-modal-container'>\n    <div className='playmode-btn-container'>\n      <div className='playmode-sp-btn' onClick={ () => setMode(true) }>\n        <i className='fas fa-user fa-2x'/>\n        Singleplayer\n      </div>\n      <div className='playmode-mp-btn' onClick={ () => setMode(false) }>\n        <i className='fas fa-user-friends fa-2x'/>\n        Multiplayer\n      </div>\n    </div>\n    <CSSTransition\n      in={mode}\n      classNames= 'playmode-container'\n      timeout={0}\n    >\n      <div className='playmode-config'>\n        Difficulty\n        <Slider dots\n          step={10}\n          defaultValue={50}\n          onAfterChange={console.log('ye')}\n        />\n        <input type='checkbox' className='sp-player-goes-first' name='Player goes first'/>\n      </div>\n    </CSSTransition>\n    <CSSTransition\n      in={!mode}\n      classNames= 'playmode-container'\n      timeout={0}\n    >\n      <div className='playmode-config'>\n        <div className='mp-options-container'>\n\n        </div>\n      </div>\n    </CSSTransition>\n    <button /*TODO: only appear when required input satisfied (sp: just click the playmode, mp: select one of three options)*/\n      className='start-game-btn'\n      onClick={ () => console.log(\"beginGame(difficulty, playerGoesFirst, colors)\")}>\n      Start\n    </button>\n    </div>\n  );\n}\n\nexport default NavModalContent;\n"]},"metadata":{},"sourceType":"module"}