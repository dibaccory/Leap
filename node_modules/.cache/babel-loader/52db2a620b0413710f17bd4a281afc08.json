{"ast":null,"code":"function Util() {}\n\nUtil.prototype.cell_type = function (row, col) {\n  let type;\n\n  switch (true) {\n    case row == 1 && col == 2 || row == 6 && col == 5:\n      type = 2;\n      break;\n\n    case row == 3 && col == 2 || row == 4 && col == 5:\n      type = 3;\n      break;\n\n    case row == 4 && col == 2 || row == 3 && col == 5:\n      type = 4;\n      break;\n\n    case row == 5 && col == 3 || row == 2 && col == 4:\n      type = 5;\n      break;\n\n    case row == 5 && col == 4 || row == 2 && col == 3:\n      type = 6;\n      break;\n\n    case row == 6 && col == 2 || row == 1 && col == 5:\n      type = 7;\n      break;\n\n    default:\n      type = (row + col) % 2 == 0 ? 0 : 1;\n      break;\n  }\n\n  return type;\n};\n\nUtil.prototype.in_bounds = function (row, col) {\n  return (row > -1 || row < 8) && (col > -1 || col < 8);\n};\n\nmodule.exports = Util;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/src/js/util.js"],"names":["Util","prototype","cell_type","row","col","type","in_bounds","module","exports"],"mappings":"AAAA,SAASA,IAAT,GAAgB,CAEf;;AAEDA,IAAI,CAACC,SAAL,CAAeC,SAAf,GAA2B,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC9C,MAAIC,IAAJ;;AACA,UAAQ,IAAR;AACC,SAAMF,GAAG,IAAI,CAAP,IAAYC,GAAG,IAAI,CAApB,IAA2BD,GAAG,IAAI,CAAP,IAAYC,GAAG,IAAI,CAAnD;AACCC,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD,SAAMF,GAAG,IAAI,CAAP,IAAYC,GAAG,IAAI,CAApB,IAA2BD,GAAG,IAAI,CAAP,IAAYC,GAAG,IAAI,CAAnD;AACCC,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD,SAAMF,GAAG,IAAI,CAAP,IAAYC,GAAG,IAAI,CAApB,IAA2BD,GAAG,IAAI,CAAP,IAAYC,GAAG,IAAI,CAAnD;AACCC,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD,SAAMF,GAAG,IAAI,CAAP,IAAYC,GAAG,IAAI,CAApB,IAA2BD,GAAG,IAAI,CAAP,IAAYC,GAAG,IAAI,CAAnD;AACCC,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD,SAAMF,GAAG,IAAI,CAAP,IAAYC,GAAG,IAAI,CAApB,IAA2BD,GAAG,IAAI,CAAP,IAAYC,GAAG,IAAI,CAAnD;AACCC,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD,SAAMF,GAAG,IAAI,CAAP,IAAYC,GAAG,IAAI,CAApB,IAA2BD,GAAG,IAAI,CAAP,IAAYC,GAAG,IAAI,CAAnD;AACCC,MAAAA,IAAI,GAAG,CAAP;AACA;;AACD;AACCA,MAAAA,IAAI,GAAG,CAACF,GAAG,GAAGC,GAAP,IAAc,CAAd,IAAmB,CAAnB,GAAuB,CAAvB,GAA2B,CAAlC;AACA;AArBF;;AAuBA,SAAOC,IAAP;AACA,CA1BD;;AA4BAL,IAAI,CAACC,SAAL,CAAeK,SAAf,GAA2B,UAAUH,GAAV,EAAeC,GAAf,EAAoB;AAC9C,SAAQ,CAACD,GAAG,GAAG,CAAC,CAAP,IAAYA,GAAG,GAAG,CAAnB,MAA0BC,GAAG,GAAG,CAAC,CAAP,IAAYA,GAAG,GAAG,CAA5C,CAAR;AACA,CAFD;;AAIAG,MAAM,CAACC,OAAP,GAAiBR,IAAjB","sourcesContent":["function Util() {\n  \n}\n\nUtil.prototype.cell_type = function (row, col) {\n\tlet type;\n\tswitch (true) {\n\t\tcase (row == 1 && col == 2) || (row == 6 && col == 5):\n\t\t\ttype = 2;\n\t\t\tbreak;\n\t\tcase (row == 3 && col == 2) || (row == 4 && col == 5):\n\t\t\ttype = 3;\n\t\t\tbreak;\n\t\tcase (row == 4 && col == 2) || (row == 3 && col == 5):\n\t\t\ttype = 4;\n\t\t\tbreak;\n\t\tcase (row == 5 && col == 3) || (row == 2 && col == 4):\n\t\t\ttype = 5;\n\t\t\tbreak;\n\t\tcase (row == 5 && col == 4) || (row == 2 && col == 3):\n\t\t\ttype = 6;\n\t\t\tbreak;\n\t\tcase (row == 6 && col == 2) || (row == 1 && col == 5):\n\t\t\ttype = 7;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ttype = (row + col) % 2 == 0 ? 0 : 1;\n\t\t\tbreak;\n\t}\n\treturn type;\n}\n\nUtil.prototype.in_bounds = function (row, col) {\n\treturn ((row > -1 || row < 8) && (col > -1 || col < 8));\n}\n\nmodule.exports = Util;\n"]},"metadata":{},"sourceType":"module"}