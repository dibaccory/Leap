{"ast":null,"code":"import _objectSpread from \"/Users/bacchus/git/Leap/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { LOBBY } from '../constants/lobby.types';\nimport socket from '../socket';\n/*\nHome lobby: games user is currently allowed to be in (ongoing games, etc.)\n*/\n\nconst initialState = {\n  'Home': {\n    rooms: ['room1'],\n    //room ids contained here\n    activeRoom: 0\n  },\n  'Browse': {\n    rooms: ['room2'],\n    activeRoom: 0\n  }\n};\n\nfunction lobbyReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOBBY.ADD_ROOM:\n      socket.io.emit(LOBBY.ADD_ROOM, {});\n      break;\n\n    case LOBBY.REMOVE_ROOM:\n      break;\n\n    case LOBBY.UPDATE:\n      state = _objectSpread({}, state, {\n        'Home': {\n          rooms: Object.keys(action.payload.rooms)\n        }\n      });\n      break;\n\n    case LOBBY.TOGGLE_SCROLL:\n      break;\n\n    default:\n      return state;\n  }\n}\n\nexport default lobbyReducer;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/reducers/lobby.reducer.js"],"names":["LOBBY","socket","initialState","rooms","activeRoom","lobbyReducer","state","action","type","ADD_ROOM","io","emit","REMOVE_ROOM","UPDATE","Object","keys","payload","TOGGLE_SCROLL"],"mappings":";AAAA,SAAQA,KAAR,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA;;;;AAGA,MAAMC,YAAY,GAAG;AACjB,UAAQ;AACNC,IAAAA,KAAK,EAAE,CAAC,OAAD,CADD;AACY;AAClBC,IAAAA,UAAU,EAAE;AAFN,GADS;AAKjB,YAAU;AACRD,IAAAA,KAAK,EAAE,CAAC,OAAD,CADC;AAERC,IAAAA,UAAU,EAAE;AAFJ;AALO,CAArB;;AAWA,SAASC,YAAT,CAAuBC,KAAK,GAAGJ,YAA/B,EAA6CK,MAA7C,EAAqD;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACS,QAAX;AACER,MAAAA,MAAM,CAACS,EAAP,CAAUC,IAAV,CAAeX,KAAK,CAACS,QAArB,EAA+B,EAA/B;AACA;;AACF,SAAKT,KAAK,CAACY,WAAX;AACE;;AACF,SAAKZ,KAAK,CAACa,MAAX;AACEP,MAAAA,KAAK,qBAAOA,KAAP;AACH,gBAAQ;AACNH,UAAAA,KAAK,EAAEW,MAAM,CAACC,IAAP,CAAYR,MAAM,CAACS,OAAP,CAAeb,KAA3B;AADD;AADL,QAAL;AAIA;;AACF,SAAKH,KAAK,CAACiB,aAAX;AACE;;AACF;AACE,aAAOX,KAAP;AAfJ;AAiBD;;AAED,eAAeD,YAAf","sourcesContent":["import {LOBBY} from '../constants/lobby.types';\nimport socket from '../socket';\n/*\nHome lobby: games user is currently allowed to be in (ongoing games, etc.)\n*/\nconst initialState = {\n    'Home': {\n      rooms: ['room1'], //room ids contained here\n      activeRoom: 0,\n    },\n    'Browse': {\n      rooms: ['room2'],\n      activeRoom: 0,\n    },\n};\n\nfunction lobbyReducer (state = initialState, action) {\n  switch (action.type) {\n    case LOBBY.ADD_ROOM:\n      socket.io.emit(LOBBY.ADD_ROOM, {});\n      break;\n    case LOBBY.REMOVE_ROOM:\n      break;\n    case LOBBY.UPDATE:\n      state = {...state,\n        'Home': {\n          rooms: Object.keys(action.payload.rooms),\n        },}\n      break;\n    case LOBBY.TOGGLE_SCROLL:\n      break;\n    default:\n      return state;\n  }\n}\n\nexport default lobbyReducer;\n"]},"metadata":{},"sourceType":"module"}