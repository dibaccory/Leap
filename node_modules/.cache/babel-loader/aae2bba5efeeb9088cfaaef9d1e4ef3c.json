{"ast":null,"code":"var _jsxFileName = \"/Users/bacchus/git/Leap/src/NavigationModal.js\";\nimport React from 'react';\nimport './css/menu.css';\nimport Slider from 'react-input-slider';\n\nclass NavigationModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeNavItem: props.activeNavItem\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.activeNavItem !== this.state.activeNavItem;\n  }\n\n  render() {\n    return React.createElement(ModalContent, {\n      type: this.state.activeNavItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass ModalContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: props.type\n    };\n    this.modalType = {\n      'stats': React.createElement(Playmode, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }),\n      'create': React.createElement(Playmode, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }),\n      'friends': React.createElement(Playmode, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"nav-modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.modalType[this.state.type]);\n  }\n\n} //playmode\n//FriendRow\n\n\nclass Playmode extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      activePlaymode: ''\n    };\n  }\n\n  selectedPlayMode(mode) {\n    if (mode == this.state.activePlaymode) return;\n    this.setState({\n      activePlaymode: mode\n    });\n  }\n\n  render() {\n    switch (this.state.activePlaymode) {\n      case 'sp':\n        break;\n\n      case 'mp':\n        break;\n\n      default:\n        break; //render. active modes?\n\n        return React.createElement(\"div\", {\n          className: \"nav-modal-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"playmode-btn-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"playmode-sp-btn\",\n          onClick: this.selectedPlayMode('sp'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"playmode-mp-btn\",\n          onClick: this.selectedPlayMode('mp'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          id: \"sp\",\n          className: \"playmode-options-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          id: \"mp\",\n          className: \"playmode-options-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }));\n    }\n  }\n\n}\n\nexport default NavigationModal;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/src/NavigationModal.js"],"names":["React","Slider","NavigationModal","Component","constructor","props","state","activeNavItem","shouldComponentUpdate","nextProps","nextState","render","ModalContent","type","modalType","Playmode","activePlaymode","selectedPlayMode","mode","setState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './css/menu.css';\nimport Slider from 'react-input-slider';\n\nclass NavigationModal extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = { activeNavItem: props.activeNavItem };\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    return (nextProps.activeNavItem !== this.state.activeNavItem);\n  }\n\n  render() { return <ModalContent type={ this.state.activeNavItem }/>; }\n}\n\nclass ModalContent extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = { type: props.type };\n    this.modalType = {\n      'stats':    <Playmode/>,\n      'create':   <Playmode/>,\n      'friends':  <Playmode/>\n    };\n  }\n\n  render() { return (\n    <div className='nav-modal'>\n     { this.modalType[this.state.type] }\n    </div>);\n  }\n}\n//playmode\n//FriendRow\n\nclass Playmode extends React.Component {\n  constructor(){\n    super();\n    this.state = { activePlaymode: ''};\n  }\n  selectedPlayMode(mode) {\n    if( (mode == this.state.activePlaymode) ) return;\n    this.setState( {activePlaymode: mode} );\n  }\n\n  render() {\n    switch(this.state.activePlaymode) {\n      case 'sp':\n\n        break;\n      case 'mp':\n        break;\n      default:\n        break;\n        //render. active modes?\n        return (<div className='nav-modal-container'>\n          <div className='playmode-btn-container'>\n            <div className='playmode-sp-btn' onClick={ this.selectedPlayMode('sp') }></div>\n            <div className='playmode-mp-btn' onClick={ this.selectedPlayMode('mp') }></div>\n          </div>\n          <div id='sp' className='playmode-options-container'>\n          </div>\n          <div id='mp' className='playmode-options-container'>\n          </div>\n          </div>\n        );\n    }\n  }\n}\n\nexport default NavigationModal;\n"]},"metadata":{},"sourceType":"module"}