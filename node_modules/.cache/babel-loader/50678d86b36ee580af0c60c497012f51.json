{"ast":null,"code":"import { LOBBY } from '../constants/lobby.types';\n/*\nHome lobby: games user is currently allowed to be in (ongoing games, etc.)\n*/\n\nconst initialState = {\n  'Home': {\n    rooms: ['room1'],\n    //room ids contained here\n    activeRoom: 0\n  },\n  'Browse': {\n    rooms: ['room2'],\n    activeRoom: 0\n  }\n};\n\nfunction lobbyReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOBBY.ADD_ROOM:\n      //socket.io.emit('eventLobby', action);\n      break;\n\n    case LOBBY.REMOVE_ROOM:\n      break;\n\n    case LOBBY.UPDATE:\n      console.log(action.payload);\n      state['Browse'].rooms = Object.keys(action.payload);\n      break;\n\n    case LOBBY.TOGGLE_SCROLL:\n      break;\n\n    default:\n      return state;\n  }\n}\n\nexport default lobbyReducer;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/reducers/lobby.reducer.js"],"names":["LOBBY","initialState","rooms","activeRoom","lobbyReducer","state","action","type","ADD_ROOM","REMOVE_ROOM","UPDATE","console","log","payload","Object","keys","TOGGLE_SCROLL"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,0BAApB;AACA;;;;AAGA,MAAMC,YAAY,GAAG;AACjB,UAAQ;AACNC,IAAAA,KAAK,EAAE,CAAC,OAAD,CADD;AACY;AAClBC,IAAAA,UAAU,EAAE;AAFN,GADS;AAKjB,YAAU;AACRD,IAAAA,KAAK,EAAE,CAAC,OAAD,CADC;AAERC,IAAAA,UAAU,EAAE;AAFJ;AALO,CAArB;;AAWA,SAASC,YAAT,CAAuBC,KAAK,GAAGJ,YAA/B,EAA6CK,MAA7C,EAAqD;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,KAAK,CAACQ,QAAX;AACE;AACA;;AACF,SAAKR,KAAK,CAACS,WAAX;AACE;;AACF,SAAKT,KAAK,CAACU,MAAX;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACO,OAAnB;AACAR,MAAAA,KAAK,CAAC,QAAD,CAAL,CAAgBH,KAAhB,GAAwBY,MAAM,CAACC,IAAP,CAAYT,MAAM,CAACO,OAAnB,CAAxB;AACA;;AACF,SAAKb,KAAK,CAACgB,aAAX;AACE;;AACF;AACE,aAAOX,KAAP;AAbJ;AAeD;;AAED,eAAeD,YAAf","sourcesContent":["import {LOBBY} from '../constants/lobby.types';\n/*\nHome lobby: games user is currently allowed to be in (ongoing games, etc.)\n*/\nconst initialState = {\n    'Home': {\n      rooms: ['room1'], //room ids contained here\n      activeRoom: 0,\n    },\n    'Browse': {\n      rooms: ['room2'],\n      activeRoom: 0,\n    },\n};\n\nfunction lobbyReducer (state = initialState, action) {\n  switch (action.type) {\n    case LOBBY.ADD_ROOM:\n      //socket.io.emit('eventLobby', action);\n      break;\n    case LOBBY.REMOVE_ROOM:\n      break;\n    case LOBBY.UPDATE:\n      console.log(action.payload);\n      state['Browse'].rooms = Object.keys(action.payload);\n      break;\n    case LOBBY.TOGGLE_SCROLL:\n      break;\n    default:\n      return state;\n  }\n}\n\nexport default lobbyReducer;\n"]},"metadata":{},"sourceType":"module"}