{"ast":null,"code":"import _slicedToArray from \"/Users/bacchus/git/Leap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bacchus/git/Leap/src/Menu.js\";\nimport React, { useState } from 'react';\nimport './css/menu.css';\nimport './lib/fa/css/all.min.css';\nimport NavigationModal from './NavigationModal';\nimport { CSSTransition } from 'react-transition-group';\n\nclass Menu extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      activeNavItem: ''\n    };\n    this.openNavModal = this.openNavModal.bind(this);\n  }\n\n  openNavModal(activeItem) {\n    if (activeItem !== this.state.activeNavItem) this.setState({\n      activeNavItem: activeItem\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"hoollo\");\n  }\n\n  render() {\n    //Animate <Intro> on start up, fade in rest of Menu\n    return React.createElement(\"div\", {\n      className: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"menu-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Leap\"), React.createElement(Settings, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(NavigationModal, {\n      activeNavItem: this.state.activeNavItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(NavigationContainer, {\n      openNavModal: this.openNavModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass SettingsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: ''\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.wrapperRef = React.createRef();\n  }\n\n  handleClick(activeItem) {\n    if (this.settingsItems[activeItem].type === 'toggle') {\n      this.settingsItems[activeItem].crossed = !this.settingsItems[activeItem].crossed;\n    }\n  }\n\n  toggleContainer() {\n    this.wrapperRef.current.classList.toggle('active'); //this.setState({condition: !this.state.condition});\n  }\n\n  render() {\n    const settingsItems = Object.values(this.settingsItems).map((item, i) => React.createElement(SettingsItem, {\n      key: i,\n      item: item,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-cog\",\n      onClick: () => this.toggleContainer(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"settings-container\",\n      ref: this.wrapperRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, settingsItems));\n  }\n\n}\n\nfunction Settings() {\n  const options = {\n    'sfx': {\n      text: 'SFX',\n      icon: 'fas fa-volume-down',\n      type: 'toggle',\n      crossed: false\n    },\n    'music': {\n      text: 'Music',\n      icon: 'fas fa-music',\n      type: 'toggle',\n      crossed: false\n    },\n    'ads': {\n      text: 'Ads',\n      icon: 'fas fa-ad',\n      type: 'page'\n    }\n  };\n  let containerToggle = false;\n\n  const _useState = useState(containerToggle),\n        _useState2 = _slicedToArray(_useState, 2),\n        container = _useState2[0],\n        showContainer = _useState2[1];\n\n  const settingsItems = Object.values(options).map((item, i) => React.createElement(SettingsItem, {\n    key: i,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: \"settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-cog\",\n    onClick: () => showContainer(!containerToggle),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(CSSTransition, {\n    in: container,\n    timeout: 200,\n    unMountOnExit: true,\n    classNames: \"settings-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, settingsItems)));\n}\n\nclass NavigationContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeNavItem: props.activeNavItem,\n      activeItemPos: 0,\n      activeItemColor: '',\n      menuItems: [{\n        text: 'Stats',\n        icon: 'fas fa-medal',\n        active: false\n      }, {\n        text: 'Create',\n        icon: 'fas fa-plus',\n        ready: false,\n        active: false\n      }, {\n        text: 'Friends',\n        icon: 'fas fa-users',\n        active: false\n      }]\n    };\n    this.openNavModal = props.openNavModal;\n  }\n\n  render() {\n    const navItems = this.state.menuItems.map((item, i) => React.createElement(NavItem, {\n      key: i,\n      item: item,\n      openNavModal: this.openNavModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"nav-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \" \", navItems, \" \");\n  }\n\n}\n\nfunction NavItem(props) {\n  let id = props.item.text.toLowerCase();\n  let classes = 'nav-item';\n  classes += props.item.ready ? ' ready' : '';\n  classes += props.item.active ? ' active' : '';\n  return React.createElement(\"div\", {\n    className: classes,\n    id: id,\n    onClick: () => props.openNavModal(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: props.item.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }));\n}\n\nfunction SettingsItem(props) {\n  let id = props.item.text.toLowerCase();\n  let classes = 'settings-item';\n\n  if (props.item.type === 'toggle') {\n    classes += props.item.crossed ? ' crossed' : '';\n  }\n\n  return React.createElement(\"div\", {\n    className: classes,\n    id: id\n    /*onClick={ () => props.handleClick(id) }*/\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: props.item.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }));\n}\n\nexport default Menu;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/src/Menu.js"],"names":["React","useState","NavigationModal","CSSTransition","Menu","Component","constructor","state","activeNavItem","openNavModal","bind","activeItem","setState","componentDidUpdate","prevProps","prevState","console","log","render","SettingsContainer","props","handleClick","wrapperRef","createRef","settingsItems","type","crossed","toggleContainer","current","classList","toggle","Object","values","map","item","i","Settings","options","text","icon","containerToggle","container","showContainer","NavigationContainer","activeItemPos","activeItemColor","menuItems","active","ready","navItems","NavItem","id","toLowerCase","classes","SettingsItem"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './css/menu.css';\nimport './lib/fa/css/all.min.css';\nimport NavigationModal from './NavigationModal';\nimport { CSSTransition } from 'react-transition-group';\n\nclass Menu extends React.Component {\n  constructor() {\n    super();\n\n    this.state = { activeNavItem: '' };\n\n    this.openNavModal = this.openNavModal.bind(this);\n    }\n\n    openNavModal(activeItem) {\n      if (activeItem !== this.state.activeNavItem) this.setState({activeNavItem: activeItem});\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      console.log(\"hoollo\");\n    }\n\n  render() {\n    //Animate <Intro> on start up, fade in rest of Menu\n\n    return (\n      <div className='menu'>\n        <div className='menu-title'>Leap</div>\n        <Settings/>\n        <NavigationModal activeNavItem = { this.state.activeNavItem }/>\n        <NavigationContainer openNavModal = { this.openNavModal }/>\n      </div>\n    )\n  }\n}\n\nclass SettingsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { activeItem: ''};\n\n\n\n    this.handleClick = this.handleClick.bind(this);\n    this.wrapperRef = React.createRef();\n\n  }\n  handleClick(activeItem) {\n      if(this.settingsItems[activeItem].type === 'toggle') {\n        this.settingsItems[activeItem].crossed = !this.settingsItems[activeItem].crossed;\n      }\n  }\n\n  toggleContainer() {\n    this.wrapperRef.current.classList.toggle('active');\n    //this.setState({condition: !this.state.condition});\n  }\n\n\n  render() {\n    const settingsItems = Object.values(this.settingsItems).map(\n      (item, i) => <SettingsItem key={ i }\n                                 item={ item }\n                                 handleClick = { this.handleClick }/> );\n    return ( <div className='settings'>\n        <i className='fas fa-cog' onClick = { () => this.toggleContainer() } />\n        <div className= 'settings-container' ref={ this.wrapperRef }>\n          { settingsItems }\n        </div>\n      </div> );\n  }\n}\n\nfunction Settings() {\n  const options= {\n      'sfx'   :{text: 'SFX', icon: 'fas fa-volume-down', type:'toggle', crossed: false},\n      'music' :{text: 'Music', icon: 'fas fa-music', type:'toggle', crossed: false},\n      'ads'   :{text: 'Ads', icon: 'fas fa-ad', type:'page'}\n    };\n  let containerToggle = false;\n  const [container, showContainer] = useState(containerToggle);\n  const settingsItems = Object.values(options).map( (item, i) =>\n    <SettingsItem\n      key={ i }\n      item={ item }\n    />\n  );\n  return ( <div className='settings'>\n      <i className='fas fa-cog' onClick = { () => showContainer(!containerToggle) } />\n      <CSSTransition\n        in={container}\n        timeout={200}\n        unMountOnExit\n        classNames= 'settings-container'\n      >\n        <div>{settingsItems}</div>\n      </CSSTransition>\n    </div>\n  );\n}\n\nclass NavigationContainer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      activeNavItem: props.activeNavItem,\n      activeItemPos: 0,\n      activeItemColor: '',\n      menuItems: [\n        {text: 'Stats', icon: 'fas fa-medal', active: false},\n        {text: 'Create', icon: 'fas fa-plus', ready: false, active: false},\n        {text: 'Friends', icon: 'fas fa-users', active: false}\n      ],\n    };\n\n    this.openNavModal = props.openNavModal;\n  }\n\n  render() {\n    const navItems = this.state.menuItems.map(\n      (item, i) => <NavItem key={ i }\n                            item={ item }\n                            openNavModal = { this.openNavModal }/> );\n    return ( <div className='nav-container'> { navItems } </div> );\n  }\n}\n\nfunction NavItem(props) {\n  let id = props.item.text.toLowerCase();\n  let classes = 'nav-item';\n  classes += props.item.ready ? ' ready' : '';\n  classes += props.item.active ? ' active': '';\n  return ( <div className= { classes } id={ id } onClick={ () => props.openNavModal(id) }>\n      <i className= { props.item.icon } ></i>\n    </div> );\n}\n\nfunction SettingsItem(props) {\n  let id = props.item.text.toLowerCase();\n  let classes = 'settings-item';\n  if(props.item.type === 'toggle'){\n    classes += props.item.crossed ? ' crossed' : '';\n  }\n  return ( <div className= { classes } id={ id } /*onClick={ () => props.handleClick(id) }*/>\n    <i className= { props.item.icon } ></i>\n  </div> );\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}