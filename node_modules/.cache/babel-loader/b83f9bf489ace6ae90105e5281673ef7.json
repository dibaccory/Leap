{"ast":null,"code":"import _objectSpread from \"/Users/bacchus/git/Leap/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { LOBBY, ROOM, GAME } from '../constants/'; //import socket from '../socket';\n\nimport Leap from '../assets/leap';\nconst game = new Leap(4, 8, 0);\nconst initialState = {};\n\nfunction roomReducer(state = initialState, action) {\n  switch (action.type) {\n    case ROOM.ENTER:\n      //socket.io.emit('roomAction', action);\n      break;\n\n    case ROOM.EXIT:\n      break;\n\n    case GAME.MOVE_READY:\n      //selectcell logic in here... when submiting move, confirm on server\n      break;\n\n    case ROOM.FETCH_ROOMS:\n      console.log('fetch rooms: %o', action);\n      state = _objectSpread({}, action.payload);\n      break;\n\n    case ROOM.UPDATE_GAME:\n      state.game = action.payload;\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n}\n\nexport default roomReducer;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/reducers/room.reducer.js"],"names":["LOBBY","ROOM","GAME","Leap","game","initialState","roomReducer","state","action","type","ENTER","EXIT","MOVE_READY","FETCH_ROOMS","console","log","payload","UPDATE_GAME"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,IAAtB,QAAkC,eAAlC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AAEA,MAAMC,IAAI,GAAG,IAAID,IAAJ,CAAU,CAAV,EAAY,CAAZ,EAAc,CAAd,CAAb;AAEA,MAAME,YAAY,GAAG,EAArB;;AAKA,SAASC,WAAT,CAAsBC,KAAK,GAAGF,YAA9B,EAA4CG,MAA5C,EAAoD;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,IAAI,CAACS,KAAV;AACE;AACA;;AACF,SAAKT,IAAI,CAACU,IAAV;AAEE;;AAEF,SAAKT,IAAI,CAACU,UAAV;AACE;AACA;;AAEF,SAAKX,IAAI,CAACY,WAAV;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BP,MAA/B;AACAD,MAAAA,KAAK,qBAAOC,MAAM,CAACQ,OAAd,CAAL;AACA;;AAEF,SAAKf,IAAI,CAACgB,WAAV;AACEV,MAAAA,KAAK,CAACH,IAAN,GAAaI,MAAM,CAACQ,OAApB;AACA;;AAEF;AAAS;AArBX;;AAuBA,SAAOT,KAAP;AACD;;AAED,eAAeD,WAAf","sourcesContent":["import { LOBBY, ROOM, GAME } from '../constants/';\n//import socket from '../socket';\nimport Leap from '../assets/leap';\n\nconst game = new Leap (4,8,0);\n\nconst initialState = {\n\n};\n\n\nfunction roomReducer (state = initialState, action) {\n  switch (action.type) {\n    case ROOM.ENTER:\n      //socket.io.emit('roomAction', action);\n      break;\n    case ROOM.EXIT:\n\n      break;\n\n    case GAME.MOVE_READY:\n      //selectcell logic in here... when submiting move, confirm on server\n      break;\n\n    case ROOM.FETCH_ROOMS:\n      console.log('fetch rooms: %o', action);\n      state = {...action.payload};\n      break;\n\n    case ROOM.UPDATE_GAME:\n      state.game = action.payload;\n      break;\n\n    default: break;\n  }\n  return state;\n}\n\nexport default roomReducer;\n"]},"metadata":{},"sourceType":"module"}