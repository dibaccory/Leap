{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar MapSchema =\n/** @class */\nfunction () {\n  function MapSchema(obj) {\n    var _this = this;\n\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    for (var key in obj) {\n      this[key] = obj[key];\n    }\n\n    Object.defineProperties(this, {\n      $changes: {\n        value: undefined,\n        enumerable: false,\n        writable: true\n      },\n      onAdd: {\n        value: undefined,\n        enumerable: false,\n        writable: true\n      },\n      onRemove: {\n        value: undefined,\n        enumerable: false,\n        writable: true\n      },\n      onChange: {\n        value: undefined,\n        enumerable: false,\n        writable: true\n      },\n      clone: {\n        value: function (isDecoding) {\n          var cloned;\n\n          if (isDecoding) {\n            // client-side\n            cloned = Object.assign(new MapSchema(), _this);\n            cloned.onAdd = _this.onAdd;\n            cloned.onRemove = _this.onRemove;\n            cloned.onChange = _this.onChange;\n          } else {\n            // server-side\n            var cloned_1 = new MapSchema();\n\n            for (var key in _this) {\n              if (typeof _this[key] === \"object\") {\n                cloned_1[key] = _this[key].clone();\n              } else {\n                cloned_1[key] = _this[key];\n              }\n            }\n          }\n\n          return cloned;\n        }\n      },\n      triggerAll: {\n        value: function () {\n          if (!_this.onAdd) {\n            return;\n          }\n\n          for (var key in _this) {\n            _this.onAdd(_this[key], key);\n          }\n        }\n      },\n      toJSON: {\n        value: function () {\n          var map = {};\n\n          for (var key in _this) {\n            map[key] = typeof _this[key].toJSON === \"function\" ? _this[key].toJSON() : _this[key];\n          }\n\n          return map;\n        }\n      },\n      _indexes: {\n        value: new Map(),\n        enumerable: false,\n        writable: true\n      },\n      _updateIndexes: {\n        value: function (allKeys) {\n          var index = 0;\n          var indexes = new Map();\n\n          for (var _i = 0, allKeys_1 = allKeys; _i < allKeys_1.length; _i++) {\n            var key = allKeys_1[_i];\n            indexes.set(key, index++);\n          }\n\n          _this._indexes = indexes;\n        }\n      }\n    });\n  }\n\n  return MapSchema;\n}();\n\nexports.MapSchema = MapSchema;","map":{"version":3,"sources":["../../src/types/MapSchema.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MapSchema = /** @class */ (function () {\n    function MapSchema(obj) {\n        var _this = this;\n        if (obj === void 0) { obj = {}; }\n        for (var key in obj) {\n            this[key] = obj[key];\n        }\n        Object.defineProperties(this, {\n            $changes: { value: undefined, enumerable: false, writable: true },\n            onAdd: { value: undefined, enumerable: false, writable: true },\n            onRemove: { value: undefined, enumerable: false, writable: true },\n            onChange: { value: undefined, enumerable: false, writable: true },\n            clone: {\n                value: function (isDecoding) {\n                    var cloned;\n                    if (isDecoding) {\n                        // client-side\n                        cloned = Object.assign(new MapSchema(), _this);\n                        cloned.onAdd = _this.onAdd;\n                        cloned.onRemove = _this.onRemove;\n                        cloned.onChange = _this.onChange;\n                    }\n                    else {\n                        // server-side\n                        var cloned_1 = new MapSchema();\n                        for (var key in _this) {\n                            if (typeof (_this[key]) === \"object\") {\n                                cloned_1[key] = _this[key].clone();\n                            }\n                            else {\n                                cloned_1[key] = _this[key];\n                            }\n                        }\n                    }\n                    return cloned;\n                }\n            },\n            triggerAll: {\n                value: function () {\n                    if (!_this.onAdd) {\n                        return;\n                    }\n                    for (var key in _this) {\n                        _this.onAdd(_this[key], key);\n                    }\n                }\n            },\n            toJSON: {\n                value: function () {\n                    var map = {};\n                    for (var key in _this) {\n                        map[key] = (typeof (_this[key].toJSON) === \"function\")\n                            ? _this[key].toJSON()\n                            : _this[key];\n                    }\n                    return map;\n                }\n            },\n            _indexes: { value: new Map(), enumerable: false, writable: true },\n            _updateIndexes: {\n                value: function (allKeys) {\n                    var index = 0;\n                    var indexes = new Map();\n                    for (var _i = 0, allKeys_1 = allKeys; _i < allKeys_1.length; _i++) {\n                        var key = allKeys_1[_i];\n                        indexes.set(key, index++);\n                    }\n                    _this._indexes = indexes;\n                }\n            },\n        });\n    }\n    return MapSchema;\n}());\nexports.MapSchema = MapSchema;\n//# sourceMappingURL=MapSchema.js.map"]},"metadata":{},"sourceType":"script"}