{"ast":null,"code":"var _jsxFileName = \"/Users/bacchus/git/Leap/client/src/containers/App/index.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { bool, array, func, string, number, object } from 'prop-types';\nimport { getMe, getIsLoggedIn } from '../../selectors/';\nimport { userLogin } from '../../actions/user';\nimport Socket from './socket';\nimport ViewStack from '../ViewStack/';\nimport Room from '../Room/';\nimport BottomNavigation from '../BottomNavigation/';\nimport './index.css'; //import './lib/fa/css/all.min.css';\n\nconst App = ({\n  me,\n  isLoggedIn\n}) => {\n  const socket = new Socket(store);\n  userLogin(me, socket.io); //const ClientSocket = React.createContext();\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(ViewStack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n}; //{!isLoggedIn && <Splash/>}\n//<BannerContainer />\n//<HeaderContainer me={me}/> //has settings at upper righthand\n//<CreateGameModal io={io}/>\n//<BottomNavigation/>\n\n\nApp.propTypes = {\n  me: object.isRequired,\n  isLoggedIn: bool.isRequired\n}; //\n\nconst actions = {\n  userLogin\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nconst mapStateToProps = state => ({\n  me: getMe(state),\n  isLoggedIn: getIsLoggedIn(state)\n});\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/containers/App/index.js"],"names":["React","useState","connect","bindActionCreators","bool","array","func","string","number","object","getMe","getIsLoggedIn","userLogin","Socket","ViewStack","Room","BottomNavigation","App","me","isLoggedIn","socket","store","io","propTypes","isRequired","actions","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,MAA5C,QAA0D,YAA1D;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,kBAArC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,IAAP,MAAiB,UAAjB;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAO,aAAP,C,CACA;;AAEA,MAAMC,GAAG,GAAG,CAAC;AACXC,EAAAA,EADW;AAEXC,EAAAA;AAFW,CAAD,KAGN;AACJ,QAAMC,MAAM,GAAG,IAAIP,MAAJ,CAAWQ,KAAX,CAAf;AACAT,EAAAA,SAAS,CAACM,EAAD,EAAKE,MAAM,CAACE,EAAZ,CAAT,CAFI,CAGJ;;AACE,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKH,CAZD,C,CAaA;AACA;AACA;AACA;AACA;;;AAEAL,GAAG,CAACM,SAAJ,GAAgB;AACdL,EAAAA,EAAE,EAAET,MAAM,CAACe,UADG;AAEdL,EAAAA,UAAU,EAAEf,IAAI,CAACoB;AAFH,CAAhB,C,CAIA;;AACA,MAAMC,OAAO,GAAG;AACZb,EAAAA;AADY,CAAhB;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,IAAIxB,kBAAkB,CAACsB,OAAD,EAAUE,QAAV,CAAzD;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,EAAE,EAAER,KAAK,CAACmB,KAAD,CADuB;AAEhCV,EAAAA,UAAU,EAAER,aAAa,CAACkB,KAAD;AAFO,CAAL,CAA7B;;AAKA,eAAe3B,OAAO,CAAC0B,eAAD,CAAP,CAAyBX,GAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { bool, array, func, string, number, object } from 'prop-types';\nimport { getMe, getIsLoggedIn } from '../../selectors/';\nimport { userLogin } from '../../actions/user';\nimport Socket from './socket';\nimport ViewStack from '../ViewStack/';\nimport Room from '../Room/';\nimport BottomNavigation from '../BottomNavigation/';\nimport './index.css';\n//import './lib/fa/css/all.min.css';\n\nconst App = ({\n  me,\n  isLoggedIn,\n}) => {\n  const socket = new Socket(store);\n  userLogin(me, socket.io);\n  //const ClientSocket = React.createContext();\n    return (\n      <div className=\"App\">\n        <ViewStack/>\n      </div>\n    );\n};\n//{!isLoggedIn && <Splash/>}\n//<BannerContainer />\n//<HeaderContainer me={me}/> //has settings at upper righthand\n//<CreateGameModal io={io}/>\n//<BottomNavigation/>\n\nApp.propTypes = {\n  me: object.isRequired,\n  isLoggedIn: bool.isRequired,\n}\n//\nconst actions = {\n    userLogin,\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nconst mapStateToProps = state => ({\n  me: getMe(state),\n  isLoggedIn: getIsLoggedIn(state),\n});\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}