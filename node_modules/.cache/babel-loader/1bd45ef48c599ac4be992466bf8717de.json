{"ast":null,"code":"var _jsxFileName = \"/Users/bacchus/git/Leap/src/Leap.js\";\nimport React, { Component } from 'react';\nimport './css/ui.css';\nimport Board from './js/board.js';\nimport Countdown from 'react-countdown-now';\n/*\nTODO:\nhighlight pieces\n\nGame description:\n\n\n\"How to Play\":\n-directions\n-tutorial?\n\nCheck HTML integrity (if somebody is editing it, get mad lol)\n\nmultiplayer\n\n\n\n*/\n\nconst BOARD_SIZE = 8;\nconst PLAYER_ONE = 1;\nconst PLAYER_TWO = 2;\nconst PLAYERS = {\n  [PLAYER_ONE]: {\n    name: \"Player One\",\n    class: \"player-one\"\n  },\n  [PLAYER_TWO]: {\n    name: \"Player Two\",\n    class: \"player-two\"\n  }\n};\nconst CELL_COLORS = [\"gray1\", \"gray2\", \"pink\", \"red\", \"orange\", \"yellow\", \"green\", \"blue\"];\n\nclass Leap extends Component {\n  constructor() {\n    super();\n    this.state = {\n      board: new Board(BOARD_SIZE, PLAYER_ONE, PLAYER_TWO),\n      turn: PLAYER_ONE,\n      continued_move: false,\n      selected_piece: null,\n      winner: null\n    };\n  } //React update method\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.turn != this.state.turn) {\n      let board = this.state.board;\n\n      if (!board.moves_left(this.state.turn)) {\n        console.log(\"${this.state.turn} has no more moves!\");\n        this.setState({\n          winner: this.next_player()\n        });\n      }\n    } else {//if is a move continuation, start the timer\n    }\n  }\n\n  select_cell(row, col, cell_highlighted) {\n    //If a move is not a continuation, default case,\n    if (!this.state.continued_move) {\n      if (this.can_select_piece(row, col)) this.set_piece(row, col);else if (this.state.selected_piece) this.handle_move(row, col);\n    } else if (cell_highlighted) this.handle_move(row, col); //if continuation + selects valid move\n\n  }\n\n  handle_move(row, col) {\n    //row, col of destination\n    console.log(\"handling move...\");\n    let board = this.state.board;\n    let sel = this.state.selected_piece;\n    let pi = board.board[sel.row][sel.col];\n\n    if (!board.valid_move(pi, row, col)) {\n      console.log(\"Invalid move!\");\n      return;\n    }\n\n    let piece_captured = board.do_move(pi, row, col); //If piece can phase, extend player turn to allow option\n\n    if (board.is_phase(p)) //if piece can be cloned, extend player turn to allow option\n      if (board.can_clone(pi)) {\n        board.make_clone(pi, cl_row, cl_col);\n        return;\n      } //if this move is a capturing move and there are more capturing moves\n\n    piece_captured && board.can_continue_turn(pi) ? this.setState({\n      board: board,\n      turn: this.state.turn,\n      continued_move: true,\n      selected_piece: {\n        row: row,\n        col: col\n      }\n    }) : this.setState({\n      board: board,\n      turn: next_player(this.state.turn),\n      selected_piece: null\n    });\n  }\n\n  can_select_piece(row, col) {\n    let s = this.state;\n    let cell = s.board.board[row][col];\n    if (cell !== null) return false;\n    let player = s.board.pieces[cell].player;\n    return player == s.turn;\n  }\n\n  set_piece(row, col) {\n    this.setState({\n      selected_piece: {\n        row: row,\n        col: col\n      }\n    });\n  }\n\n  next_player() {\n    return this.state.turn == PLAYER_ONE ? PLAYER_TWO : PLAYER_ONE;\n  }\n\n  restart() {\n    this.setState({\n      board: new Board(BOARD_SIZE, PLAYER_ONE, PLAYER_TWO),\n      turn: PLAYER_ONE,\n      selected_piece: null,\n      winner: null\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Leap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Leap\")), this.state.winner && React.createElement(Winner, {\n      player: this.state.winner,\n      restart: this.restart.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Current turn: \", PLAYERS[this.state.turn].name, React.createElement(\"span\", {\n      className: PLAYERS[this.state.turn].class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(Countdown, {\n      date: Date.now() + 10000,\n      intervalDelay: 0,\n      precision: 3,\n      autoStart: this.state.continued_move,\n      renderer: d => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"countdown-s\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, d.seconds), React.createElement(\"span\", {\n        className: \"countdown-ms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \":\", d.milliseconds)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(GameBoard, {\n      board: this.state.board,\n      selected_piece: this.state.selected_piece,\n      select_cell: this.select_cell.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction Winner(props) {\n  let player = PLAYERS[props.player].name;\n  return React.createElement(\"div\", {\n    id: \"winner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, player, \" has won the game!\"), React.createElement(\"button\", {\n    onClick: props.restart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Play again?\")));\n}\n\nclass GameBoard extends Component {\n  render() {\n    let selected_row = this.props.selected_piece ? this.props.selected_piece.row : null;\n    let rows = this.props.board.board.map((row, i) => {\n      return React.createElement(Row, {\n        key: i,\n        row: row,\n        selected_piece: i == selected_row ? this.props.selected_piece : null,\n        row_i: i,\n        pieces: this.props.board.pieces,\n        select_cell: this.props.select_cell,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \" \", rows, \" \");\n  }\n\n}\n\nclass Row extends Component {\n  render() {\n    let selected_col = this.props.selected_piece ? this.props.selected_piece.column : null;\n    let cells = this.props.row.map((cell, i) => {\n      return React.createElement(Cell, {\n        key: i,\n        val: cell != null ? this.props.pieces[cell] : null,\n        row: this.props.row_i,\n        column: i,\n        selected: i == selected_col ? true : false,\n        select_cell: this.props.select_cell,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \" \", cells, \" \");\n  }\n\n}\n\nclass Cell extends Component {\n  render() {\n    let color = CELL_COLORS[cell_type(this.props.row, this.props.column)];\n    let selection = this.props.selected ? \" selected\" : \"\";\n    let classes = \"cell \" + color + selection;\n    return React.createElement(\"div\", {\n      className: classes,\n      onClick: () => this.props.select_cell(this.props.row, this.props.column),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, this.props.val != null && React.createElement(Piece, {\n      piece: this.props.val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction Piece(props) {\n  console.log(props.piece);\n  let classes = \"\";\n\n  if (props.piece) {\n    classes += PLAYERS[props.piece.player].class;\n    if (props.piece.cloned) classes += \" cloned\";\n  }\n\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  });\n}\n\nexport default Leap;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/src/Leap.js"],"names":["React","Component","Board","Countdown","BOARD_SIZE","PLAYER_ONE","PLAYER_TWO","PLAYERS","name","class","CELL_COLORS","Leap","constructor","state","board","turn","continued_move","selected_piece","winner","componentDidUpdate","prevProps","prevState","moves_left","console","log","setState","next_player","select_cell","row","col","cell_highlighted","can_select_piece","set_piece","handle_move","sel","pi","valid_move","piece_captured","do_move","is_phase","p","can_clone","make_clone","cl_row","cl_col","can_continue_turn","s","cell","player","pieces","restart","render","logo","bind","Date","now","d","seconds","milliseconds","Winner","props","GameBoard","selected_row","rows","map","i","Row","selected_col","column","cells","row_i","Cell","color","cell_type","selection","selected","classes","val","Piece","piece","cloned"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA;;;;;;;;;;;;;;;;;;;AAmBA,MAAMC,UAAU,GAAG,CAAnB;AACA,MAAMC,UAAU,GAAG,CAAnB;AACA,MAAMC,UAAU,GAAG,CAAnB;AACA,MAAMC,OAAO,GAAG;AACd,GAACF,UAAD,GAAc;AACZG,IAAAA,IAAI,EAAE,YADM;AAEZC,IAAAA,KAAK,EAAE;AAFK,GADA;AAKd,GAACH,UAAD,GAAc;AACZE,IAAAA,IAAI,EAAE,YADM;AAEZC,IAAAA,KAAK,EAAE;AAFK;AALA,CAAhB;AAWA,MAAMC,WAAW,GAAG,CAAE,OAAF,EAAW,OAAX,EAAoB,MAApB,EAA4B,KAA5B,EAAmC,QAAnC,EAA6C,QAA7C,EAAuD,OAAvD,EAAgE,MAAhE,CAApB;;AAEA,MAAMC,IAAN,SAAmBV,SAAnB,CAA6B;AAC3BW,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,IAAIZ,KAAJ,CAAUE,UAAV,EAAsBC,UAAtB,EAAkCC,UAAlC,CAAT;AACCS,MAAAA,IAAI,EAAEV,UADP;AAECW,MAAAA,cAAc,EAAE,KAFjB;AAGCC,MAAAA,cAAc,EAAE,IAHjB;AAGuBC,MAAAA,MAAM,EAAE;AAH/B,KAAb;AAID,GAP0B,CAS3B;;;AACAC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAIA,SAAS,CAACN,IAAV,IAAkB,KAAKF,KAAL,CAAWE,IAAjC,EAAuC;AACrC,UAAID,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;;AACA,UAAI,CAACA,KAAK,CAACQ,UAAN,CAAiB,KAAKT,KAAL,CAAWE,IAA5B,CAAL,EAAwC;AACtCQ,QAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACA,aAAKC,QAAL,CAAc;AAACP,UAAAA,MAAM,EAAE,KAAKQ,WAAL;AAAT,SAAd;AACD;AACF,KAND,MAMO,CACL;AACD;AACF;;AAEDC,EAAAA,WAAW,CAACC,GAAD,EAAMC,GAAN,EAAWC,gBAAX,EAA6B;AACtC;AACA,QAAI,CAAC,KAAKjB,KAAL,CAAWG,cAAhB,EAAgC;AAC9B,UAAI,KAAKe,gBAAL,CAAsBH,GAAtB,EAA2BC,GAA3B,CAAJ,EAAqC,KAAKG,SAAL,CAAeJ,GAAf,EAAoBC,GAApB,EAArC,KACK,IAAI,KAAKhB,KAAL,CAAWI,cAAf,EAAgC,KAAKgB,WAAL,CAAiBL,GAAjB,EAAsBC,GAAtB;AACtC,KAHD,MAGO,IAAIC,gBAAJ,EAAsB,KAAKG,WAAL,CAAiBL,GAAjB,EAAsBC,GAAtB,EALS,CAKmB;;AAC1D;;AAEDI,EAAAA,WAAW,CAACL,GAAD,EAAMC,GAAN,EAAW;AAAE;AAEtBN,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,QAAIV,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACA,QAAIoB,GAAG,GAAG,KAAKrB,KAAL,CAAWI,cAArB;AACA,QAAIkB,EAAE,GAAGrB,KAAK,CAACA,KAAN,CAAYoB,GAAG,CAACN,GAAhB,EAAqBM,GAAG,CAACL,GAAzB,CAAT;;AACA,QAAI,CAACf,KAAK,CAACsB,UAAN,CAAiBD,EAAjB,EAAqBP,GAArB,EAA0BC,GAA1B,CAAL,EAAqC;AACnCN,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA;AACD;;AAED,QAAIa,cAAc,GAAGvB,KAAK,CAACwB,OAAN,CAAcH,EAAd,EAAkBP,GAAlB,EAAuBC,GAAvB,CAArB,CAXoB,CAapB;;AACA,QAAIf,KAAK,CAACyB,QAAN,CAAeC,CAAf,CAAJ,EAEA;AACA,UAAG1B,KAAK,CAAC2B,SAAN,CAAgBN,EAAhB,CAAH,EAAwB;AAEtBrB,QAAAA,KAAK,CAAC4B,UAAN,CAAiBP,EAAjB,EAAqBQ,MAArB,EAA6BC,MAA7B;AACA;AACD,OArBmB,CAuBpB;;AACCP,IAAAA,cAAc,IAAIvB,KAAK,CAAC+B,iBAAN,CAAwBV,EAAxB,CAAnB,GACE,KAAKV,QAAL,CAAc;AAACX,MAAAA,KAAK,EAAEA,KAAR;AAAeC,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAAhC;AAAsCC,MAAAA,cAAc,EAAE,IAAtD;AAA4DC,MAAAA,cAAc,EAAE;AAACW,QAAAA,GAAG,EAAEA,GAAN;AAAWC,QAAAA,GAAG,EAAEA;AAAhB;AAA5E,KAAd,CADF,GAEE,KAAKJ,QAAL,CAAc;AAACX,MAAAA,KAAK,EAAEA,KAAR;AAAeC,MAAAA,IAAI,EAAEW,WAAW,CAAC,KAAKb,KAAL,CAAWE,IAAZ,CAAhC;AAAmDE,MAAAA,cAAc,EAAE;AAAnE,KAAd,CAFF;AAGD;;AAEDc,EAAAA,gBAAgB,CAACH,GAAD,EAAMC,GAAN,EAAW;AACzB,QAAIiB,CAAC,GAAG,KAAKjC,KAAb;AACA,QAAIkC,IAAI,GAAGD,CAAC,CAAChC,KAAF,CAAQA,KAAR,CAAcc,GAAd,EAAmBC,GAAnB,CAAX;AACA,QAAIkB,IAAI,KAAK,IAAb,EAAmB,OAAO,KAAP;AACnB,QAAIC,MAAM,GAAGF,CAAC,CAAChC,KAAF,CAAQmC,MAAR,CAAeF,IAAf,EAAqBC,MAAlC;AACA,WAAOA,MAAM,IAAIF,CAAC,CAAC/B,IAAnB;AACD;;AAEDiB,EAAAA,SAAS,CAACJ,GAAD,EAAMC,GAAN,EAAW;AAChB,SAAKJ,QAAL,CAAc;AAACR,MAAAA,cAAc,EAAE;AAACW,QAAAA,GAAG,EAAEA,GAAN;AAAWC,QAAAA,GAAG,EAAEA;AAAhB;AAAjB,KAAd;AACH;;AAEDH,EAAAA,WAAW,GAAG;AACZ,WAAQ,KAAKb,KAAL,CAAWE,IAAX,IAAmBV,UAAnB,GAAgCC,UAAhC,GAA6CD,UAArD;AACD;;AAED6C,EAAAA,OAAO,GAAG;AACR,SAAKzB,QAAL,CAAc;AAAEX,MAAAA,KAAK,EAAE,IAAIZ,KAAJ,CAAUE,UAAV,EAAsBC,UAAtB,EAAkCC,UAAlC,CAAT;AACAS,MAAAA,IAAI,EAAEV,UADN;AACkBY,MAAAA,cAAc,EAAE,IADlC;AACwCC,MAAAA,MAAM,EAAE;AADhD,KAAd;AAED;;AAEDiC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEC,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,EAKI,KAAKvC,KAAL,CAAWK,MAAX,IAAqB,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWK,MAA3B;AAAmC,MAAA,OAAO,EAAE,KAAKgC,OAAL,CAAaG,IAAb,CAAkB,IAAlB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALzB,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB9C,OAAO,CAAC,KAAKM,KAAL,CAAWE,IAAZ,CAAP,CAAyBP,IAA5C,EAAiD;AAAM,MAAA,SAAS,EAAED,OAAO,CAAC,KAAKM,KAAL,CAAWE,IAAZ,CAAP,CAAyBN,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjD,CANF,EAOE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE6C,IAAI,CAACC,GAAL,KAAa,KAA9B;AACW,MAAA,aAAa,EAAE,CAD1B;AAEW,MAAA,SAAS,EAAE,CAFtB;AAGW,MAAA,SAAS,EAAE,KAAK1C,KAAL,CAAWG,cAHjC;AAIW,MAAA,QAAQ,EAAEwC,CAAC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACZ;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BA,CAAC,CAACC,OAAjC,CADY,EAEZ;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAiCD,CAAC,CAACE,YAAnC,CAFY,CAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAeE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAK7C,KAAL,CAAWC,KAA7B;AACW,MAAA,cAAc,EAAE,KAAKD,KAAL,CAAWI,cADtC;AAEW,MAAA,WAAW,EAAE,KAAKU,WAAL,CAAiB0B,IAAjB,CAAsB,IAAtB,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADF;AAqBD;;AAtG0B;;AA0G7B,SAASM,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAIZ,MAAM,GAAGzC,OAAO,CAACqD,KAAK,CAACZ,MAAP,CAAP,CAAsBxC,IAAnC;AACA,SACE;AAAK,IAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIwC,MAAJ,uBADF,EAEE;AAAQ,IAAA,OAAO,EAAEY,KAAK,CAACV,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF,CADF;AAQD;;AAED,MAAMW,SAAN,SAAwB5D,SAAxB,CAAkC;AAChCkD,EAAAA,MAAM,GAAG;AACP,QAAIW,YAAY,GAAG,KAAKF,KAAL,CAAW3C,cAAX,GAA4B,KAAK2C,KAAL,CAAW3C,cAAX,CAA0BW,GAAtD,GAA4D,IAA/E;AACA,QAAImC,IAAI,GAAG,KAAKH,KAAL,CAAW9C,KAAX,CAAiBA,KAAjB,CAAuBkD,GAAvB,CAA2B,CAACpC,GAAD,EAAMqC,CAAN,KAAY;AAChD,aAAO,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,CAAV;AACC,QAAA,GAAG,EAAErC,GADN;AAEC,QAAA,cAAc,EAAEqC,CAAC,IAAIH,YAAL,GAAoB,KAAKF,KAAL,CAAW3C,cAA/B,GAAgD,IAFjE;AAGC,QAAA,KAAK,EAAEgD,CAHR;AAIC,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAW9C,KAAX,CAAiBmC,MAJ1B;AAKC,QAAA,WAAW,EAAE,KAAKW,KAAL,CAAWjC,WALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAMD,KAPU,CAAX;AAQA,WAAQ;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAyBoC,IAAzB,MAAR;AACD;;AAZ+B;;AAelC,MAAMG,GAAN,SAAkBjE,SAAlB,CAA4B;AAC1BkD,EAAAA,MAAM,GAAG;AACP,QAAIgB,YAAY,GAAG,KAAKP,KAAL,CAAW3C,cAAX,GAA4B,KAAK2C,KAAL,CAAW3C,cAAX,CAA0BmD,MAAtD,GAA+D,IAAlF;AACA,QAAIC,KAAK,GAAG,KAAKT,KAAL,CAAWhC,GAAX,CAAeoC,GAAf,CAAmB,CAACjB,IAAD,EAAOkB,CAAP,KAAa;AAC1C,aAAO,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,CAAX;AACC,QAAA,GAAG,EAAElB,IAAI,IAAI,IAAR,GAAe,KAAKa,KAAL,CAAWX,MAAX,CAAkBF,IAAlB,CAAf,GAAyC,IAD/C;AAEC,QAAA,GAAG,EAAE,KAAKa,KAAL,CAAWU,KAFjB;AAGC,QAAA,MAAM,EAAEL,CAHT;AAIC,QAAA,QAAQ,EAAEA,CAAC,IAAIE,YAAL,GAAoB,IAApB,GAA2B,KAJtC;AAKC,QAAA,WAAW,EAAE,KAAKP,KAAL,CAAWjC,WALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAMD,KAPW,CAAZ;AAQA,WAAQ;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuB0C,KAAvB,MAAR;AACD;;AAZyB;;AAe5B,MAAME,IAAN,SAAmBtE,SAAnB,CAA6B;AAC3BkD,EAAAA,MAAM,GAAG;AACP,QAAIqB,KAAK,GAAG9D,WAAW,CAAC+D,SAAS,CAAC,KAAKb,KAAL,CAAWhC,GAAZ,EAAiB,KAAKgC,KAAL,CAAWQ,MAA5B,CAAV,CAAvB;AAEA,QAAIM,SAAS,GAAG,KAAKd,KAAL,CAAWe,QAAX,GAAsB,WAAtB,GAAoC,EAApD;AACA,QAAIC,OAAO,GAAG,UAAUJ,KAAV,GAAkBE,SAAhC;AACA,WACE;AAAK,MAAA,SAAS,EAAEE,OAAhB;AAAyB,MAAA,OAAO,EAAE,MAAM,KAAKhB,KAAL,CAAWjC,WAAX,CAAuB,KAAKiC,KAAL,CAAWhC,GAAlC,EAAuC,KAAKgC,KAAL,CAAWQ,MAAlD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,KAAL,CAAWiB,GAAX,IAAkB,IAAlB,IAA0B,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWiB,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD7B,CADF;AAKD;;AAX0B;;AAc7B,SAASC,KAAT,CAAelB,KAAf,EAAsB;AACpBrC,EAAAA,OAAO,CAACC,GAAR,CAAYoC,KAAK,CAACmB,KAAlB;AACA,MAAIH,OAAO,GAAG,EAAd;;AACA,MAAIhB,KAAK,CAACmB,KAAV,EAAiB;AACfH,IAAAA,OAAO,IAAIrE,OAAO,CAACqD,KAAK,CAACmB,KAAN,CAAY/B,MAAb,CAAP,CAA4BvC,KAAvC;AACA,QAAImD,KAAK,CAACmB,KAAN,CAAYC,MAAhB,EAAwBJ,OAAO,IAAI,SAAX;AACzB;;AACD,SAAQ;AAAK,IAAA,SAAS,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AACD;;AAED,eAAejE,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport './css/ui.css';\nimport Board from './js/board.js';\nimport Countdown from 'react-countdown-now';\n\n/*\nTODO:\nhighlight pieces\n\nGame description:\n\n\n\"How to Play\":\n-directions\n-tutorial?\n\nCheck HTML integrity (if somebody is editing it, get mad lol)\n\nmultiplayer\n\n\n\n*/\n\nconst BOARD_SIZE = 8;\nconst PLAYER_ONE = 1;\nconst PLAYER_TWO = 2;\nconst PLAYERS = {\n  [PLAYER_ONE]: {\n    name: \"Player One\",\n    class: \"player-one\"\n  },\n  [PLAYER_TWO]: {\n    name: \"Player Two\",\n    class: \"player-two\"\n  }\n}\n\nconst CELL_COLORS = [ \"gray1\", \"gray2\", \"pink\", \"red\", \"orange\", \"yellow\", \"green\", \"blue\"];\n\nclass Leap extends Component {\n  constructor() {\n    super();\n    this.state = { board: new Board(BOARD_SIZE, PLAYER_ONE, PLAYER_TWO),\n                  turn: PLAYER_ONE,\n                  continued_move: false,\n                  selected_piece: null, winner: null };\n  }\n\n  //React update method\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.turn != this.state.turn) {\n      let board = this.state.board;\n      if (!board.moves_left(this.state.turn)) {\n        console.log(\"${this.state.turn} has no more moves!\");\n        this.setState({winner: this.next_player()});\n      }\n    } else {\n      //if is a move continuation, start the timer\n    }\n  }\n\n  select_cell(row, col, cell_highlighted) {\n    //If a move is not a continuation, default case,\n    if (!this.state.continued_move) {\n      if (this.can_select_piece(row, col)) this.set_piece(row, col);\n      else if (this.state.selected_piece)  this.handle_move(row, col);\n    } else if (cell_highlighted) this.handle_move(row, col); //if continuation + selects valid move\n  }\n\n  handle_move(row, col) { //row, col of destination\n\n    console.log(\"handling move...\");\n    let board = this.state.board;\n    let sel = this.state.selected_piece;\n    let pi = board.board[sel.row][sel.col];\n    if (!board.valid_move(pi, row, col)) {\n      console.log(\"Invalid move!\");\n      return;\n    }\n\n    let piece_captured = board.do_move(pi, row, col);\n\n    //If piece can phase, extend player turn to allow option\n    if (board.is_phase(p))\n\n    //if piece can be cloned, extend player turn to allow option\n    if(board.can_clone(pi)) {\n\n      board.make_clone(pi, cl_row, cl_col);\n      return;\n    }\n\n    //if this move is a capturing move and there are more capturing moves\n    (piece_captured && board.can_continue_turn(pi))\n    ? this.setState({board: board, turn: this.state.turn, continued_move: true, selected_piece: {row: row, col: col}})\n    : this.setState({board: board, turn: next_player(this.state.turn), selected_piece: null});\n  }\n\n  can_select_piece(row, col) {\n    let s = this.state;\n    let cell = s.board.board[row][col];\n    if (cell !== null) return false;\n    let player = s.board.pieces[cell].player;\n    return player == s.turn;\n  }\n\n  set_piece(row, col) {\n      this.setState({selected_piece: {row: row, col: col}});\n  }\n\n  next_player() {\n    return (this.state.turn == PLAYER_ONE ? PLAYER_TWO : PLAYER_ONE);\n  }\n\n  restart() {\n    this.setState({ board: new Board(BOARD_SIZE, PLAYER_ONE, PLAYER_TWO),\n                  turn: PLAYER_ONE, selected_piece: null, winner: null });\n  }\n\n  render() {\n    return (\n      <div className=\"Leap\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>Leap</h2>\n        </div>\n        { this.state.winner && <Winner player={this.state.winner} restart={this.restart.bind(this)} /> }\n        <h3>Current turn: {PLAYERS[this.state.turn].name}<span className={PLAYERS[this.state.turn].class}></span></h3>\n        <Countdown date={Date.now() + 10000}\n                   intervalDelay={0}\n                   precision={3}\n                   autoStart={this.state.continued_move}\n                   renderer={d => <div>\n                      <span className=\"countdown-s\">{d.seconds}</span>\n                      <span className=\"countdown-ms\">:{d.milliseconds}</span>\n                   </div>}/>\n        <GameBoard board={this.state.board}\n                   selected_piece={this.state.selected_piece}\n                   select_cell={this.select_cell.bind(this)} />\n      </div>\n    );\n  }\n}\n\n\nfunction Winner(props) {\n  let player = PLAYERS[props.player].name;\n  return (\n    <div id=\"winner\">\n      <div>\n        <p>{player} has won the game!</p>\n        <button onClick={props.restart}>Play again?</button>\n      </div>\n    </div>\n  );\n}\n\nclass GameBoard extends Component {\n  render() {\n    let selected_row = this.props.selected_piece ? this.props.selected_piece.row : null;\n    let rows = this.props.board.board.map((row, i) => {\n      return <Row key={i}\n              row={row}\n              selected_piece={i == selected_row ? this.props.selected_piece : null}\n              row_i={i}\n              pieces={this.props.board.pieces}\n              select_cell={this.props.select_cell} />;\n    });\n    return (<div className=\"board\"> {rows} </div>)\n  }\n}\n\nclass Row extends Component {\n  render() {\n    let selected_col = this.props.selected_piece ? this.props.selected_piece.column : null;\n    let cells = this.props.row.map((cell, i) => {\n      return <Cell key={i}\n              val={cell != null ? this.props.pieces[cell] : null}\n              row={this.props.row_i}\n              column={i}\n              selected={i == selected_col ? true : false}\n              select_cell={this.props.select_cell} />\n    });\n    return (<div className=\"row\"> {cells} </div>)\n  }\n}\n\nclass Cell extends Component {\n  render() {\n    let color = CELL_COLORS[cell_type(this.props.row, this.props.column)];\n\n    let selection = this.props.selected ? \" selected\" : \"\";\n    let classes = \"cell \" + color + selection;\n    return (\n      <div className={classes} onClick={() => this.props.select_cell(this.props.row, this.props.column)}>\n        {this.props.val != null && <Piece piece={this.props.val} />}\n      </div>\n    )\n  }\n}\n\nfunction Piece(props) {\n  console.log(props.piece);\n  let classes = \"\";\n  if (props.piece) {\n    classes += PLAYERS[props.piece.player].class;\n    if (props.piece.cloned) classes += \" cloned\";\n  }\n  return (<div className={classes}></div>)\n}\n\nexport default Leap;\n"]},"metadata":{},"sourceType":"module"}