{"ast":null,"code":"var _jsxFileName = \"/Users/bacchus/git/Leap/client/src/components/Cell/index.js\";\nimport React from 'react';\nimport './index.css';\nimport { cellType, CELL_COLORS } from './util.js';\nexport const Cell = ({\n  cell,\n  index,\n  moveType,\n  highlight,\n  select\n}) => {\n  const color = CELL_COLORS[cellType(index)];\n  const status = moveType || (highlight ? 'possible' : '');\n  const classes = `cell ${color} ${status ? 'move-' + status : ''}`;\n  return React.createElement(\"div\", {\n    className: classes,\n    onClick: () => select(cell, index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, (cell & 12) > 0 && React.createElement(Piece, {\n    key: cell >> 5,\n    player: cell & 12,\n    cloned: (cell & 16) === 1,\n    status: status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n};\n\nconst Piece = props => {\n  const player = props.player,\n        cloned = props.cloned,\n        status = props.status;\n  console.log(player);\n  const pieceColor = player === 4 && 'white' || player === 12 && 'black' || 'superposed';\n  const classes = `piece ${cloned && 'cloned'} ${pieceColor}`;\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n};\n\nexport default Cell;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/components/Cell/index.js"],"names":["React","cellType","CELL_COLORS","Cell","cell","index","moveType","highlight","select","color","status","classes","Piece","props","player","cloned","console","log","pieceColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,WAApC;AAEA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA,SAAzB;AAAoCC,EAAAA;AAApC,CAAD,KAAkD;AACpE,QAAMC,KAAK,GAAGP,WAAW,CAACD,QAAQ,CAACI,KAAD,CAAT,CAAzB;AACA,QAAMK,MAAM,GAAIJ,QAAQ,KAAKC,SAAS,GAAG,UAAH,GAAgB,EAA9B,CAAxB;AACA,QAAMI,OAAO,GAAI,QAAOF,KAAM,IAAIC,MAAM,GAAG,UAAQA,MAAX,GAAoB,EAAI,EAAhE;AAEA,SACE;AAAK,IAAA,SAAS,EAAEC,OAAhB;AAAyB,IAAA,OAAO,EAAG,MAAMH,MAAM,CAACJ,IAAD,EAAOC,KAAP,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACD,IAAI,GAAG,EAAR,IAAc,CAAf,IAAqB,oBAAC,KAAD;AACrB,IAAA,GAAG,EAAEA,IAAI,IAAI,CADQ;AAErB,IAAA,MAAM,EAAEA,IAAI,GAAG,EAFM;AAGrB,IAAA,MAAM,EAAE,CAACA,IAAI,GAAG,EAAR,MAAgB,CAHH;AAIrB,IAAA,MAAM,EAAEM,MAJa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzB,CADF;AASD,CAdM;;AAgBP,MAAME,KAAK,GAAIC,KAAD,IAAW;AAAA,QACfC,MADe,GACYD,KADZ,CACfC,MADe;AAAA,QACPC,MADO,GACYF,KADZ,CACPE,MADO;AAAA,QACCL,MADD,GACYG,KADZ,CACCH,MADD;AAEvBM,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,QAAMI,UAAU,GAAIJ,MAAM,KAAK,CAAX,IAAgB,OAAjB,IAA8BA,MAAM,KAAK,EAAX,IAAiB,OAA/C,IAA2D,YAA9E;AACA,QAAMH,OAAO,GAAI,SAASI,MAAM,IAAI,QAAU,IAAGG,UAAW,EAA5D;AACA,SAAQ;AAAK,IAAA,SAAS,EAAEP,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AACD,CAND;;AAQA,eAAeR,IAAf","sourcesContent":["import React from 'react';\nimport './index.css';\nimport {cellType, CELL_COLORS} from './util.js';\n\nexport const Cell = ({ cell, index, moveType, highlight, select }) => {\n  const color = CELL_COLORS[cellType(index)];\n  const status =  moveType || (highlight ? 'possible' : '');\n  const classes = `cell ${color} ${(status ? 'move-'+status : '')}`;\n\n  return (\n    <div className={classes} onClick={ () => select(cell, index) }>\n      { ((cell & 12) > 0) && <Piece\n        key={cell >> 5}\n        player={cell & 12}\n        cloned={(cell & 16) === 1}\n        status={status} />}\n    </div>\n  );\n}\n\nconst Piece = (props) => {\n  const { player, cloned, status } = props;\n  console.log(player);\n  const pieceColor = (player === 4 && 'white') || (player === 12 && 'black') || 'superposed';\n  const classes = `piece ${(cloned && 'cloned')} ${pieceColor}`;\n  return (<div className={classes} ></div>);\n}\n\nexport default Cell;\n"]},"metadata":{},"sourceType":"module"}