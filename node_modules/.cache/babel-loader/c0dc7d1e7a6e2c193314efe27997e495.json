{"ast":null,"code":"var _jsxFileName = \"/Users/bacchus/git/Leap/client/src/containers/Lobby/Lobby.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Room from '../Room';\nimport crypto from 'crypto';\nimport { getLobbyRooms, getActiveRoom } from '../../selectors/';\nimport { lobbyUpdate, lobbyToggleScroll } from '../../actions/lobby';\nimport './Lobby.css';\n\nconst Lobby = ({\n  id,\n  rooms,\n  activeRoom\n}) => {\n  /*\n   TODO: add actions\n    load Games through up/down arrows + or - state roomIndex\n  */\n  const size = Object.keys(rooms).length;\n  let loadedRooms = [];\n\n  if (size > 1) {\n    const prev = Math.abs((activeRoom - 1) % size);\n    const next = (activeRoom + 1) % size;\n\n    for (let i = -1; i < 2; i++) {\n      loadedRooms.push(React.createElement(Room, {\n        key: i + 1,\n        room: rooms[(activeRoom + i) % size].id,\n        active: !i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n    }\n  } else {\n    loadedRooms.push(React.createElement(Room, {\n      key: 0,\n      room: rooms[activeRoom].id,\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"lobby-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, loadedRooms);\n}; //TODO: make selectors\n\n\nconst mapStateToProps = state => ({\n  rooms: getLobbyRooms(state),\n  activeRoom: getActiveRoom(state)\n});\n\nexport default connect(mapStateToProps)(Lobby);","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/containers/Lobby/Lobby.js"],"names":["React","connect","Room","crypto","getLobbyRooms","getActiveRoom","lobbyUpdate","lobbyToggleScroll","Lobby","id","rooms","activeRoom","size","Object","keys","length","loadedRooms","prev","Math","abs","next","i","push","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kBAA7C;AACA,SAASC,WAAT,EAAsBC,iBAAtB,QAA+C,qBAA/C;AAEA,OAAO,aAAP;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA,KAAL;AAAYC,EAAAA;AAAZ,CAAD,KAA6B;AAEzC;;;;AAIA,QAAMC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,MAAhC;AACA,MAAIC,WAAW,GAAG,EAAlB;;AACA,MAAIJ,IAAI,GAAG,CAAX,EAAc;AACZ,UAAMK,IAAI,GAAGC,IAAI,CAACC,GAAL,CAAU,CAACR,UAAU,GAAC,CAAZ,IAAeC,IAAzB,CAAb;AACA,UAAMQ,IAAI,GAAG,CAACT,UAAU,GAAC,CAAZ,IAAeC,IAA5B;;AACA,SAAK,IAAIS,CAAC,GAAC,CAAC,CAAZ,EAAeA,CAAC,GAAC,CAAjB,EAAoBA,CAAC,EAArB,EAAyB;AACvBL,MAAAA,WAAW,CAACM,IAAZ,CAAkB,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAED,CAAC,GAAC,CAAb;AAAgB,QAAA,IAAI,EAAEX,KAAK,CAAC,CAACC,UAAU,GAACU,CAAZ,IAAeT,IAAhB,CAAL,CAA2BH,EAAjD;AAAqD,QAAA,MAAM,EAAE,CAACY,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB;AACD;AACF,GAND,MAMO;AACLL,IAAAA,WAAW,CAACM,IAAZ,CAAiB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,CAAX;AAAc,MAAA,IAAI,EAAEZ,KAAK,CAACC,UAAD,CAAL,CAAkBF,EAAtC;AAA0C,MAAA,MAAM,EAAE,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB;AACD;;AAGD,SACE;AAAK,IAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIO,WADJ,CADF;AAMD,CAzBD,C,CA0BA;;;AACA,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,KAAK,EAAEN,aAAa,CAACoB,KAAD,CADY;AAEhCb,EAAAA,UAAU,EAAEN,aAAa,CAACmB,KAAD;AAFO,CAAL,CAA7B;;AAMA,eAAevB,OAAO,CAACsB,eAAD,CAAP,CAAyBf,KAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Room from '../Room';\nimport crypto from 'crypto';\nimport { getLobbyRooms, getActiveRoom } from '../../selectors/';\nimport { lobbyUpdate, lobbyToggleScroll } from '../../actions/lobby';\n\nimport './Lobby.css';\n\n\nconst Lobby = ({id, rooms, activeRoom}) => {\n\n  /*\n   TODO: add actions\n    load Games through up/down arrows + or - state roomIndex\n  */\n  const size = Object.keys(rooms).length;\n  let loadedRooms = [];\n  if (size > 1) {\n    const prev = Math.abs( (activeRoom-1)%size );\n    const next = (activeRoom+1)%size;\n    for (let i=-1; i<2; i++) {\n      loadedRooms.push( <Room key={i+1} room={rooms[(activeRoom+i)%size].id} active={!i} />);\n    }\n  } else {\n    loadedRooms.push(<Room key={0} room={rooms[activeRoom].id} active={true} />)\n  }\n\n\n  return (\n    <div className= \"lobby-container\">\n      { loadedRooms }\n    </div>\n  );\n\n};\n//TODO: make selectors\nconst mapStateToProps = state => ({\n  rooms: getLobbyRooms(state),\n  activeRoom: getActiveRoom(state),\n\n})\n\nexport default connect(mapStateToProps)(Lobby);\n"]},"metadata":{},"sourceType":"module"}