{"ast":null,"code":"var _jsxFileName = \"/Users/bacchus/git/Leap/client/src/App.js\";\nimport React, { useState } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport './css/App.css';\nimport './lib/fa/css/all.min.css';\nimport { CSSTransition } from 'react-transition-group';\nimport Settings from './Settings';\nimport Leap from './Leap';\nimport Menu from './Menu';\nconst CONFIG = {\n  id: '12345',\n  difficulty: 0,\n  online: true,\n  port: 3001,\n  player: {},\n  size: 8\n};\n\nclass App extends React.Component {\n  // add back   <Menu/>\n  //If roomURL isn't empty, then Multiplayer\n  //go to roomURL.\n  constructor() {\n    super();\n    this.socket = socketIOClient(`http://localhost:${CONFIG.port}`);\n    var name;\n\n    do {\n      name = prompt(\"username?\");\n    } while (!input);\n\n    const player = {\n      name: name,\n      bot: false,\n      color: 'white',\n      first: true\n    };\n    CONFIG.player = player;\n    this.socket.on('connect', () => {\n      this.socket.emit('login', {\n        player\n      });\n    });\n  }\n\n  componentDidMount() {//make new process on server to set CONFIG.port. right now it's static\n  }\n\n  test() {\n    this.socket.emit('gameCreate', {\n      id: '12345',\n      whitelist: false,\n      users: {}\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Settings, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      /*TODO: only appear when required input satisfied (sp: just click the playmode, mp: select one of three options)*/\n      className: \"start-game-btn\",\n      onClick: () => test(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Start\"), React.createElement(Leap, {\n      config: CONFIG,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bacchus/git/Leap/client/src/App.js"],"names":["React","useState","socketIOClient","CSSTransition","Settings","Leap","Menu","CONFIG","id","difficulty","online","port","player","size","App","Component","constructor","socket","name","prompt","input","bot","color","first","on","emit","componentDidMount","test","whitelist","users","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,eAAP;AACA,OAAO,0BAAP;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,EAAE,EAAE,OADS;AAEbC,EAAAA,UAAU,EAAE,CAFC;AAGbC,EAAAA,MAAM,EAAE,IAHK;AAIbC,EAAAA,IAAI,EAAE,IAJO;AAKbC,EAAAA,MAAM,EAAE,EALK;AAMbC,EAAAA,IAAI,EAAE;AANO,CAAf;;AASA,MAAMC,GAAN,SAAkBd,KAAK,CAACe,SAAxB,CAAkC;AAChC;AACA;AACA;AACAC,EAAAA,WAAW,GAAI;AACb;AACA,SAAKC,MAAL,GAAcf,cAAc,CAAE,oBAAmBK,MAAM,CAACI,IAAK,EAAjC,CAA5B;AACA,QAAIO,IAAJ;;AACA,OAAG;AAAEA,MAAAA,IAAI,GAAGC,MAAM,CAAC,WAAD,CAAb;AAA4B,KAAjC,QAAuC,CAACC,KAAxC;;AACA,UAAMR,MAAM,GAAG;AACbM,MAAAA,IAAI,EAAEA,IADO;AAEbG,MAAAA,GAAG,EAAE,KAFQ;AAGbC,MAAAA,KAAK,EAAE,OAHM;AAIbC,MAAAA,KAAK,EAAE;AAJM,KAAf;AAMAhB,IAAAA,MAAM,CAACK,MAAP,GAAgBA,MAAhB;AACA,SAAKK,MAAL,CAAYO,EAAZ,CAAe,SAAf,EAA0B,MAAK;AAC7B,WAAKP,MAAL,CAAYQ,IAAZ,CAAiB,OAAjB,EAA0B;AAACb,QAAAA;AAAD,OAA1B;AACD,KAFD;AAGD;;AAEDc,EAAAA,iBAAiB,GAAI,CACnB;AAED;;AAEDC,EAAAA,IAAI,GAAG;AACL,SAAKV,MAAL,CAAYQ,IAAZ,CAAiB,YAAjB,EAA+B;AAC7BjB,MAAAA,EAAE,EAAE,OADyB;AAE7BoB,MAAAA,SAAS,EAAE,KAFkB;AAG7BC,MAAAA,KAAK,EAAG;AAHqB,KAA/B;AAKD;;AAEDC,EAAAA,MAAM,GAAI;AACR,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAQ;AACN,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,OAAO,EAAG,MAAMH,IAAI,EAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFA,EAOA,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAGpB,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPA,CADF;AAUD;;AA7C+B;;AAkDlC,eAAeO,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport './css/App.css';\nimport './lib/fa/css/all.min.css';\nimport { CSSTransition } from 'react-transition-group';\nimport Settings from './Settings';\nimport Leap from './Leap';\nimport Menu from './Menu';\n\nconst CONFIG = {\n  id: '12345',\n  difficulty: 0,\n  online: true,\n  port: 3001,\n  player: {},\n  size: 8,\n};\n\nclass App extends React.Component {\n  // add back   <Menu/>\n  //If roomURL isn't empty, then Multiplayer\n  //go to roomURL.\n  constructor () {\n    super();\n    this.socket = socketIOClient(`http://localhost:${CONFIG.port}`);\n    var name;\n    do { name = prompt(\"username?\");}while(!input);\n    const player = {\n      name: name,\n      bot: false,\n      color: 'white',\n      first: true,\n    };\n    CONFIG.player = player;\n    this.socket.on('connect', ()=> {\n      this.socket.emit('login', {player});\n    });\n  }\n\n  componentDidMount () {\n    //make new process on server to set CONFIG.port. right now it's static\n\n  }\n\n  test() {\n    this.socket.emit('gameCreate', {\n      id: '12345',\n      whitelist: false,\n      users : {},\n    });\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n      <Settings/>\n      <button /*TODO: only appear when required input satisfied (sp: just click the playmode, mp: select one of three options)*/\n        className='start-game-btn'\n        onClick={ () => test() }>\n        Start\n      </button>\n      <Leap config={ CONFIG }/>\n      </div>);\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}